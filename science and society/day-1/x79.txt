are no way just prompting a model and

getting an answer and providing that

answer in the simplest way to the to the

user it actually takes a lot of

different technology pieces coming

together to make sure that these systems

these models are being complemented by a

set of techniques to reach the level of

complexity capability and reliability

needed by the real world applications

for example when we look into extending

the capabilities detecting

hallucinations fixing those

hallucinations we go to the path of

multi-agent orchestration and look into

different models complimenting each

other in its execution with the right

workflows and that becomes a really

capable way of putting these systems

into the world but the other part is

there are a lot of ideas from

verification from systems point of view

checking the correctness of solutions

that really hasn't been incorporated

into the llm execution yet but what I'm

seeing is that many ideas of Decades of

research from AI system statistics and

human AI interaction and collaboration

will make its way in into the stack that

we are building right now so what I see

at the end I don't think it's just going

to be the evolution of the models and

advances on the models but it's going to

be the whole set of ideas from different

disciplines in computer science and

Beyond coming together to make these

systems

happen um yeah I want to just

wholeheartedly agree with that idea that

people kind of focus on the models as

being everything's about the model and

they forget that there's a system that

this is built in and that system is also

a software system and it's also a it's a

soci technical system as well like

there's people there's processes there's

rules and I think there needs to be a

whole new discipline you mentioned this

earlier like a new way of doing thinking

about how you build Computing systems

