I
These are the offices of Frame Technology in San Jose, California.
They have Macintosh computers here, Sunwork stations, PC compatibles, but the common thread
that ties all their systems together is Unix.
All of a sudden, Unix is hot.
That nasty old operating system that used to be considered too difficult for most people
to use is slowly emerging as an operating system of choice, as users discover its power
and as vendors start to pedal it under a friendlier user interface.
Today, we take a look at the rebirth of Unix on this edition of the Computer Chronicles.
The Computer Chronicles is made possible in part by McGraw Hill, publishers of Byte magazine,
and VIX, the Byte Information Exchange.
In print and online, Byte and VIX serve computer professionals worldwide with detailed information
on new hardware, software, and technologies.
Welcome to the Computer Chronicles.
I'm Stuart Schiffay, and this is Gary Kildall.
Gary, this is Rick Davis of Frame Technology Corporation.
Rick is using what is unquestionably the most talked about new computer of the year, the
next computer from Steve Jobs.
Lots of interesting features we could point out about the next, but I want to focus on
the fact that it runs under Unix.
Unix has been around 18 years or more, but primarily in the university community, the
techie community.
All of a sudden, everyone is interested in Unix.
Why?
Well, Stuart, as you know, the traditional problem with Unix and PCs is that Unix really
requires a lot of computing power, a lot of central memory, a lot of backup storage,
of high performance processor, and we just haven't had that in PCs.
Now, we start to see the workstations come into the high-end PC market and the demand
for multitasking, multi-user systems.
Unix has written in C, gives us portability, relative portability across a lot of different
platforms like the next to Sun Apollo and so forth, and we're also seeing standards
evolve like object file formats, graphic standards, windowing standards, and so forth.
It makes really Unix very viable in the high-end PC market.
We're going to take a look at the power of Unix in its traditional workstation environment.
We'll see some of these new graphic user interfaces, and we'll take a look at the implementation
of one version of Unix on the Macintosh.
We begin with a background look at the evolution of Unix, and for that report, we go to the
University of California at Berkeley.
It began its life at Bell Labs in the early 1970s, won the endorsement of AT&T, and was
adopted by universities around the country, who appreciated its portability and its multitasking
talents.
It is Unix, an operating system with so many variants, you need a family tree to trace
its origins.
One of the earliest centers of Unix development is the University of California at Berkeley,
responsible for one of the main branches of Unix called BSD for Berkeley Software Distribution.
Berkeley got a fairly early version of Unix from Bell Labs and started writing additional
programs for it, started adding things.
When a larger version of many computers came out, Berkeley added a number of new features
to the system that took advantage of the new computer, and we did software the way people
wanted the software here.
As a result, there were a number of other universities and research labs that were interested in
the same thing.
The Unix operating system has special appeal to programmers because of its many programming
tools.
Unix is also multitasking, so several applications can be running simultaneously.
It is particularly suited to multi-user environments, and it offers structured programming, a way
to divide problems into smaller parcels.
On the other hand, the consequence of such diverse streams of development has been a
lack of standards.
To combine the best elements of those diverse strands is the latest challenge facing Unix.
In general, the standards have been picking and choosing among the different features
of different versions, and as a result, the standard versions will be not like any existing
version, they'll be someplace in the middle.
For example, a number of programs have options, and the standards will specify a smaller number
of options, then those will all be the same on every version.
Joining us in the studio now is Karen Losarty, Karen is product manager with Sun Microsystems.
Gary?
Karen, Unix has had sort of a bad reputation in the past for a number of items like reliability
and the lack of a good user interface and so forth.
How has that changed with Unix in the last few years?
Unix has gained a lot of momentum in the last several years, and there's reasons for that.
As you know, it's a very powerful operating system, and it supports multitasking so that
you can do more than one function at a time.
It also runs on a variety of hardware platforms, and many vendors in the industry do support
Unix today.
One of the most key things about Unix is that it supports a lot of hardware that run over
networks, very, very large networks.
What about the reliability issues?
Is that a problem anymore with Unix?
Not that we're finding at this time.
And how about the interface issue that Gary mentioned also?
Well, yes.
That has been an issue.
As you know, in universities today, a lot of developers learn Unix, they write C applications
and so forth, and they move out into the industry and write applications.
So there's a lot of support from the developers, and users find it hostile, and many of them
have been very, very, very afraid of it.
And this is one of the things you addressed with the open look, yes.
Correct.
Now, Karen, before we get into the demo, could you describe basically what kind of hardware
we're dealing with here?
This is a 386i, Sun 386i, and it provides you the ability to run both DOS and Unix on
the same screen.
So you could open a window and run a DOS application, another window, run a Unix application.
And what would the approximate cost of a piece of hardware like this cost, Gary?
Under $5,000.
Okay.
Okay, let's take a look at what you've got here.
This is a rather familiar looking interface, in fact, tell us about open look.
Okay.
Open look is a graphical user interface that was designed by Sun and AT&T in a joint
development effort.
It's a licensed technology from Xerox Corporation.
What I've done today is brought four applications that have actually implemented the open look
specification.
Open look is not a software product.
It's actually consists of two books.
It's a style guide for the developer on how to design an application and a specification
for the toolkit designer.
Okay, show us on the screen actually how you would use it.
Okay, so these are four applications.
We have here Sunright, which is what you see is what you get editor, Sun Paint, which is
a paint application or what we call a raster application.
This one is SunDraw, which is an object editor or a draw application.
This is a file manager.
This is critical.
This one allows you to see graphically the UNIX file system right on the machine.
As you know, most users that worked with UNIX and users today, raw commands on a command
line to get at their files.
It was all by memory.
This is one of the most integral parts of open look.
Show us how you'd use it now and get into one of these applications.
What we'll do is, first of all, what I'd like to show you is as you see on this area right
here is a control area and each one of these windows has one.
Notice that on there is buttons.
All these buttons have common labels.
As you can see, each one has file, view, edit.
What's remarkable about that is each application you go into, the learning curve goes way down.
For example, if I wanted to close this window, I simply click on the window mark and it becomes
an icon on the desktop.
Same thing again here and you can put them away on your desktop and rearrange them again
any way you wish.
Can you open up the paint box, for example?
Let's take a look at...
Yes.
This is the kind of interface that most users are familiar with.
Correct.
Nothing new here.
You're trying to make it comfortable with stuff that would exist.
Yes.
Some of the things, though, that are very nice about open look, though, is I can preview
my operations.
For example, on the file, it says open or save.
On view, it can be a canvas that brings up the appropriate window.
On edit, you can actually pin up a menu and you can move that to any location that you
wish.
What is beneficial for the user is that I do not have to go back up to the control area
to access the buttons all the time.
It's minimum mouse movement, which you don't have on other user interfaces.
Once I pull the pin, it goes away.
Same thing for each of the windows here.
Pull the pin.
It disappears.
Now, if we wanted to actually use this application, I can bring this up, select whichever one
I want to work with.
I can easily move it out of my way because I might want to do some other things and draw
right into the window.
At any time, I can also change the brush pattern, select any one of these.
Again, tell it to go away and change it.
Everything's very intuitive, very, very friendly.
One of the most important things, though, that I found working with the interface is
that other interfaces don't utilize is with the file manager, you can actually use something
called drag and drop.
If you wanted to actually load a file into the window, all I have to do is grab the icon,
position it over the window, and it actually loads that file into the window automatically.
Now, if the entire file is not showing on the screen, and we'll just put this one to
the back, I can actually use the scroll bars at any time to manipulate the window to see
the rest of the file.
If I stretch the window with what we call the resize corners in any one of the four
corners, then the actual scroll bars, if they're not needed, will go away.
In this case, not all of the file is still on the screen, so they're resident.
Now, are there a lot of applications being written out for OpenLook?
Yes.
Actually, we have over 1,500 applications that are being converted to support OpenLook.
What's real exciting is the applications that you see here today are shipping.
This is not vaporware, they're available.
We also have had early developers kits that our developers are taking, then they're actually
working and designing applications today.
Just returning very quickly, the price, I'm very amazed at the $5,000 price tag.
We have a vast array of workstations that CEN offers, and you can start at a very low
end and go very, very expensive.
This would not necessarily be the $5,000, it could be a 5,000.
Correct.
Karen, thank you very much for joining us.
You're very welcome.
We're familiar with Unix, of course, under many names and under many versions.
One of the popular versions of Unix is called SCO Xenix, developed by a company called the
Santa Cruz operation.
We have a report from Wendy Woods.
Open Desktop is the latest attempt to sell Unix to mainstream corporate America.
Open Desktop combines Xenix, Santa Cruz operations, form of Unix, which runs on PCs, with other
industry standard tools, and a graphical user interface called Motif.
It's all designed to offer a palatable form of Unix for general consumption.
These open system offerings have never before been available in this kind of a platform,
this widely available, pre-integrated, ready to go.
And that's really the value added of Open Desktop.
It's not a new product piece in itself, but it's the collection and standardization of
all the open system standards that are available today.
With Open Desktop, Windows display various applications running either on one's own PC
or on a mainframe.
