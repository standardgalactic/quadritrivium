En edustaa, mitä on komputationaalto- ja probabilistikin modellinen.
Minulla on modellinen ympäristö.
Minulla on kaksi esimerkkejä minun ympäristössä.
Yksi esimerkki on minun ympäristö,
ympäristö, jossa on ympäristö, jossa on ympäristö, jossa on ympäristö, jossa on ympäristö,
perché minulla oneldinen, pyrkkä, voussantkujalla ja punkaata,
mahdollisimman ajattav efficacies,
ja on Theirsyan ympäristö painke older
k oversee it around did it so the remaining grains are hard and durable.
So you can also hunt and durable concrete.
But the natural sand is limited resource and there was a need to find out
if we can use more artificially crushed stone.
I was working with concrete expert Hanne Jarven demz
Ja hän on tehnyt nämä eksperimentalista kastamista,
yhdistämistä eriaalista kastamista ja kastamista,
mitkä eriaalista kastamista ja niin edelleen.
Ja sitten hän esim.
200 eksperimentalista kastamista.
Ja tämä fenomaan ja mitä tapahtuu,
kun vettä on hattu, niin hän ei ole niin kompleksia,
että hän ei ole tämä kastamista, kastamista ja kastamista.
Mutta hän ei voi tehdä nämä eriaalista kastamista,
vaan esim. että maailmanneet
ja tehtävät tehtävät tehtävät
maailmanneet ja siellä on maailmanneet
jassä Beatin kaveraminen tai
hämmäinen saati jo silleen.
On潰ivää.
Hoit
taken to account, what type of natural sand you have, you could go even just 5% of natural sand.
The other example, so more recent one, very recent in collaboration with Sebastian Verber from Novartis,
where we want to estimate safe dosage for this immunosuppressant drug after liver transplant.
So when the body gets new liver, it recognizes that it's not the original part and tries to reject it,
and so this drug is given to cool down the immunosystem.
So we need to have the concentration of the drug in a body that there's enough to cool down the system.
So we want to have this drug concentration with certain range, not too little,
not too much, and then the drug is taken orally at some time, then it's in a gut,
then it diffuses from there to bloods and from blood to the interesting organ, and then eventually
kidney removes the drug from the blood. We can't model human body cell by cell and we can't model
all these molecules, but we can model it, this simplifying, just taking into account that we have the gut,
blood, the interesting organ, and the kidney, an unknown diffusion rate, an unknown rate for how
quickly kidney removes this drug from the body. We can take into account also body weight, which
describes the volume of the patient, how much blood they have, and then it's possible to make drug tests
with healthy adults, so give different dosages and then look how the concentration goes,
and then we are able to learn about these diffusion rates and how the body weight also influences this.
And the great thing about these kind of diffusion models is that then it's enough that we have
information only at certain time point, for example when we are giving the drug at the same time,
then taking a measurement, and still we are able to predict very well how the drug concentration
after taking the medicine goes up and then comes eventually down, and okay, then we need to give
another dosage of the medicine.
And now we are able then to find out the safe dosage for adults, but we would like to use this also
for children. We have the body weight in our model, so we could extrapolate from the adult model
based on the weight, but the children are not just small adults.
So the kidney matters later in AIDS, so the smallest children, the kidney is not
removing the drug as fast as in adults, and we need to take in account this maturation effect.
This drug has been given in some specific cases to children when there has been
actual liver transplant, and so it's not possible to make the drug testing with healthy kids,
but in these cases where they actually got the liver transplant, we obtained some information,
and then just from 18 children at different HCs, and then using the adult model,
extrapolation, and taking account that the maturation effect has to be monotonically increasing,
but unknown shape, we were able to also learn this unknown maturation effect
at different HCs, and then we are able to give safe dosages also for children.
And here's the figure for the concentration, that at the red points we give drug,
and we are able to model very well with this kind of diffusion model concentration at the different types.
And then eventually, yes, we got the safe dosage also for children.
There are of course endless countless number of these kind of interesting projects,
I'm not able to work and help on all of those, and instead, most of the time,
I'm developing tools for others to make these kind of models, and so that they can
make these interesting models.
So then, probabilistic.
We start with the expert information, like in the previous example,
that we had these gut, blood, organ, kidney, different diffusion rates,
and then we transformed that information to a mathematical model.
There are uncertainties, we don't know beforehand for a new drug, what these different diffusion rates are,
but we can describe them with uncertainties, with probabilities and probability distributions.
Also probability distributions for functions, we don't know what is this maturation function,
but we know something, like it's monotonic.
Then we get data, which is numbers, and we can combine then this mathematical model
with the numbers, using Bayesian probability theory, and this is just the math.
Combining the numbers to mathematical model, we get updated uncertainties.
So we are then more certain what these diffusion rates are, and then we are more certain
what would be the safe dosage for three-year-old kids with certain weight.
We get understandable models, because we started from the expert information.
We are building that information into the model, which also brings trust,
and also that we have uncertainties there, brings trust, as if there would be a case
where we would see that we don't know yet what would be the safe dosage for the smallest kids,
we need to get more observations, we need to be more careful.
In theory, using the Bayesian probability theory, it's easy if only we could do these
calculations for this math exactly.
Unfortunately, especially these integrals are so challenging that we are not able to do that.
We can break these computations to smaller pieces, to many smaller pieces,
and give them to computers, and then we get to the computational part.
We need to be able to transform this mathematical model to a computer,
and we can do that using probabilistic programs.
So we need to be able to transform this mathematical model to a computer,
and we can do that using probabilistic programming language,
which is designed for describing these probabilistic models,
and then these probabilistic programming frameworks also include automated computation,
automatic inference, so that the user can focus on describing the model.
Of course, we need to then take into account the limitations of computers,
even when we are breaking these computations to smaller ones,
there is still a limitation, speed of computer, how many computations we can do in
feasible time, limited memory, limited accuracy of representations of numbers,
again with the limited memory.
We have the automated computation, but it can't be foolproof, so we need diagnostics
for this computation in France to check that whether it actually did work.
Also, if it works, we need to check that we didn't make mistake when we built the model,
or we did actually build something that's sensible.
We didn't also kind of that did we get enough information from the expert,
and if we did transform that correctly.
We need to take into account limitations of already of these mathematical models,
are we able to learn certain things given these limitations?
If we find out problems, we want to iterate and improve and eventually get you the better model.
We need to of course then implement these in software.
I'm part of the core development group for STAN, probabilistic programming framework and ecosystem,
including also a lot of documentation, educational material, and so on.
I'm not doing this alone, so we have a lot of developers, a lot of contributors,
more than 100,000 users, a lot of people building other tools on top of this.
Here you can see a kind of different topics I need to understand to work on these.
I'm in computer science department, and my statistician colleagues say that I clearly
think like a computer scientist. Computational science is one combining computer science and math.
I use lot of statistics, I also publish in statistic forum slot.
Patient probability theory is the one combining data and mathematical models.
I use ideas from machine learning, I publish in machine learning forums.
I'm part of the finish center for artificial intelligence.
Probabilistic approaches are future of AI too.
These tools can be used in data science, and I need to understand software engineering
when I'm helping to implement these in software.
When I talk about the impact on society, I want to again remind that I'm not doing all this alone,
but these two, these examples illustrate why I'm excited to work on these tools,
which helps others to do better modeling and quantification of uncertainty.
It's possible to do better science, and these tools are already used in
many fields of science in medicine, ecology, social science, and so on.
We're used also, so the group who won Nobel Prize in physics for gravitational waves,
also used Stan. Many companies are using big companies like Amazon, Facebook,
Google are using these to predict future, to be able to make better decisions.
Australian government used Stan in analysis of retirement saving system,
and it's estimated that Australia will save 20 to 50 billion dollars in next 10 years because
of this analysis. I'm happy that I'm able to contribute and have the eventual impact
through the people who are using these tools I hope to develop. Thank you.
