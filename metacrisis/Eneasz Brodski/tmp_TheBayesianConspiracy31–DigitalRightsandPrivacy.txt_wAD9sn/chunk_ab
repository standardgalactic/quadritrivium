Yeah.
Digital Millennium Copyright Act.
Right.
It's passed back in the 90s and has been interfering with everything in computer since then.
This is the one that we talked about a few episodes ago that makes it so that companies
can make it illegal for people to change their own oil.
Yeah, absolutely.
It interferes with everything because of the way additionally copyright law works.
You can put DMCA on, say, most anyone here has a computer, I mean, computer, a phone.
If they are listening to this without a computer, I am very impressed.
It means someone has gone to the trouble of putting it on tape and handing it to them.
All right.
All right.
Everyone has a computer.
There are certain parts of that computer that you bought and you own and you have in your
possession right now that you can't look at legally.
In fact, most of it, the entire operating system, the word processor, possibly even
the web browser you're listening to this on if you're not on Firefox or Chrome, most
of Chrome is open source, that are illegal for you to look at too hard, for you to investigate
too hard, just for you to look into it is against DMCA law.
Even though you possess it, you own it, and even more so, there's even hardware inside
of a computer you own.
There are certain chips that run mysterious black box code that you aren't allowed to
look at because of DMCA law, even though you bought it.
The thing that really irritates me more than anything else is that you don't own it anymore.
You don't own your stuff.
You have paid money for the things and you're in physical possession of the things, but
legally the ownership belongs to someone else and you are this person that they are
daining to allow its use for a limited period of time, which they could yank away at any
time if they wanted to.
Exactly.
There's a famous quote from Richard Stallman that says, either you own your software or
your software owns you.
Richard Stallman is a big advocate of open source software.
It's a very transparent way to build software so that you know what's in it, so that you
can't have either state actors or big corporate actors controlling how your software works
and what it does instead of you controlling how it works and what it does.
Exactly.
I use Ublock for my primary ad blocker.
What I like about that is that it's open source and I haven't gone and looked at the code
myself, but the idea is that other paranoid and savvy internet users can and if there
was something fishy about it, they would say, hey, look at this and that's not the kind
of access privilege that most people have to most of their software.
That's terrifying.
I wanted to get to clarification on something really quick.
You said word processors have occasionally black box code areas.
All of them except for a few very open source projects.
What on earth would they need that for unless it was to explicitly for something nefarious?
Well, even wider, let's say all of Windows specifically sends back every single keystroke
mass movement and occasionally contents of screen to Microsoft ostensibly lets them
debug and help improve the operating system for the future, but it's one of those things
that can be very dangerous if that power were to be abused.
I had no idea it sends that much data back to Microsoft.
It was a fairly big scam when Windows 10 came out.
It's new in Windows 8 or Windows 10.
They've started doing that and it's obviously not all of them, but it can happen whenever
it wants to and they have a legal right to that.
And they do.
That's the type of product you have purchased and there are alternatives to that.
There are open source operating systems that don't do this.
The Linux project is Linux.
It's a huge computational framework that most servers on the internet run because it's
actually secure, secure against not just Microsoft, but even against state level actors.
You can trust it not to be reporting to them because it is entirely open source code.
It's improved by the community.
It's watchdog.
No, it's, what's the term I'm looking for?
Audited.
It's audited by the community and if there was anything fishy in it, more than likely
someone would catch it or more than likely someone would have fixed it because that's
the other advantage of open source is it's transparent.
Almost anyone can post improvements.
If you see something wrong with it, if you see a security vulnerability, anyone in the
world, they can submit the code to improve it themselves, which would be in their interest
if they're running this open source code, which most anyone on the internet is.
So it's a very good way to do things.
You sent me a fascinating article about the importance of transparency in code.
It was the pacemaker article where a woman with a pacemaker likes to go jogging and at
one point she was going up a flight of stairs when all of a sudden she basically couldn't
breathe.
She started blacking out.
It was like her entire body shut down on her and they rushed her to a hospital.
Eventually they figured out what the problem was is that her pacemaker went above a certain
threshold of heart rate.
I forgot what it was like 120 or 150 and it reset back down to 60 beats per minute, which
is not nearly enough to support her body with the level of activity she was at.
She was an engineer.
She started really looking into this pacemaker and all the code that runs it and so forth
and found out that not only could she not see the code and not update it, but it had
a wireless update capabilities so that the creator or the owner of the pacemaker, the
company, could push updates to it without her knowledge and without telling her what
the updates did.
And she had, first of all, a huge problem with that because she wants to know what the
code inside of her body responsible for her living is doing.
But also, this is now a vector of attack.
If something can be wirelessly updated, it's not just the original owner that can update
it.
It's anyone with enough hacking skill to get into it.
And she did not like the fact that anyone could hack into her heart.
And that's a fantastic example.
There's someone literally walking around with an implant keeping alive and she doesn't
own it.
Someone else owns it.
Someone else has complete control over it and they can do whatever they want with it.
And that's absolutely ridiculous.
There were stories a couple of years ago about stuff like that, about pacemaker security
vulnerabilities and pacemaker hacking.
And all of that's possible because the only people who know how this works are big medical
corporation and whoever is sketchy enough to look into how to hack these things.
So let's say this woman wanted to shut down other people's pacemakers, she might be one
of the only people who can, which is dangerous.
And if she wanted to legally turn off the ability for her pacemaker to be hacked, she
can't do that.
No, that would be against the law.
She can't alter anything inside her body without breaking the law.
And that is very dangerous.
And that even brings us as we progress and as our phones, almost extensions of our minds
as they are now, but as more and more of that capability can become potentially integrated,
potentially implanted in the future, it becomes very dangerous when a part of you isn't under
your control.
Yeah, like you're wearing a smart watch right now, where some years away from not having
to put a, being able to attach it without a wristband, right?
When that happens, I mean, the biometric data that your Fitbit stores isn't yours, I think
you can look at some of it through your apps or whatever, but you don't get to keep that
information secure if you don't want to.
Yeah, you don't get to decide where it goes.
Someone else can access it, it could be subpoenaed by a court, it could be distributed by Fitbit
to its advertising partners, you have no idea where it goes.
And even more so, a lot of the time what happens with this data is a lot of people end up with
it who are not in your original target audience.
So you say, sure, Fitbit can have that.
Yeah, well, Fitbit shares it with a couple of advertising partners, shares it with your
little toy app on your phone that gives you rewards for how much you walk.
And they share it.
And eventually one of those people in that huge tree has a data breach.
It just happens.
It's just everyone at some point, and then who knows who ends up with it?
It was, was it Etna?
One of the major health insurance companies recently got hacked and lost records, not
lost, but the records were copied for like 112 million people, something like that.
If you've been on the internet for any length of time, it is almost 100% certain that your
data is in the hands of people that you did not expect to have it, and who don't legally
have it, but have it nonetheless.
Even if you're on the internet, your data is probably in the hands of people that you
didn't expect to have it because you clicked yes when you signed up for a website or something.
Yeah.
Which, I mean, there's a whole other bag of worms that I...
Can we do anything about ULAs to make them not be fucking evil?
That's sort of what I was going to try and get at, right?
On the one hand, the corporation or whatever, the software that you're downloading that
says explicitly in its ULAs, if someone dies or becomes injured or if your company takes
a loss as a direct result of a failure in the software, that's not our fault.
That sentence can show up in there on page 117 out of 250.
And to be clear, they don't give you ironclad legal immunity.
You can still take them to court, and the courts will say, well, despite the fact that
it says this in the ULA, we find that unconscionable, and you are responsible for this person's
death, but it makes it a lot harder.
You have to go through a lot more process and pay a lot more, and the outcome's uncertain.
It's true.
I mean, there are protections.
You can't just declare yourself immune from negligence.
Even if you're on the highway, and there's one of those trucks with a one foot by six
inch sign that says, stay 250 feet back, we're not responsible for rock chips.
First of all, you have to be 30 feet away from this truck to see that.
But even if rocks start flying off and breaking your windshield, that's still on them.
They can't just declare themselves free from that responsibility.
But they can say they can, and that might turn some people off, or it might give them
some one level of resistance in court, right?
Well, we told them they couldn't drive behind us.
They should have just looked.
And just to clarify, Yula is short for end user license agreement, which is the thing
that you nowadays have to click that you read, even though you didn't, and that you're okay
with before you use almost any piece of software that exists.
And to answer your question for what we can do about it, what you can do about it is help
build these alternatives, help build alternatives that don't have big, scary, terrible Yulas
on them, and use them whenever possible.
The more competition there is, the more people who care about this, the more companies are
going to have to listen to, this is the right way to do this.
And if they don't, hopefully these alternative projects can be large enough to be usable.
Many of them are today, you know, Linux and OpenOffice, and that whole branch are huge
projects run by probably more than 50% of the computers in the world.
I mean, all of Android is a Linux branch.
Oh, I did not realize that.
And at its core, it's an open, secure operating system, but Android has a whole layer of all
of Google's shmoo on it.
And because of the way free software works, actually, by doing that, Google has to update
the true open source project Android is based off of.
It's called the Android open source project, which is a very nice, very secure, not corporate
controlled and not as data leaking operating system.
You can run on many phones today if you want to avoid that kind of scary Yula corporate
controlling freedom infringing behavior.
And the more people do that, the more pressure it puts on other companies to
behave.
So some of the some of the terminology being thrown around sounds kind of like fear
mongering and either can we explain why that isn't fear mongering?
But in fact, this is as terrifying as it sounds.
Or can we just say like for the average user, just to play devil's advocate a little bit,
I like being able to go to Amazon and seeing on the front page there.
Oh, look, an author like has a new book out.
I'm not sure whether or even if I bought the previous author's book on Amazon or
