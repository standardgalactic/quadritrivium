It wasn't like percentages or something.
Yeah, decibels.
So I upped it by 10 decibels.
That doesn't sound like a lot.
Oh, well, because I mean, like one decibel, I could notice, whatever.
I'm not a, I did 10 up units.
I did 10 up units for every, every person on the mic.
You can hear the difference between one and one decibel change.
I didn't think so.
But apparently the difference on the one slider on Audacity.
You really?
Yeah.
Cause I, I change it so I'll slide one person down and up and then hear them
sound differently.
And just slide them one.
Yeah.
Oh, okay.
Weird.
Cause I, if I move a slider by one, I never hear a difference.
Oh, I heard the general rule is like humans can't differentiate less
than three decibels.
That's why I thought it was not decibels.
Okay.
Maybe I was, you're just super sensitive when it comes to decibel hearing.
My brain's tricking me.
In any case, episode should be coming out louder now, assuming that sliding up the
decibels on the things actually makes it come out louder.
So, um, if anyone, no one told us this for like two years.
So if, if everyone's been stringing to hear it this whole time, then, uh, hopefully
that will be a problem anymore.
So thanks, Richard.
Um, we talked about, uh, how useful it was to society when everyone was taught
basic literacy and basic numeracy, even though it doesn't seem like there's any
one specific case where like, yeah, this is really good to have for this job.
So we should train everyone in it.
It was mentioned in that episode that, uh, perhaps simple programming like
Python is the same kind of thing.
If everyone was programming literate, then we might have huge gains in society
equal to something like literacy or numeracy.
And there was some general skepticism on that point, but Zecharon wrote, I had
stopped at podcast right as you were saying, you weren't sure what teaching
Python would do for students, but in general teaching programming to students
should hopefully increase the amount of logical thinking, falsification, truth,
table style logic, et cetera, even if they never touch programming again and get
degrees in French lit, which is a good point.
So for the record, that was from private correspondence between me and him.
Oh, was it?
I think he, he might have put it on the Reddit.
He said it's going to, but I was going to get points for that feedback.
So Zech, you're welcome.
Now, uh, yeah, no, that's actually a really good point.
I can't believe we didn't think of it.
Certainly at least falsification, writing unit tests, just to think of what
would I not expect us to see here?
That's like the most rationalist question you can ask, um, or at least the most,
one of the most scientific questions you can ask.
And that sounds like crazy valuable.
I think just having, having grooved that in at some point at somewhere in your,
in your curriculum, if you didn't get it in science, cause it's hard to get in
science, cause it's not often taught the best.
It's usually like, you know, memorize the names of stars or whatever.
It's not hypothesis testing, but programming explicitly is if you're
writing tests or just doing something, but specifically testing like that too.
Right.
So I thought that was a really cool comment.
Yeah.
They have started to teach in the cold computational thinking where, um,
it's not strictly programming per se, but it's teaching kids to think in terms
of like these exact things.
And I did always notice there was a distinct difference in culture between
people who at least were programming adjacent and those who had never done
anything similar to that back when I was in high school, there was just a
slightly different way of thinking about things.
They're probably used to like thinking precisely.
And that sounds like it might be putting them on too high of a pedestal,
but maybe I think more like more used to quantifying things into variables
and how they can be manipulated and like, which is different from precise thinking
and knowing like what it means to assert something and knowing that that means
that you can test it in a way that is provable or not.
Maybe like approach to solving problems.
Yeah.
And, uh, you know, breaking tasks down.
A different listener said, and I didn't copy it down.
So I don't remember which listener was.
I apologize.
Uh, said that a lot of basic office tasks, like the really simple ones that are
probably common for accounting or any sort of secretarial position could
probably benefit from some quick Python automation where it would save you time
and effort.
Oh, that was in the subreddit, right?
Yeah.
Yeah.
That's, that's true.
The downside is that your boss learns that and you're out of the job.
Um, there was somebody used to come to meetups that really, I mean, it depends
on the job, but like one guy that I'm thinking of used to come to meetups.
He did a lot, like a lot of his stuff was they used like Excel for basically
all their like database stuff because it was an old company and I guess I
didn't care to do it the right way, but he basically wrote little scripts that
would get whatever he needed and store stuff, however he needed and all this and
that.
So his job basically go in, run whatever script he needed to do and just hang out.
Um, I think it was, there's more to it than that, but I mean, his job probably
took 20% as long as he was being paid to do it.
Oh, I see.
So like if you're like lying about how much time you're spending, I guess.
That's not lying.
It's like, it's doing the job they gave you.
Yeah.
You paid me to do a job and I did it, but if they learn how easy the job is or
not how easy, but how easy it could be, you know, if, if one good developer could
replace your entire data management team, um, but you should pay him as much as
your entire data management management team.
Yeah, like that's going to happen, but then that also means that one person
takes five people's jobs or something like that too.
Right.
So, but UBI basic income sounds like a great, great fix to this cause that's
happening that, you know, whether we want it to or not at some point for most
things.
So I was just thinking, um, 10, 15 million Americans are in their
income through driving of the sort.
It's like 3% 3.2 or 3.5% of jobs.
Holy shit.
So I guess that's including the total number of Americans, not working
Americans, but whatever it's, it's, it's millions.
And I mean, that's, that's going away in the not too distant future.
So yeah.
Did we talk about Logan before on this show?
No.
Logan, the movie.
Yeah.
I don't think so.
Well, just, just the one, one thing where, uh, someone at, uh, at the
beginning of the movie, they have the self-driving semi-trucks, right?
And they're just like barreling along and, uh, one almost runs over Logan or
runs him off the road or something.
It was, it was pretty intense.
Like swirms off the road.
Yeah.
And someone said that kind of, you know, threw me out of the movie because no
system would be programmed to be that aggressive and run people off the road and
shit.
And my view was like, that was really good world building cause we are living in a
crap shack dystopian future where the corporations don't care about people so
much that they're like, yeah, haul your shit to the next door and we don't care
who you run off the road and everyone accepts it because the corporations are
the only ones with power now.
Yeah.
Hopefully we don't get that world.
Right.
Sidebar on superheroes.
Uh, I dragged everyone to see Captain Marvel this weekend and I guess dragged
their word for it because it wasn't as, it wasn't, it wasn't as resounding as
resounding with success as I thought it was going to be.
I loved it.
So we need votes on who liked Captain Marvel.
I liked it.
I think like,
I meant from this, I meant from the people, but from you guys.
Oh, yeah.
Name and shame.
Go for it.
Enyosh.
But you first, Jess, I just wanted to say that I feel like you're, uh, being kind
of down on yourself because not everybody like loved the movie, but like, I
liked to criticize movies.
So the fact that like I was picking it apart doesn't mean that I didn't like it.
No, no, no.
That was what I wanted to do.
Oh, yeah, I said this to Enyosh.
No, my, my, my love of these movies is, uh, secure enough that I feel not, I had,
how did I put it?
I had a way that I liked.
Um, no, it was, it was just that I'm secure enough of my love of these movies
that you guys aren't bumming me out by not liking it.
I, I just, I, I'm, I'm poking fun.
You, if you guys can't hear my smile, it's there.
No, I like picking stuff apart too.
It was just, uh, it was mainly Enyosh, just like when you had said something
along the lines of like, get the feeling that the writers don't think their
audience is smart and just turn out another movie with the exact same recipe
and say, fuck you, eat it up.
Yeah, yeah.
And then you were slightly insulted by that.
So I apologize.
I jokingly said, you'll personally attack.
Well, okay.
So here's my thing about, uh, Captain Marvel.
I thought it was just not a good movie in terms of movies in general.
It was kind of lazy.
There was no character building.
There was no stakes.
I never really cared about Miss Marvel or her, or Captain Marvel or her struggle.
And when I looked back on it, it was very much a, that sort of thing where
things don't have to make sense.
We don't have to make you care about the character.
We don't have to really do anything aside from follow this basic script.
We know you're all going to come and watch our movie anyway.
And I just felt like the creators of the movie had a casual contempt for the
audience, like you said.
