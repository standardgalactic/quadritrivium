This is gulp
What about browser if I
There we go
Not so many but we can do something like regular expressions
Let's find everything what has I find it and see it's almost
665,000. Oh, sorry 665 packages
We can highlight
Like let's say dot dot matches everything
Let's see
This is entire npm universe
So this graph has almost 62,000 packages and it's almost 120,000 edges here
Let's see we can find everything what has just one letter name
so it's 33 packages and
You see all alphabet is actually taken and this data over here. It's actually pre-computed. I wouldn't be able to
Lay out this graph at runtime so but because I already created all these npm modules
I could easily pre-compute
Pre-compute layout of each of these node offline. It took me like four hours to calculate this layout
But I didn't have to do anything new. It's just exactly the same modules running in Node.js and computing this layout for me
So most likely when you will be watching this presentation
Modules like four or five will be already taken
So with these many packages
You can you can actually use almost all of them with browser if I
Here is an example of a browser if I dependencies itself
So you see browser if I is in the middle and it depends on a lot of small modules
We can also switch to 3d view
This is browser if I dependencies graph
So because everything is so so small and modular. I also thought maybe it would be just nice and cool to
Expert this graph into 3d model file
so I did that I created the small module which experts graph into
3d model and I sent that model file into company
in New Jersey called Shapeways and
Just a couple weeks and 20 bucks later. I got
This in my mailbox. This is a 3d printed graph of
Browser if I dependencies so this is
Graph here
Graph here. This is the same graph
But this is like real graph which is like JavaScript escape from the browser
Recently I saw a tweet from someone saying checkmate
JavaScripters and this guy was pointing to an answer of Eric Lippert the guy who was a principal engineer of C sharp
DB script J script and
Eric was arguing that it is really hard to write
large application and is it is
Specifically hard to do so using JavaScript because JavaScript is dynamic type language
It does not offer that compiler support or for developers, but then in exactly the same post
Eric argues that
modularization encapsulation and
Code reuse are the ways to mitigate or fight that complexity and this is exactly what NPM is about
NPM has
everything modular
You can always hide your data using common GS file scopes
You you don't have to export everything and it is very easy to reuse this
Codebase you can find actually all of these examples you can find on my github and
Just feel free to check it out
Thank you very much. Hope you enjoyed this video. Let me know
