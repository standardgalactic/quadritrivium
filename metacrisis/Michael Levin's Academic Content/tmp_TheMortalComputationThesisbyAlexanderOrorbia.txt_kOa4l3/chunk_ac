and engage in self repair and self replication. So what you might ask do any mortal computers
currently exist we already have some of them not necessarily that the problem is solved but rather
we have some wonderful examples that we could bring back to the science as the artificial.
One of the earliest ones is Ashby. Ross Ashby is a very important founding figure of cybernetics
which was one of the slices that I read Carl and I reviewed earlier and Ashby's homeostat which is
what's shown in the picture here. It's one of the earliest examples of what we would consider a
homeostatic mortal computer. It's very very simple but it is able to stay autonomously in its own
stable state so it's able to maintain a form of homeostasis without any external intervention
and usefully enough if you read into the literature without any knowledge on the designer's part of
really how this even works which is kind of interesting. So the primary aim is it keeps
control variables within certain ranges and we'll do this with random exploration. There are
modifications that were done over the decades to add learning components to it and then you can kind
of make it look like what Carl tells me is an allostat. If you add some form of memory or learning
you sort of get a little bit more of an allostatic interpretation. The funny thing was the homeostat
can survive as one comment from an early cybernetician says something that any normal computer cannot
or digital computer, a wire cutter, you can turn off your normal computer and break it down
but a homeostat would learn to replace one of its submodules if you cut one of its wires which is
really interesting. Then we also have things by Bap, Pask and Beer and many of those that
contribute to what was known as Maverick machines. These are actually variants of
autopoietic mortal computers in some sense. The electrochemical ear was essentially a system
made of several platinum nodes inserted in a dish given an electrical stimulation and they
would grow and self-organize. You can also give them positive reinforcement and that's why it was
called the electrochemical ear. It would actually grow sensory organs in some sense that it could
actually pick up sound waves and it could build filters conducive to its survival. We also have
fungal and mold-based computing. Some of them are designed based on or using actually integrating
the pink oyster mushroom which is known for its internal geometrical calculations that can be
reprogrammed and then it can leverage the resultant electrical activity from the pink oyster mushroom
to drive the actual circuits of the system. So you sort of get a chimeric hybrid type of system
and they have many useful properties that have aspects of autopoietic mortal computing but not
all of them and it's not quite clear the current direction that fungal or mold-based computing
go but it is a promising example of aspects of mortal computation. I don't need to spend your
time on this one. I know you guys know Xenobots quite well but they are certainly an example of an
autopoietic mortal computer and you know it's a swarm of bio bots or biological robotic agents.
Essentially really I'll just digest to the point of that they essentially exhibit a form of morphogenesis
and basal cognition idealized in a multicellular form of a biological mortal computer. These could
serve as a source of inspiration for in silico-mortal computer designs as well especially for example
at neuromorphic computing. Maybe we could borrow a couple of the principles that we get. The nice
thing about Xenobots is they heal which I think is the most important part. Yeah and then there's
some nice aspects about the hardware. We talk about this in the paper and the very the extra appendix
that the hardware includes the genome whereas the software is the cellular communication
sorry the emergent cellular structures and the software is the cellular communication that
underwrites the creation of higher level structures and then of course what was let me see if I have
it here. Why is it not showing up? Oh for some reason my oh there it is. We also had very new
recently actually we'd already finished drafts. Anthrobots which are wonderful as well. We also
have the organoid there to the bottom right or known as intelligence at a dish. I also know you
guys are quite aware of that so I don't necessarily need to talk about sentient organoids but these
are examples of autopoietic mcs or mortal computers and the ideas that they have aspects that strongly
embody those central five tenets of mortal computation that we discussed earlier and since I
don't want to take up any more of your time there's a lot of implications for artificial
general intelligence. The mortal computation thesis could be one possible catalyst for what we
think is the next stage of artificial intelligence research where we need to go. A lot of today's
work again from the artificial transformers you might have heard of is that we have a sort of
centered around tool-oriented view or perspective of artificial intelligence while it's valuable and
stands to make a lot of nice benefits for humanity. The idea is that this is very different than how
animals and humans for example conduct processing and how we are naturally intelligent so we should
be pursuing survival and its relationship to mind and how what that can teach us about embodiment
and inactive intelligence. This could be the place that we need to go for biomedics by the way
biomedics is just the engineering application of biomimetic intelligent concepts and then we
have some things these are actually me appendix but I just wanted to briefly mention we're essentially
working towards like a form of artificial sentience rather than using the word intelligence. We are
also not dealing with the questions of consciousness we we tried to not really deal with that because
that can get quite messy philosophically. That's not important for what mortal computation says
we need to go but there are some implications if we actually built the exact idealized
mortal computer well now we have the fact that they can feel they can think that do we have to
consider giving them rights and I think that's a wonderful and important ethical discussion
that would need to happen assuming that this research program gets built on and then we have
this problem called the body niche problem very briefly just means that let's say research groups
like myself we don't have xenobots we don't have access to organoids so it'd be very hard for us to
actually use those resources unlike those in biological domains but perhaps we could build
virtual morphologies and we talk a little bit about how that's done in robotics and that could serve
as an example to democratize aspects of biological mortal computers and so I just I'll leave here
I'm not going to lab about this slide but I'll leave it hanging here these are some questions
that even I had as I was reading or rereading some of Michael's group's wonderful work about
enthrobots and xenobots and some potential interesting collaborative or at least directions
that could be explored and I am shamelessly plugging my lab software for modeling neuronal
dynamics in biological credit assignment and so forth so with that thank you very much and
if there's any questions I think we have like at least 10 minutes or so
cool thank you so much anybody else have questions
I've got a question so yeah thanks this was really interesting so I back when you were talking about
these three pillars of the cyber cybernetics as they apply to this I was interested in
the growth pillar could you just expand a bit upon what that is telling us basically
yeah so and I don't know if I have it here actually it's good to look at the
actually I'll do it this way so I don't have too uh yeah the growth uh yeah so there was a there's
a couple of more principles and things that I sort of hid here can you kind of see the slide
at least the picture yeah so the nice thing about growth from cybernetics is the idea that and I
mentioned that you know one of the starting points is self-replication the idea that you should be able
to produce copies of subsystems or produce essentially duplicates or be able to produce
extra parts and change and repair with time but autocatalytic growth was something I didn't really
mention and this is the idea that um you sort of get a feedback process so you can see from some
of the arrows that this is leading to self-assembly and so what it really was saying that we need a
morphogenetic process and as we gather resources then what ends up having is you see like an increase
out of a catalyst right the idea is that growth will start to grow up to a certain point until of
course you have no more resources this is what we talk about the niche providing that substrate
that material and energy exchange is really important in it of course doesn't allow you to
just keep growing infinitely ultimately what this leads in cybernetics view is this another
principle called the principle of recursive growth which ultimately leads to the emergence of
heterarchical not hierarchical heterarchical systems that are saying things grow really really
really big and of course they start creating things that are stable in the sense of building blocks
so there's a point where a system that's reached like an ultra stable state or has reached a certain
point of organization becomes a building block to a much bigger higher level system and so that's
kind of where the idea that like Herbert Simon and other classical thinkers talked about heteroc
emergence of heterarchical systems so effectively it's trying to say that you need to essentially
build in these morphogenetic changes you need to have this process that promotes growth and
self-repair because this is what's ultimately going to allow that system to continually persist
over time and again it sort of affects that the idea is that you get more and more complex systems
I didn't mention it later in the talk but you can have nested Markov blankets you can have Markov
blankets of Markov blankets of Markov blankets and now you get the of top down and bottom up
causal modulation but ultimately growth is just trying to say that we need these resources
and we need to be able to replicate either your entire entity and then add mutation which creates
the offspring as I mentioned earlier or you need to be able to reproduce and grow and replace
subsystems and that's the part where the building block concept comes in there's also one final
comment that at least I recall which is that as these things become stable systems that are built
of lower subsystems make it easier for those building blocks to join in because again now we
have this organizational principle from a high level relationships between parts I don't know if
that was helpful yeah it was uh okay thanks yeah thank you it's a good question
videos um yeah I also had a question um so one of the hallmarks of classical one diamond
computers is programmability right um the type of computer I just didn't hear you
uh uh one diamond computers the conventional computers it's it's uh programmability
so we can almost anyone can write a program almost using natural language um what about
programmability of models computers do you think that we might need some sort of model
programming language framework which is fundamentally different from a traditional
programming language framework that is a really good question and yeah that is something that
in my view you would lose uh from classical computer because the idea is that uh as I just
said and everything is sort of dependent on the morphology and the niche in which that morphology
is to exist in that agent or that mortal computer is to interact with so I would say that it gets
difficult because you need to now account for the properties of the morphology and sprinkle
throughout the paper we talk about uh that the homeostatic variables or the sorry the uh
metabolic primitives will largely depend on the actual substrate in which you are building
and it could be in silica it could be biological um I think that there is potentially and it's not
clear to me how so I'm just speculating to design general specifications not so much
that it would be like you can program in a mortal computer just like you would in your
standard von Neumann computer and like the python programming language but you could
take advantage that the system's organizationally closed and that they have essentially relations
between the parts so there are some sort of design principles that they adhere to and I think you
could design some level of general programmability for certain classes of mortal computers it wouldn't
be like oh let's say I have an animal let's say a very low level type of mortal computer something
very low level cellular versus a complex organism I would say that the programming specifications
might be dependent on the class of mortal computer and the type of entity in the even the niche in
which it interacts but you could essentially program classes or slices of mortal computer so
again if we're dealing with like I had in my other diagram the neuro robot that was a version of like
the dog robots that come from like Boston Dynamics um you could essentially imagine designing
programming language around those types of quadrupeds um and so I think it would be you'd
need to account for like the essential primitives and the environmental variables that are part
of this process and we need to be able to specify them to some degree if we want the programmability
I think it gets complicated though because I do think while we are sort of arguing for this
entanglement right because the software really isn't divorceable from the hardware and real entities
um the place where maybe you get some of that general programmability is in the virtual morphology
and I think that's our best bet because ultimately when you're building these uh systems themselves
you sort of need to work with the actual hardware for time but let's see robotics uh it's a little
bit different with biological entities too although I know like the Xenobots that you have way or the
Anthrobots even you have ways of which you can program them uh you know there was some uh biochemical
processes that were described in some of Mike's work um I don't know if that helps though but I do
think you lose some of that programmability but what you gain is this massive energy efficiency
as you start to approach uh those lower bounds you start to approach the place of thermodynamic
efficiency the best that you can get with physically realizable Bayesian inference I do
think though the programming part can come in from more virtual morphologies to allow us to
deal with the organizational properties and allow us to experiment and you know work with
different designs does that answer your question too the
