and that's what we have at the appendix, actually,
at the already long paper, digital morphology.
Maybe that could be a way to sort of bridge the gap
between the computational researchers
and researchers like yourself.
Oh, can we come up with benchmarks or system setups
that I could play with the properties,
mathematical models, maybe,
of these biological morphologies
and then kind of do investigation, right,
without the costs and the barriers to entry
to working with biological material
or some of the things I don't have.
So I don't see anything at odds.
I don't know if Carl would wanna add anything
that I might be missing or not getting.
No, that was very fluent.
I think you've covered everything there.
If I can just jump in for a minute.
It seems to me that this dimension of programmability
could also be expressed as the dimension from uniqueness,
which mortal computers, as I understand it,
have more of than my laptop,
to replicability or exact replicability, copyability.
And to the extent that a system is really unique,
you can't program it.
And in part, just because you don't have two copies of it,
so you can't test what you're doing in any way.
You can't test reproducibility
if you're working with a system that's completely unique.
And biological systems are somewhere in the middle, right?
Laptops are intended to be way out
on the extreme replicability end.
And so because a laptop is completely replicable,
it's a completely generic entity,
it's almost a Turing machine, right?
It's almost just an abstraction.
And so when we're programming,
we can treat it as an abstraction.
And we don't have to worry about things like
where the power comes from
and why the thing maintains the same shape over time
and et cetera, et cetera.
I mean, if it doesn't maintain the same shape over time,
you take it to the repair shop
or recycle it and buy another one.
Whereas in biological systems,
you have to worry about all of that stuff.
And as you point out in the paper,
and as the 4E people kind of have been pointing out
for decades now, that's part of the algorithm,
or that's part of the operating system, that shape.
Whereas it's not involved at all in my laptop
in the operating system.
I mean, even the operating system
can treat the hardware as an abstraction.
So we can, I think more or less identify those two axes,
the dimension of programmability
and the dimension of uniqueness.
And so one of the things that you emphasized in your paper,
I thought this was very interesting,
was the energetics of using the body
as part of the operating system.
And it meant that you didn't have to pay for a lot of memory,
for example, or quite so much processing power.
You do, of course, have to pay the cost
of keeping the body intact.
But as you pointed out, at least in organisms,
that's cheaper than the cost of stamping out more laptops
and then equipping them with enough voltage
to keep them in the classical domain
so that they don't start acting like quantum computers,
which they actually are.
So I think that it would be useful to try to
relate this issue or resource cost
to the issue of uniqueness,
and as well as the issue of programmability.
I'm not sure whether those are,
I suspect those are distinct dimensions,
but I think the usable area of that state space
involves a lot of correlation between those dimensions.
Yeah, I agree.
I think that would be very interesting to explore.
I don't know, Michael, if that resonated with you,
because I feel like that touches on even
pairing the Mortal Computation paper for me and Carl
in the paper you shared with all of us, of yours.
I think the two sort of start to get into that idea
of uniqueness, programmability, and resource cost.
And there are some different dimensions
that you could explore,
because yeah, I also just wanted to comment, Chris,
that at least when I first was writing the paper
and then I shared it with Carl,
I wasn't thinking of the,
I was thinking of biological systems
as sort of an ideal target, right?
You're sort of emulating some aspects of those systems.
So I guess I'd be giving up some uniqueness, right?
Because you said it lies in between the immortal laptop
and the perfectly unique system itself.
I think the other thing I was concerned with
is the artificial intelligence community
really liking the idea of immortal computation
and that complete divorcing,
because you're right, you do lose the moment you leave,
even just a few steps away from immortal computation,
that reproducibility, because it's,
that substrate now is important.
And then Carl and I argue even stronger,
it's the morphogenesis too,
and the changing process, which again,
compliments your paper, Michael, as well.
The idea is that change is also very important
in that evolution over time,
which is not something you're going to have
on your typical deep neural network
that just lives at the top of the von Neumann architecture.
And then the last comment I just wanted to make, Chris,
is yes, that's exactly the key,
is that in-memory processing that we want.
And that's why bringing ourselves as close as possible
until we eventually just reach what we can,
which is the Landauer limit,
and getting ourselves real close to the hardware,
now we're optimizing thermodynamic cost.
And then of course, as you and Carl
and everyone here has shown over time,
that's the flip side to the information theoretic,
variational free energy, but the thermodynamic free energy.
But at the end of the day, we want to be there,
because that's what biological systems are.
They are much closer to the Landauer limit
than pretty much anything in machine intelligence
that we have today.
And that would argue it's even getting worse
because big, big transformers are really bad.
And Carl also and I state the carbon footprint.
So that's a good motivator.
Yeah, I find that energetic analysis very compelling.
You know, I'm very interested in why biological systems
can be quite so efficient.
And I think in many cases, they're efficient
because they're able to use quantum resources
when they're doing molecular computing.
And maybe even when they're doing macromolecular computing.
I guess the one other comment about a dimension
that I wanted to throw in,
which you mentioned a little bit about in the paper,
was this dimension of explainability.
Which AI is very obsessed with the explanation problem now.
And as one gets away from reproducibility,
the explanation problem gets harder and harder.
And in the limit of a unique system,
the explanation problem is infinitely hard
because you can't do experiments.
Because you can't replicate anything.
So we have that other access to work with also.
Maybe it would be kind of interesting
is since you were bringing up these so far three axes
that I caught, you know, uniqueness, programmability,
explainability, we also did talk about resource cost,
kind of putting out this grid
and then you saw Michael and actually I presented,
you guys would have seen in the paper,
but I presented it a couple of times,
like the different types of things
that Carl and I consider variants of mortal computers.
And so obviously Xenobot is a mortal computer.
It actually had a lot more qualities
after I re-read papers again, looking back.
But even, you know, the silicon model
that we had for the non-biological model from Ashby,
we can never forget the great homeostat or allostat.
And so maybe we could plot these a little bit
on those axes too is what degrees that they're trading off.
Obviously we need to figure out
which one of these starts to get real close to the,
like you said, Chris, the really unique.
And then, you know, that would be the extreme one
where explainability would be, you know,
really, really, really difficult.
And we could kind of plot where those are.
That could be an interesting figure to show examples.
And I'm sure, Michael, you probably have other examples
that Carl and I might have missed.
So there might be some other nice biological chimeric systems,
things that are even less biological,
but have a little bit of it.
You did touch on nano technology as well.
And in your, the polycomputing paper you shared with us.
So maybe there might be some in soft robotics.
There might be something there too
that could count as variations to mortal computers
that trade off on these axes.
That's something else.
I just thought of this, Chris explaining.
Yeah, so another model system to think about.
And by the way, we do have simulators of some of this stuff.
So we should be in touch, you know,
