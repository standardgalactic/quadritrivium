And we can ask, how different are these transitions
between different scales?
And so I'll just put on the table a hypothesis
to think about, which is the hypothesis
in biological systems.
Those scale transitions all look like the same thing.
They're all formula-equivalent.
And I don't know whether that's true.
I don't even know how to approach trying to prove that it's true
or not true.
If it was true, it would be really cool.
Because if you think that the theory is super, super simple,
you have the free energy principle in one scale operator.
And with that, you could do all the embeddings.
So I'll just leave that as something
to think about.
But be that as it may, we've done something really important
to you, which is we've linked physics to computer science.
And we've done it in a way that is not
just reconstructing some God's eye view of physics
of computer science.
We're trying to construct physics from the point of view
of an embedded agent in a way that looks like computer science.
And that immediately raises a problem, which is self-reference.
And we know where that gets into Gerdl's under very, very
general assumptions.
So Gerdl warns us that this theory
is going to end up not being both consistent.
And warns us that that's something we just
have to deliver.
So that's the end of part one.
Now what I want to do is actually talk about space
and do it from this kind of scale-free perspective.
So that's a great question, because on that last slide,
what is the semantics level of the semantic mapping
on a computer?
So we have programs that are actually
basically mapping that out of some interpretation
of the hardware.
Are there semantics and other programs in semantic mapping?
Or was that I was looking at the program board?
Well, the thing about process is variable binding.
As soon as you get up to a language where you can talk
about variable binding, if I have a variable
and I'm binding some structure to it,
and I can also bind that variable to other kinds
of structures, then we can think about what
that structure means to me.
I have some notion of what two means for this number.
But from the point of view of that program,
at least two means something different from three.
Because if I bind a variable with two,
then I do something different if I bind the variable with three.
And the basis of semantics, I'll go back to Gregory Bates,
and if there's a difference that makes a difference to me
that's in some sense actionable, that's
the basis of semantics, that's the basis of meaningfulness.
So you have some, at least minimal, sense of meaningfulness.
As soon as you have variables, a distinction
between variables and constants, and you
have one structure that leads to different actions
and new different circumstances.
So the other way I figure it is when we are describing
what programs are doing, we are naturally
ascribing semantics to the program.
So we're imposing a model theory in formal terms
on this bunch of syntax on this language.
When we look at different kinds of languages,
we put very different model theories on top of them.
So the languages naturally have different structure.
Because the model theories we use are typically very different.
So it's that very stripped-down motion syntax that I'm referring to.
There is some voices in computer science
that don't have distinction between software and hardware.
And I'm asking that because here,
do you require that the hardware should be a universal tuning
machine, or so it can be any.
It can be anything.
So I mean, if we're looking at biology, it's all hardware.
Right.
It's in six.
Yeah, it's just we're describing the hardware
at different scales.
We're building the hardware as we go.
That's even a more strong statement
if the hardware should not necessarily
need to be universal.
Yeah.
In a sense, if you take this information theory
way of thinking about physics seriously,
you get back to the grandfather John Wheeler
and his proclamation that physics is a fraction theory.
So hardware is software.
Right.
And that underlies a lot of that's
much of the underlying philosophy of this whole transition
that's occurred in quantum theory in the last 30 years.
What's that?
What's that?
Like that?
John Archibald Wheeler, who was an associate
at Baltimore and Einstein.
So he kind of combined their different ways
of thinking.
And he was the person who sort of,
I think he came up with the name Black Hole.
He was part of that rebirth and general relativity
in the late 60s and late 60s.
And we go to a sequence of papers
that can be seen as the founding papers of quantum
information that motivated a lot of those people who were
working early on in that area.
OK, so let's talk about spacetime
and really a good place to start,
because one of Wheeler's hitter was
you have to start physics without spacetime,
figure out what spacetime comes from.
So this is a massive departure from the Einsteinian
view that spacetime is a physical phenomenon,
even though Einstein also said from a philosophical point of view,
spacetime is something really extended,
is somehow observatory.
So this notion of spaceminding observer relative
runs deeply through current quantum cosmology.
So let's think about space.
And let's think first about absolutely uniforming
nothing is happening.
So I look at the environment and none of it
looks any different to me.
And nothing is done.
So now I mean nothing is done.
Well, you have boundaries over all the time.
You have boundaries over all the time.
Yeah, well, now you've got to look at this somehow or nothing.
So this is where we start.
And an organism that's living in an environment like this
is obviously not an organism, not living,
because nothing's going on in this environment.
But we can think of this as an abstraction.
OK, how do I build up a meaningful environment from this?
And how do I start putting a spacetime on it?
How do I put some sort of coordinate system
on this environment so that I can tell about what's going on
over there from what's going on?
So the first thing that you've got to do
is somehow segment the environment
into parts that are different.
So let's say that we can start to segment the environment
so that at least different parts of it look different,
even if nothing is happening.
So we have some part of the environment
that looks different from some other part of the environment.
But now we can ask, is there any sense of relationship
between these parts?
And obviously, the way that I've drawn it,
visually to us, there's a relationship.
But I haven't said that there's a relationship.
So right now, actually, I just have an environment
that's a set of two parts, and we can make it a little bit more
explicit by going to four parts.
So at the top, I just have a set of segments.
And I haven't said anything about what segment is next
to what other segments.
Even though visually, I obviously have to think in a way
through what other segments is next to the other segments.
You can just think of this as a heap or a pile.
So I can take this set, and I can add some structure to it
by adding some topology.
And the simplest thing to add to it
is some kind of graph structure.
So I say, OK, this piece is next to this piece.
This piece is next to this piece, et cetera.
So I can take this internal graph,
and I draw the little connections
as if they were gap junctions to suggest something
about planes of cells that can talk to each other.
And they know that they have a neighbor.
There's some cells they can talk to,
and other cells that they can't talk to,
so they don't know anything about.
So now, there's still nothing happening,
even though the environment has a little bit
of topology on structure.
But once you have some topology on structure,
once you have more than just a set of distinctions,
you have the structures of the distinctions,
we can talk about something happening.
So let's talk about something really simple to happen.
There's something happens in part of the environment,
and then something happens in some other part of the environment.
And I can tell these parts of the environment
are distinct, because I've broken this symmetry that
allows me to move the parts of the environment around
by making some things connected and other things not connected.
So we can represent this in a really simple way.
We can say in the top panel there,
a black dot has appeared in the white-green square.
And I represent this by an up arrow and a green subscript
and a black dot.
And this is actually the notation one uses in part of field theory.
