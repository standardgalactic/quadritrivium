Where is this pattern actually encoded?
Where is this structure?
And you might say, well, it's in the DNA, of course,
it's in the genome.
But we can read genomes now.
We know none of this stuff is directly in the DNA.
What you read from genomes are protein sequences.
So the tiny molecular hardware that every cell gets to have.
The DNA is not software,
the DNA is actually a specification
of the cellular hardware.
And this pattern isn't directly encoded there
any more than the shape and the structure of a termite nest
or a spider web is in the genome of the termite or the spider.
So we need to understand with this computation here,
how do these cell groups know what to make?
How do they know when to stop?
As workers in regenerative medicine,
we like to ask how if something is damaged,
how would we cause these cells to repair?
And as engineers, we ask a further question,
which is what else could they build?
What else could we get the exact same hardware to build?
And I'll show you some thoughts on that.
So when I think about the end game of this field,
so once we have the answer to all those questions,
what does that look like?
And I think what it looks like
is something I call the anatomical compiler.
The idea that someday you should be able to sit down
in front of the computer
and draw a plant, animal, organ, biological robot,
whatever, draw.
So here I've drawn a three-headed planarian,
three-headed flatworm.
You should be able to draw whatever you want.
And if we knew what we were doing,
we'd have a system that compiled that description
into a set of instructions or stimuli
that would have to be given to specific cells
to get them to build exactly this.
Now, why do we want it aside from basic science?
Well, notice that most biomedical problems,
such as birth defects, traumatic injury, cancer, aging,
all of this stuff would be solved
if we had the ability to tell a group of cells what to build.
And remember, this is not a 3D printer.
The point isn't to micromanage this
and put the cells where they go.
It's a communications device.
What it does is it translates from your anatomical goals
to the set points in the anatomical morphospace
of a cellular collective.
It's a communicator.
So now, so this is what we want.
Now, we don't have anything remotely like this.
We don't have the ability to do this and why.
I mean, genetics and molecular biology
has been doing really well for decades.
Why do we not have a way to do this?
And I'll just give you a really simple example.
Here's a baby axolotl, which has little legs.
A baby frogs do not have legs,
so these tadpoles don't have legs.
And in my lab, we make something called a frogolotl,
which is basically a combination
of axolotl cells and frog cells.
And now I ask a simple question.
Well, you've got the axolotl genome.
It's been sequenced.
You've got the frog genome.
It's been sequenced.
You know exactly what the genetic material is.
You know what the specification of the cellular hardware is.
Can you tell me if a frogolotl is gonna have legs or not?
And the answer is no,
that we have no models that will predict
from genetic information what this chimera is going to do.
And that's because, well, we have lots of
lots of methods and strategies
for getting information like this
or molecular level information,
what's going on at the lowest hardware level.
We're really a very long way away
from understanding collective decision-making,
how large groups of cells make their decisions
about what they're going to build.
And I think that's because currently
biology and molecular medicine
are where computer science was in the 40s and 50s.
So originally in order to program,
you have to physically rewire the machine, right?
So you have to be there directly interfacing
at the hardware.
But now you all know that there's way more interesting
stuff happening beyond the hardware level,
which is the software, the ability to reprogram,
the ability to interact with high level controls,
the high level programming languages
and various interfaces where you don't need
to get out your soldering iron
and rewire your laptop every time you wanna switch
to a new application.
And so this is something that in biology
we're just beginning to understand.
And I think what we're still missing
is the idea that in biology,
our material is reprogrammable
and it has all kinds of interesting computational
capacities and we still haven't really embraced that.
Now, when I say intelligence,
when I say that the material has intelligence,
I mean intelligence in William James's sense.
So not a kind of a metacognitive,
I know what I know and things like that,
but really just the ability to reach the same goal
by different means.
It's very nice kind of cybernetic definition.
So he talks about two magnets separated by a barrier.
That's all, that's it.
There's no magnets that are gonna come around the barrier
and get to its goal because the system doesn't have
the ability to do that kind of delayed gratification
of stepping further from your goal to get your needs met.
Whereas Romeo and Juliet have all kinds
of additional competencies.
They have long-term planning,
they have all the metacognition of all these things.
And in between there are all sorts of different systems.
There are self-driving vehicles, autonomous robots,
cells, tissues, insects and various kinds of systems
that are somewhere between this and this.
And so that's the idea when we talk about intelligence,
we're talking about the ability to reach certain goals
despite perturbations or barriers.
So now let's talk about this.
What kind of collective intelligence
do cellular swarms deploy?
What can they actually do?
Well, let's look at development again.
The point of development,
the most exciting thing about it isn't the complexity.
It's not that a simple system,
a relatively simple system like an OSI
gives rise to this amazing complex body reliably.
I mean, that's cool,
that's not really the whole story.
Because actually, if you cut these early embryos
in half or in quarters or more,
you don't get partial bodies,
you get perfectly normal monosygotic twins.
And so what you see then is that
in this anatomical morpho space
from different starting positions,
you can reach the same ensemble of gold states
corresponding to a normal human target morphology,
despite the fact that you're starting
from different positions, unexpected ones.
And in fact, you can avoid certain local minima
and all of that.
So that's interesting.
That doesn't stop at embryogenesis
in some animals like this salamander.
They regenerate throughout their lifespan.
These axolotls regenerate lots of different body parts.
So for example, the limb,
you can amputate at any position.
It builds exactly what's needed
to build a perfect salamander limb.
They regenerate their eyes, their jaws,
their tails, including spinal cord, ovaries and so on.
And the amazing thing about regeneration
isn't that it happens.
The amazing thing about it is that it knows when to stop.
When does it stop?
Well, all the activity stops
when a normal salamander arm is complete.
So how does it know when it's complete?
So what you're seeing is an error minimization scheme.
You're seeing the ability to,
you've been deviated from this pattern to this pattern
and you somehow correct.
So by the way, mammals can somewhat do this.
So humans regenerate their liver.
Even the ancient Greeks knew that.
I have no idea how they knew that.
Human children regenerate their fingertips.
So if you lose a fingertip at a certain age,
you can actually regrow it with a nice,
cosmetically a pretty nice outcome.
And deer are a large adult mammal
that regenerates its antlers.
So bone, vasculature, innervation,
up to a centimeter and a half of new bone per day
when these guys are regenerating.
And so fundamentally what we have here
is the ability of these patterning systems,
not just to make complexity,
because emergent complexity is easy,
cellular, automata, fractals.
