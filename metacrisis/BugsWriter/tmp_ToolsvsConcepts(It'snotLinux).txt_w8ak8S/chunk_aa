I know it's boring but my friend one of my friends keep asking me to make a video about
the right mindset because I think most people who watch my channel they don't have it and
he's like what's the point of making all that bullshit videos if your users don't have
the correct mindset alright.
So first of all why you keep asking in the comments that I want to get good with Linux
I mean I understand even I write in my videos that okay how to get good with Linux but in
the end of the day this is not how you should okay you say it it's fine but if you are thinking
like this this is wrong okay Linux is a kernel you don't really want to get good with kernel
alright most of the programs you use in Linux you can use it on free VSD just because when
I open the terminal and type NeoFetch you think like oh Linux is so cool this is stupid
okay Linux is not cool you don't even want to get into the kernel low level stuff okay
not even the syscalls syscalls are like the interface for you know doing some things within
the kernel what you want to do is you just want to learn some tools and you also need
to understand the difference between tools and the concept okay so what's the tools and
what's the concept so tools are basically like GPG is the tool and nginx is the tool
and these are like the tools which are like for someone who understand computers because
if you open the man page of GPG you're not going to understand a lot of things because
it's like encryption it's like public key private key and what is open pgp encryption
so the thing is people who are trying to learn something without understanding the concept
so these are like tools okay so they are going to have a really hard time so understand the
concept first alright so what is concept so for example if you are understanding about
public key private key encryption and stuff this is concept this is cool okay how to overcome
this if you don't like should I go for learning concept first understand what you want alright
you don't want to get good with Linux okay you want to I don't know what you want to do
so concepts are like for example if you are learning about web server hardworks then it's
concept or if you are learning about encryption encryption that's concept one more example
like it's not just restricted for the user it's also for the programmers so for example
if I open my Firefox and type python.org so the thing is python it's just a tool people
just don't people who learn most five you know like normies so they really don't really
see it as a tool so here's my tips okay these tips are not something which you really want
to do but you can do first thing every time if you want to learn something just the first
thing you should do is you should try to find the source code okay source code python alright
this is very important because most people end up using tools for like years they don't
even see the repo okay I think you know this is a very bad thing you should always see
the source code repo it's important alright so this is the source code repo python and
as you can see it's a huge program and this is created for programmers notice this okay
so if you open the documentation of python now you wait a second this is just wait a
second alright so you open the source code alright now the second thing which I would
recommend you is install the program by compiling it and not by package matching now I know
I know some people are like no this is not good like as a new user they are going to
you know have a hard time just read what are the needs of the program like what are the
system requirements and just try to compile it if you don't know what compiling is everything
then just go back to your computer science class you you're like this is not good just
understand how computers work that's it this is the concept in so in order to compile as
you can see make is a tool everything is a tool sudo is a tool every programs which on
CLI mostly comes with a configuration file even the GUI have configuration file in the
back end but doesn't matter when you really build your program it gives you the mindset
that's what that's why I'm saying this I'm not saying it's very important you can install
by package manager but let me tell you in the old days there were no package manager people
were installing things with manually like and this gives them better understanding which
most newbies don't get so after installing things from the source code like compiling
properly and not just like you know just I'm getting the binary then just run it so you
get a little bit better understanding now every tool okay so python is even you know python
is also a tool okay most people are like it's a programming language yeah I mean yeah but
it's also a tool so docs.python.org this is something which is for everything so python
is a very big programming language there are like a lot of docs but even for a simple program
we have like man pages okay so for example ls is a tool and it comes with a man page
in order to use tools you don't really have to memorize anything you just have to read
the docs read the docs and after reading the docs you know everything but again why people
have bad time reading the docs because for example if you want to learn about how to
do multiprocessing in python and you don't know multiprocessing then you're obviously
going to have like a hard time okay if you don't know what a 4k or os.4k okay it's linking
you but basically if you're jumping the tool without even understanding like what this
tool is for and how it do something like like you can read how the tool is working but if
you don't know what's the purpose of the tool then this is the problem understand the thing
first so reading the doc is all you need to do all right tools using tools are not
very hard so here's the problem okay people who want to learn about nginx what they do is they
open youtube and they search video like how to set up web server you know how to set up web
server nginx and this is the oh my god I can't see azureka you go on azureka and then you are
like they don't explain you anything they don't you know okay they are trying to explain but
this is a bad way of understanding all right so you don't want to learn about nginx architecture
from this because they have this they have this proper documentation in there in there and if you
understand the concept it's not going to be hard you can understand really nicely okay this is not
docs and here's the thing so for example nginx store oh now you must be wondering what is what
nginx is well it's just a web server I think it's like a proxy and do multiple things so
everything is a tool every tool is like have configuration and you can compile it yourself
try to find a source code repo this will help and everything comes with configuration read the docs
what what setting to what how to configure it some tools are tough because it's created for
you know technicians or somebody who already they expect you you already know for example
nginx mail imap module you don't know what imap is you don't know what mail is you're like if you
don't know what imap protocol is you're obviously going to have a hard time understanding this module
okay so for example post fix is something it's a tool all right just get this mindset okay it's
just a tool and this tools come with a lot of configuration actually I ran it in my server
and you just have to read the docs and understand what feature do what and if you understand the
tool like why you're using a tool you also can predict this feature must be in this tool all
right you can predict it by yourself for example if I'm using ls so I can predict there must be
some feature to you know assorted according to name or size or something all right so you want
to learn tools basically but tools are something which you don't want to memorize it you can read
the docs in practice tools need practicing okay concept needs understanding practicing concept
needs understanding understanding this is very important all right you need to have a really
good understanding of concept and you need to do really good practicing of tools all right
so how to get started this is the question now don't use tools which are more tech related use
some simple tools in Linux for example newsboard newsboard is just a simple tool for basically
reading rss feeds now in case if you don't know what rss feed then first okay this is just an example
or something more simple like just ls or cd some basic commands all right so just use the tools
which are pretty simple and not so you know heavy not so also use minimal tools okay this this will
also help right so because if the tools are tool is minimal then there are less features less
talks everything is less so it becomes more easy and then understand if you want to understand
Linux so basically one more thing okay let's let's let me add one one thing so in the concepts
and the concept is cool but sometimes in the tools there are concept what is that what is that so
basically it's how the tool is working for example gate i was learning a lot about gate okay so most
we will learn gate okay but let me show you some git repo uh let's do this uh not this i think i
removed so most people learn about gates so for example this repo so what they don't do is they
don't understand how gate is working they don't understand that this dot get directive what it do
and what like you know they just try to memorize some commands like get in it and you know get
they don't see the configuration they don't even open the git man page all right they they don't
read docs they just go for some shitty videos so they don't even see that where the configuration
files happen like where it exists they don't see all these environment variables which you can set
for some for the functionality you know so try to do these kind of stuff so git is like a huge tool
so for example configuration mechanism it's written here but you know most people don't do
these kind of stuff everything is a tool this shell is a tool like this the shell is a tool like
okay yeah shell is a tool and the prompt is a tool the command line is a tool this neo fetch is a
tool every tools come with configuration it runs as a daemon or it runs like so see if you're running
a mail program and you're constantly reading for mails then like waiting for mails then it
have to run as a daemon and tools can be interrupted you can send some interruptions signals you can
stop tools every tool run as a process all right and multiple process sometimes you can grab it you
can just stop it python is a tool okay everything is a tool you can read the docs and if you don't
understand in something in the doc then your concepts are weak basically okay or or sometimes
what happens is for example if you're reading the documentation for pass all right so it says
like keys gpg keys now you don't know what gpg is that's the problem so this is also a problem
so this development is a tool to go find a source code to just understand also one big thing read
the history of the tool okay why i saying okay at this point so many left the video but you're
lucky all right read the history of the tool it just get emotional about the tool for example
i'm very emotional about some tools like i really love those tools all right not two programs some
big programs but the thing is when you read the histories it's really entertaining and one more
tip i want to give don't watch youtube videos but sometimes to understand concepts you can watch
some like a benita video on networking okay it really helped me so i'm not thinking all videos
are trash i'm just saying this culture like net ninja like we like net ninja
tutorials are trash okay tutorials i make tutorials and tutorials are trash like for example net
ninja he he makes really good tutorials but these are trash he sometimes he uh you know explain the
concept but you don't really need it in the end of the day you you know tutorials are like very
limited and you can't just get like get that skill of reading docs from watching tutorials all right
so one thing you always uh should do so i was learning a lot about free vst operating system
i was reading the docs but i listen to you know talks always listen to talks so every time i
start with something new so i was learning about web rtc which is a google feature so i literally
listen to the talk by google because these guys like when they do talks they they represent very
nicely they explain very nicely and it it's entertaining because you see some see this developer
talking about their project so for example if you just listen to this previously talk so she starts
with the history so she tells like how this project started and you you know what if you like some
tools just be a maintainer like just contribute if you're using free software and stuff okay so just
find some bugs and report it and do the same but all all i'm saying is if you put this mindset of
tools all right so for example linux if you read the history you'll understand that you don't really
want to learn linux you want to learn mostly canoe utils that's what you want also if you want to
learn all this then you know uh just don't use uh tools like um okay to be honest when somebody
says linux it's really confusing what they want because most of the time it is confusing but if
you see it correctly mostly you want to understand how this is working inside not the entire kernel
part but at least like how linux may manage processes or you know some basic stuff like for
example okay it's really hard to explain that i at this point i just lost you so all i'm saying is
that read the history if you read the history you get better understanding of the project like
don't don't be like a history this doesn't make sense but no it it makes sense so when you read
the history you'll realize that there is gnu you know utility is and you you you get like better
connection with the program all right and practice those tools that same that's a it's a very bad
rent i think it's a very very bad video but i'm just trying to explain okay i don't really wanted
to make this video but you know i just wanted to make some normal tutorials like video but fine okay
one video's fine and
