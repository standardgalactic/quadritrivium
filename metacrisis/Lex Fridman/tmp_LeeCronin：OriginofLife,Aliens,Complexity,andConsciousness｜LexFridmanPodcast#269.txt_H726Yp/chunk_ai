a chemical computer with this CA that, that gives me something different. I can't get in a silicon
representation of a CA where all the states are clean, because you don't have the noise
trailing into the next round. You just have the state.
So the, the paper in particular, so that's just a beautiful idea to use a chemical computer to
construct a cellular automer and the famous one of Game of Life. But it's also interesting.
The really interesting scientific question of whether some kind of random perturbations or
some source of randomness can have a significant constructive effect on the complexity of the
system. And indeed, I mean, whether it's random or just non-deterministic, and can we bake in that
non-determinism at the beginning, you know, I wonder what, what is the, I'm trying to think
about what is the encoding space. The encoding space is pretty big. We have 49 starots of 49 cells,
49 chem bits, all connected to one another in like an analog computer, but being read out
discreetly as they come, the BZ reaction. So just to say the BZ reaction is a chemical oscillator.
And what happened in each cell is it goes between red and blue. So two Russians discovered it,
Beluzov-Zaposkinski. I think Beluzov first proposed it, and everyone said,
you're crazy, it breaks the second law. And Zaposkinski said, no, it doesn't break the second
law, it's consuming a fuel. And so, and then, and it's like, there's a lot of chemistry hidden
in the Russian literature, actually, because Russians just wrote it in Russian, they didn't
publish any English-speaking journals. It's heartbreaking, actually. Well, yeah, sad and
it's great that it's there, right? It's not lost. I'm sure we will find a way of translating it
properly. Well, the silver lining slash great or sadness of all of this is there's probably ideas
in English-speaking. Like, there's ideas in certain disciplines that if discovered by other
disciplines would crack open some of the biggest mysteries in those disciplines. Like, computer
science, for example, is trying to solve problems like nobody else has ever tried to solve problems,
as if it's not already been all addressed in cognitive science and psychology and mathematics
and physics and just whatever you want to economics even. But if you look into that
literature, you might be able to discover some beautiful ideas. Obviously, Russian is an interesting
case of that because there's a Lawson translation, but you said there's a source of fuel, a source of
energy. Yeah, yeah. So, the BZ reaction, you have an acid in there called Melonic Acid. Yeah.
And what happens is it's basically like a battery that powers it and it loses CO2. So,
decuboxlates. It's just a chemical reaction. What that means we have to do is continuously feed
or we just keep the BZ reaction going in a long enough time. So, it's like it's reversible in time.
But only like. Yeah.
Only like. But it's fascinating. I mean, the team that did it, I'm really proud of their
persistence. We made a chemical computer. It can solve little problems. It can solve
traveling salesman problems, actually. Nice. But like I say, it's-
But not any faster than the regular computer. Is there something you could do?
Maybe. I'm not sure. I think we can come up with a way of solving problems
also really complex hard ones. Because it's an analog computer and we can,
it can energy minimize really quickly. It doesn't have to basically go through every
element in the matrix. Like flip it. It reads out. So, we could actually do Monte Carlo
by just shaking the box. It's literally a box shaker. You don't actually have to
encode the shaking of the box in a silicon memory and then just shuffle everything around.
It's analog. It's natural. So, it's an organic computer.
Yeah. So, I was playing around with this and I was kind of annoying some of my colleagues.
I'm wondering if we could get to chemical supremacy, like quantum supremacy.
And I kind of calculated how big the grid has to be so we can actually start to solve problems
faster than a silicon computer. But I'm not willing to state how that is yet because I'm
probably wrong. It's not that it's any top secret thing is I want, I think I can make a
chemical computer that can solve optimization problems faster than a silicon computer.
That's fascinating. But then you're unsure how big that has to be.
Yeah. I think, I mean, it might be a big box hard to shake.
It might be exactly a big box hard to shake and basically a bit sloppy.
Did we answer the question about do cellular time exist outside the mind?
We didn't, but I would posit that they don't. But I think minds can, well...
So, the mind is fundamental. What's the...
What I mean is, well, I mean, sorry, let's go back. So, as a physical phenomena,
do CAs exist in physical reality? Right? I would say they probably don't exist outside
the human mind, but now we've constructed them. They exist in computer memories.
They exist in my lab. They exist on paper. So, they emerge from the human mind
I'm just interested in because Steven Wolfram likes CAs. A lot of people like CAs and likes to
think of them as minimal computational elements. I'm just saying, well, do they exist in reality
or are they a representation of a simple machine that's just very elegant to implement?
So, there's a platonic question, I guess. I mean, it's...
There's initial conditions. There's a memory in the system.
There are simple rules that dictate the evolution of the system. So, what exists?
The idea, the rules, the... Yeah, people are using CAs as models for things in reality to say,
hey, look, you can do this thing in a CA. And when I see this, I'm saying, oh, that's cool.
But what does that tell me about reality? Where's the CA in spacetime?
I see. Well, that's right. It's a mathematical object. So, for people who don't know cellular
automata, there's usually a grid where there's one-dimensional, two-dimensional, or three-dimensional.
And it evolves by simple local rules like you die or are born if the neighbors are alive or
dead. And it turns out if you have... With certain kinds of initial conditions and with
certain kinds of very simple rules, you can create arbitrarily complex and beautiful systems. And to
me, whether drugs are involved or not, I can sit back for hours and enjoy the mystery of it,
how such complexity can emerge. It gives me almost like... People talk about religious experiences.
It gives me a sense that you get to have a glimpse at the origin of this whole thing.
Whatever is creating this complexity from such simplicity is the very thing that brought my
mind to life. That's me, the human, our human civilization. And yes, those constructs are
pretty trivial. That's part of their magic is even in this trivial framework, you could see the
emergence or especially in this trivial framework, you could see the emergence of complexity from
simplicity. I guess what Lee, you're saying is that this is not... This is highly unlike systems
we see in the physical world, even though they probably carry some of the same magic mechanistically.
I mean, I'm saying that the operating system that a CA has to exist on is quite complex.
And so I wonder if you're getting the complexity out of the CA from the boundary conditions,
the operating system, the underlying digital computer... Oh, wow. Those are some strong words
against CA's then. Not again. I mean, I'm in love with CA's as well. I'm just saying,
they aren't as trivial as people think. They are incredible. To get to that richness,
you have to iterate billions of times and you need a display and you need a math coprocessor
and you need a von Neumann machine based on a Turing machine with digital error correction
and states. Wow. To think that for the simplicity of a grid, you're basically saying a grid is not
simple. Yeah. It requires incredible complexity to bring a grid to life. Yeah.
Yeah.
Well then, what is simple?
That's all I wanted to say. I agree with you with the wonder of CA's, I just think. But remember,
we take so much for granted what the CA is resting on. Because von Neumann and Feynman
weren't showing, weren't seeing these elaborate structures. They could not get that far.
Yeah, but that's the limitation of their mind.
Yeah, exactly. The limitation of their pencil.
But I think that the question is whether the essential elements of the cellular automata
is present without all the complexities required to build a computer.
The reason I find it incredible is that my intuition is yes. It might look different.
There might not be a grid-like structure, but local interactions operating under simple rules
and resulting in multi-hierarchical complex structures feels like a thing that doesn't
require a computer.
I agree. But coming back to von Neumann and Feynman and Wolfram, their minds and non-trivial minds
to create those architectures and do it and to put on those state transitions.
I think that something that's really incredibly interesting that is understanding how the human
mind builds those state transition machines.
I could see how deeply in love with the idea of memory you are. It's like how much of E equals
mc squared is more than an equation. It has Albert Einstein in it.
You're saying you can't just say the equations of physics are a really good simple capture
of a physical phenomena. That equation has the memory of the humans.
Absolutely.
But I don't know if you're implying this. That's a beautiful idea, but I don't know
if I'm comfortable with that sort of diminishing the power of that equation.
No, it enhances it.
Because it's built on the shoulders, it enhances it.
I think it enhances it. That equation is a minimal compressed representation of reality.
We can use machine learning or Max Tecmark's AI Feynman to find lots of solutions for gravity,
but isn't it wonderful that the laws that we do find are the maximally compressed representations?
Yeah, but that representation, I guess the universe has the memory of Einstein with that
representation, but then you can now give it as a gift for free to other alien civilizations.
Einstein had to go through a lot of pain together, but it's a low memory.
I say that physics and chemistry and biology are the same discipline.
Laws in physics, there's no such thing as a law in physics, it's just low memory stuff.
Because you've got low memory stuff, things reoccur quickly.
As you get building more memory, you get to chemistry, so things become more contingent.
When you get to biology, more contingent still, and then technology.
So the more memory you need, the more your laws are local.
That's all I'm saying, and the less memory, the more the laws are universal,
because they're not laws, they are just low memory states.
We have to talk about a thing you've mentioned already a bunch of times, but
doing computation through chemistry, chemical-based computation, I've seen you refer to it as
in a sexy title of chem-putation.
What is chem-putation and what is chemical-based computation?
Chem-putation is a name I gave to the process of building a state machine to make any molecule
physically in the lab. As a chemist, chemists make molecules by hand, and they're quite hard.
Chemists have a lot of tacit knowledge, a lot of ambiguity. It's not possible to go uniform
me to the literature and read a recipe to make a molecule and then go make it in the lab every
time. Some recipes are better than others, but they all assume some knowledge, and it's not
universal what that is. So it's carried from human to human, some of that implicit knowledge.
You're saying, can we remove the humor from the picture? Can we program?
By the way, what is a state machine?
So a state machine is, I suppose, an object either abstract or mechanical, where you can do
a unit operation on it and flick it from one state to another. So a turnstile would be a
good example of a state machine. There's some kinds of states and some kind of transitions
between states, and it's very formal in nature in terms of, like, it's precise.
Yes, you can mathematically precisely describe a state machine. So a very simple Boolean
gates are a very good way of building logic-based state machines. Obviously, a Turing machine,
the concept of a Turing machine where you have a tape and a read head and a series of rules
in a table, and you would basically look at what's on the tape, and if you're shifting the tape
from left to right, and if you see a zero or one, you look in your lookup table and say,
right, I've seen a zero and a one, and then respond to that. So the turnstile would be,
is there a human being pushing the turnstile in direction clockwise? If yes, I will open,
let them go. If it's anti-clockwise, no. So yeah, so a state machine has some labels
and a transition diagram. So you're looking to come up with a chemical computer to form state
machines to create molecules, or what's the chicken and the egg? So a computation is not
a chemical computer, because we talked a few moments about actually doing computations with
chemicals. What I'm now saying is I want to use state machines to transform chemicals.
So build chemicals programmatically? Yeah. I mean, I get in trouble saying this. I said to my
group, I shouldn't say it, because I said, look, we should make the crack bot in the crack robot.
Crack bot. The robot that makes crack, but maybe we should scrub this from...
So maybe you can educate me on breaking bad with math, right?
Yeah. So in breaking bad... So you want to make basically some kind of mix of ex machina
and breaking bad? No, I don't. For the record, I don't. But I said...
You don't. I said, that's what I'm going to do once you release the papers.
I shave my head, and I'm going to live a life of crime anyway. I'm sorry.
No, no. So yeah, let's get back to... So indeed, it is about making drugs, but
importantly, making important drugs. All drugs matter.
Yeah. But let's go back. So the basic thesis is chemistry is very analog. There is no state
machine. And I wandered through the paper walls in the Japanese house a few years ago and said,
okay, hey, organic chemist, why are you doing this analog? And they said, well, chemistry is
really hard. You can't automate it. It's impossible. I said, but is it impossible?
I said, yeah. And they said, I got the impression they were saying it's magic.
And so when people tell me things are magic, it's like, no, no, they can't be magic, right?
So let's break this down. And so what I did is I went to my group one day about eight years ago
and said, hey, guys, I've written this new programming language for you. And so everything is
clear. And you have to, you're not allowed to just wander around the lab willy-nilly,
you have to pick up things in order, go to the balance at the right time,
and all this stuff. And they looked at me as if I was insane and basically kicked me out of the
lab and said, no, don't do that. We're not doing that. And I said, okay, so I went back the next
day and said, I'm going to find some money so we can make cool robots do chemical reactions.
And everyone went, that's cool. And so in that process,
the first to try to convert the humans to become robots. And next you
agree, you might as well just create the robots. Yes. But so in that, in that, the formalization
process. Yeah. So what I did is said, look, a chemical, to make a molecule, you need to do
four things abstractly. I want to make a chemical Turing machine. Because a Turing machine,
you think about this, imagine a Turing machine. Turing machine is the ultimate
abstraction of a computation. Because it's been shown by Turing and others that basically
a universal Turing machine should be able to do all computations that you can imagine. It's like,
wow, why don't I think of a Turing machine for chemistry? Let's think of a magic robot
that can make any molecule. Let's think about that for a second. Okay, great. How do we then
implement it? And I think it's right. So what is the abstraction? So to make any molecule,
you have to do a reaction. So you have to put reagents together, do a reaction in a flask,
typically, then you're after the reaction, you have to stop the reactions, you do what's called
a workup. So whatever, call it down, add some liquid to it, extract. So then after you do a
workup, you separate. So you then remove the molecules, separate them all out. And then
the final step is purification. So reaction, workup, separate purify. So this is basically
like my exactly like a Turing machine where you have your tape, you have your tape head,
you have some rules, then you run it. So I thought, cool. I went to all the chemists and said,
