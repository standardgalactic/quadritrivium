it doesn't let you take a bunch of models and stick them together it doesn't separate syntax from
semantics it only has one semantics namely the differential equation semantics which is the
most important semantics but there are others that you would like it has no support for what's
called stratifying models that term was very confusing to me it's sort of jargon in this
community what it means is taking a model and splitting one stock one type of group of people
into several stocks so for example you might have a simple model and then you may say oh we
should subdivide people according to age groups because you know older people would get the disease
more more than younger people or something like that and you would like your software to make it
easy to to do that um it had no support for collaboratively building models it's basically
one person as the software and they make the model they could talk to other people but they're the
one who's building the model and it's not free it's a commercial piece of software and it's not
open source so people can't get in there and modify it and improve it our new work aimed to fix
all these problems and I could say we're well on the way to fixing all these problems so the reason
it's so important to close models is that the models that get actually used in the real world
are immensely complex so here's a picture of osgood and lee's covid model this is a page
in any logic the software this is the whole model as you can see it's an enormous web of
of stocks and flows and such and you you really would prefer actually not to have to deal with
this whole entity at at once you'd prefer to have it be thought of as being made up out of smaller
pieces because mentally it is made up out of smaller pieces but but that's not captured by the the
software unfortunately any logic just doesn't do that for you so we've not created software that
does that it supports compositional modeling with the stock flow diagram so it's called stock flow
and if you click on this link you'll go to github which is where computer programmers keep their
open source software so you can get download the software and so it lets you create and compose
open stock flow diagrams and lets you stratify them that is subdivide stocks into smaller stocks
for those of you who like category theory I'll mention that that's done using a technique called
pullbacks in category theory it lets you choose among several different semantics
functors so one of which is the differential equation semantics and of course it lets you
solve the differential equations once you get them and then Nate Osgood and another student of
his Eric reticop went further and made a graphical user interface for stock flow so stock flow was
written in this programming language called algebraic julia to interact with it you needed to know
algebraic julia but this graphical inner graphical user interface called model collab
it runs on a browser and you manipulate the the model by actually dragging and dropping little
boxes and and drawing little edges between boxes so and because it runs on multiple browsers
schemes of different people located in different locations can collaborate to build stock flow
diagrams so I could build my piece you could build your piece we could both save them they'd
be saved on on the cloud I see there's this little thing called cloud here oh that that's
not what it's actually for though sorry that's a mistake uh but but you can you can save Nate's
gonna laugh at that um actually clouds are these little funny things here um but you can save you
can save your your models on uh on the internet and so that other people in different locations
can access them and then glue them together to form larger models so in the goal to really apply
mathematics there are many levels because the next step is to actually train epidemiologists to use
model collab so we have some things going for us so first of all Nate Osgood runs regular training
sessions which goes by the quasi militaristic terminology favored in computer science of boot
camps because they're supposed to be intense so he runs boot camps on epidemiological modeling so
he is beginning to teach people model cloud second no understanding of category theory or the
programming language julia is required to use model cloud so it's really crucial when you're
applying category theory that you can ultimately black box the category theory in so that people
do not explicitly need to know it to use what you're creating although they may be using it in
some kind of implicit way uh and third it's free while any logic you have to pay for which
should ultimately be an advantage but i should still say it will take a lot of work because when
you have a generation of modelers trained to use any logic this new paradigm uh is not so easy to
shake so as i just already said applying mathematics takes many steps and as i moved from being
more of a pure mathematician towards a bit more at least some of the some days of the week of an
applied mathematician i realized how easy pure mathematicians have it you just write a paper
you explain your idea you throw it out there and you hope that somebody reads it but when you're
trying to actually carry out the the full application of an idea you have to interact with many people
with many skills persuade many different communities that what you're doing is actually
worth doing and it's much more elaborate but i should also say very satisfying endeavor
so i'll conclude by saying that applied category theory is interesting in in many ways some of
which i hope will be interesting to philosophers uh so some of these ways are separate from sort of
the core mathematical ideas so one thing as i hope i've illustrated here by my somewhat
self-centered history is that it requires new forms of communication and collaboration
because they're talking to new types of people and luckily uh these are starting to come into
existence so there's an annual applied category theory conference that's first started in 2018
uh run that time but by brendan fong and some of his other young friends uh another is a journal
so this is a journal called compositionality which is again started by brendan fong and some
of his young collaborators and friends this is an open access free to publish free to read journal
of applied category theory which i recommend to your attention and another is called the
category theory community server which is sort of like a a chat site or a discussion site for
applied category theory actually for all category theory but it has a lot of applied
category theorists there uh this was initiated by my grad student christian williams and so these
are different ways for category theorists to start talking to other kinds of people people
who want to might want to apply category theory or learn category theory and i hope that these
catalyze the the process then try to outline here another thing is that category theory raises
ethical issues in ways the category theorists aren't used to
sure mathematicians tend to feel themselves somewhat insulated from a lot of ethical issues
because what although their math make it used for all sorts of purposes
they don't consider themselves particularly responsible for how their mathematics gets used
because it's so abstract that they sort of can blame someone else for understanding it
doing something with it um but when you start doing explicitly applied category theory that
sort of veil of protection is is ripped open and you see that what you're doing may have a fairly
immediate effect so for example the biggest funder of research on applied category theory
is currently the u.s military right now and also a lot of applied category theory is being used
for artificial intelligence or machine learning or large language models or so on
so i'm not saying that those are necessarily bad things i'm saying that those are
things that definitely raise serious ethical issues and so i've worried about the danger that
applied category theory will wind up merely intensifying the already existing
um patterns in society that is it will only make the richest and most powerful people even
richer and more powerful i would prefer it if applied category theory could do something
really different really new this is one reason why i've tried to focus on epidemiology
which is a little bit different than than some of the other uh applications of course even
epidemiology ultimately feeds into the healthcare system so there are questions about that as well
i would really like to use applied category theory for environmental issues but i haven't
quite gotten there yet anyway sorry i just wanted to emphasize that uh you know ethics
is the provenance of philosophers and this is a really interesting intersection of mathematics
and ethics which i hope that people think about and another thing applied category theory does is
revitalize what is a very old question which mathematical structures are best for describing
and designing systems i emphasize designing because with the rise of computers whatever you
can think about clearly enough you can make so it's not merely describing the external world
it's you're also making worlds based on your descriptions and so this immense freedom that
you have in computer science that the question is what's what should guide you and it opens progress
it opens possibilities for some really radical progress because these are some really brand new
ideas that we're talking about here that make let us organize systems in new ways so i think there's
a lot to think about here and i hope hope some people here uh give it a try okay i think i'll
declare it done
brilliant thank you
see why i got drawn in by him 30 years ago it's uh
these ways of conveying ideas so clearly okay um do let's have some some questions then um
let me bring up the people if people online have some questions that they can raise a hand and i
potentially should be able to see for anyone here
uh okay uh mark's good i do have a question and i'm i'm finding stuff that i
thanks for that by the way um this is really exciting stuff for me but i'm wondering if i'm
biased and reading too much into this that uh that just works in my self-interest um i do
philosophy of time and um i'm one of the uh the few people who defend the notion that time flows
and um i see it in your work uh but i'm maybe it's through these biased eyes that this uh this
project is bringing back the idea of uh of thinking of uh differential equations for instance as
things that flow uh that functions or something that flow and i noticed the importance of diagrams
as uh and these diagrams of uh are reminiscent of what organizations would call flowcharts and um
i'm i'm wondering whether i'm reading too much into this as something that might be an answer to
the the static view of uh of uh in in in maths that came out of set theory and uh um thinking of
um functions as as something that uh is static and not doesn't flow so i'm i'm wondering whether
or not i'm reading too much into it so maybe maybe that's the question sure um yeah the question of
static versus dynamic is as you know very well extremely tricky question because i could take
any dynamical system and when it's when it's done or when we imagine it as being laid out
in time then we can think of it as as a static thing with time as just another space like
dimension and and i think there's very hard very hard to like definitively break out of that uh so
but nonetheless category theory is a generalization of set theory in a sense in which
instead of just having elements in a set you have objects and also morphisms and the morphisms
have are meant to convey some kind of dynamic uh aspect of the system that is an amorphism goes
from an object to an object and that's a very primitive sense of dynamics there of the start
and the end and and and it brings a kind of dynamical quality to to the foundations of mathematics
which is is a real thing it's not it's not just an illusion uh i mean even though you could if
you ask a traditional mathematician what is the category and they're saying oh it's a set of objects
and a set of morphisms and some functions doing this and that right so you could say oh we're just
back in the same old paradigm and that's what i meant by it's hard to definitively break out of
that paradigm i i think it's more in some ways more of a question of attitude rather than than
anything else uh and anyway i think the interesting thing about the differential equations here may
be the interesting new thing maybe the study of open differential equations which are differential
equations where some quantities are explicitly labeled as affected by the outside world affected by
the part of the world which is not modeled by the differential equation so uh traditional
differential equations well no uh physicists often like to study what are called autonomous
systems of differential equations where you know everything there is to know once you know the
differential equations uh whereas open differential equations which i should say are also studied by
which is this and especially engineers have certain quantities which are not determined by the
differential equation they're regarded as being affected by the outside world and and that that
on the one hand allows you to see systems of differential equations as morphisms that it
could stick together by sticking some of these six quantities on the edge to some other quantities on
the edge but it also means that you're you're not just dealing with a deterministic system in
the classic sense anymore because you have quantities that are affected by the unknown
so so they it definitely changes your attitude towards differential equations
Thanks uh oh a question from Toby it's not so much a question sorry although i would love to i mean
there's lots of questions i could ask but i i need to head off because i actually have to go give this
talk again just now so thank you very much for inviting me and uh i hope the discussion is
profitable okay thanks thanks to me uh i had a um i was talking about the interest of people around
here is is the difference between when you get variables that are just sort of associated with
each other there's some kind of statistical association versus when you think there's some
kind of causal connection between them uh and you might think you might think you can go much
better grip on the world if it isn't just association data but there's a you know that a causes b
other ways of getting at this through your um or is it that you i guess the modelers are kind of
coming already with their sense of what causes wild and is there any way representing the difference
yeah so this particular line of work that i was outlining as you say it i was mainly
most of my talk was about model building where you you have your opinion about what causes what
and how it affect what how x affects y and you build the model into that so there's a flip side of
the whole um modeling process which i didn't talk about at all which is incredibly important in
epidemiology which is in inference so you measure data and you try to establish causality you know
and also you know various numerical quantities which you would then put into your model um so
so there's a lot that applied category theory has to offer to that and i'm afraid i'm not quite as
uh knowledgeable about that i will say that um Brendan Fong for his master's thesis uh worked on
a categorical approach to uh Bayesian networks and so and and and that has subsequently
grown into things like what toby was discussing uh and so that should that's that's also part of
the big story and another part of it is that there's a technique called
particle filtering where you which is widely used by epidemiologists where once you have one of your
models of the sort that i've been discussing you run it and you run it a bunch of times and you
see what kind of outcomes it predicts but then you use that to uh to compare to reality and you use
that to estimate the parameters that should be in your model so so i guess what you could say is that
like what i've been describing was just sort of one half of a feedback loop of interaction between
modeling and then comparing model with reality and and yeah so the whole thing should be should be
carefully understood and i'm afraid i have sort of focused on one half of it
yeah i've seen very diagrammatic techniques from category theorists and
really get it kind of causal modeling i mean that exists out of that doesn't it
yeah it does and that's important okay um well i just think there's no further questions and we've
reached six o'clock anyway so let's just oh sorry was there one there was a one sorry those dominates
go here you go yes sorry i'm i'm casting around i've lots things to say i'm trying to formulate
them to a question that's difficult by john at this point and so one thing that in i know in
computer science is quite a big deal is sort of algorithms and data structures um and kind of
getting the right data structure for the right task to get good performance um and
i think you know there's a lot of things that category theory has to say about this um uh
kind of describing data structures in in in a more abstract ways for polynomial punctures and things
like this um so what i haven't quite sort of understood is is how much of that kind of work
is going on in in the applied category sort of movement recently sort of linking with with back
back with computer science the sort of like programming aspects around what i'm called kind
of classical compute science sort of algorithms data structures um do you know if there's much of
much of that going on within the sort of act world um or is that largely more back with the
compute scientists um so the algebraic julia community is really trying to blend uh
computer programming with category theory in a really rich way so that you can write
software and you can say you know define functor blah blah blah define pre-chief category blah
blah so that that and that's just one of several different initiatives to try to
bring category theory into programming so not just have it help programming it but have it
actually be part of the programming so that that's one thing there are lots of other things and I
probably don't know the other things so I will just mention again this company uh connexus.ai
