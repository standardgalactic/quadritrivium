that's just too onerous a path to category theory if you're trying to get computer scientists
much less business people to get some inkling of category theory and it's not really necessary to
take that elaborate route because category theory is something so fundamental that it can be to
explain more directly I especially recommend Eugenia Chang's book The Joy of Abstraction
which is a really wonderful introduction to category theory for people who have not had much
prior exposure to mathematics at all and it goes all the way up to the UNEDA embedding theorem
so in 2021 Perke actually left Oxford University and he became the chief scientist
of a company called Quantinium which uses category theory for quantum computing and also
natural language processing this is a picture of him on the Quantinium webpage as you can see
he's trying quite hard not to fall into the stereotypical academic image here he's a great
guy by the way you shouldn't mind me teasing him like this I think though that it is important
that's having people with personalities who are willing to break out of the stereotypical
mold of a math professor is important in this whole category theory application movement
I should say that there's a lot of interaction between quantum computing ideas and natural
language processing ideas which I won't really have time to get into to some extent they're
invisible in the last talk but if you want a real emphasis on the natural language processing
aspect the works of Ty DeNay Bradley are very good she's another newer explainer of category
theory it's a non-category theorist and she is also working in a company that uses quantum methods
and categorical methods for natural language processing
but punctorial semantics is extremely general so we it's not just applicable to the topics that
I've already mentioned so in lots of areas of science and engineering people use a syntax
where you draw diagrams and then a semantics where you convert those diagrams
into math which is very often the systems of differential equations you're describing how
things change in time you're describing dynamical systems so you use differential equations
but the interesting part is that hooking up diagrams to each other is actually composing
morphisms in a category and the fact that you're you're working with functorial semantics
says that when you compose those morphisms in the syntax category your functor
will map it the resulting composite to the composite of the two systems of differential
equations that each picture separately is mapped to so in other words there's another category
working around here where the morphisms are actually systems of differential equations
systems of differential equations with some specified inputs and outputs to surface
as the source and target of your morphism here are some different pictures you've seen a bunch
of these types of pictures I hope so electrical circuit diagrams are are one of the earliest
and very widely used this thing here's a called a petri net and it's a petri net of a particular
model for the AIDS virus and its interaction with blood cells infection of of white blood cells
this here is a very small diagram in the subject of control theory where you have some
process that in an industrial plant that you're trying to keep under control and so you take
feedback you read off information from that process and you use it to feedback
affect the the process itself to keep it on track I mean the very simplest example here would be
like a thermostat but in industrial chemistry they become much more elaborate and so there's a
whole diagrammatic language of control theory that you can read about in textbooks on that that
subject and this is a little diagram of some molecules in molecular biology molecular biology
or biochemistry they have so many different diagram languages that in fact they've set up a
committee to standardize the diagram languages so that people reading different biochemistry
papers can look at the diagrams and not have to be explained each time what the diagrams mean
but it's sufficiently broke that they uh that the committee wound up choosing three different
diagram languages because they they need multiple languages to describe different things they're
interested in so these are very widespread and the people in these different subjects don't think
of what they're doing here as category theory they don't think of it as mathematics they think
of it as this is the stuff we draw to understand the differential equations that you can convert
these pictures into the the equations of the math but these pictures are our own private
little trick for understanding what's going on but I claim that these pictures are actually also
mathematics these diagrams are morphisms in various categories which are using functorial
semantics to convert to differential equations so I decided that had to be true and I wanted to work
out the details around 2012 so I asked Brendan Fawn who eventually became my grad student to
tackle what I thought would be a very good first example namely electrical circuits
because everybody knows about electrical circuits and the mathematics of them is in
substance very well understood linear electrical circuits for example made out of just resistors
or maybe capacitors and inductors as well um I asked them to create and study a category
having open electrical circuits as morphisms so these are electrical circuits which have
certain things hanging out which serve as inputs and outputs I think the last talk they were called
so these are just these dots here um so he took forever to do it so it seemed but it turned out
that what he was doing was not just answering the question that I asked but in fact answering a
much more general question he invented a general theory which he called decorated cospans for handling
this problem but also all the other problems that I described that is potentially all the other kinds
of diagram languages I showed can be understood using the theory of decorated cospans although
the details have to be individually worked out in each case this decorated cospan formalism
is a is a recipe for getting categories of this general sort and so naturally it did take him a
while to do a good job of it and he finished this thesis on it in 2016 I won't attempt to explain
decorated cospans anymore than I just have I've given lots of talks on decorated cospans and you
can see on YouTube me giving talks about them if you're interested um I just want to mention one
little thing is that well first of all here's Brendan Fong and here's another student of mine
Blake Pollard who together with Brendan applied this theory of decorated cospans to the second
example that we tackled which was Markov processes so so so Blake did a lot of work on Markov
processes and another thing I want to mention is that Brendan went to get his PhD at Oxford so he
was in the enormous group that I mentioned of Kirke and Abramsky and I believe Kirke was his
de facto it was his de jure advisor but in fact I was the de facto advisor telling uh
talking to Brendan about this this problem and so nonetheless it's really important that this
large body of people at at at Oxford is is spreading across the world doing many things
and Brendan is one of them so after doing his PhD Brendan went to MIT in 2016 to work as a postdoc
with David Spivak so Spivak is another very important figure in applied category theory
so among other things he had helped to create a language for databases called Functorial Query
Language which has now become the basis of a company called Conexus AI with Ryan Wisniewski
as a as a head of our company but David Spivak also involved this approach to databases really
relies heavily on functorial semantics so the idea is that a database schema is is an object
in some category and that by a functor you can map it to a sort of populated or inhabited
database schema where where the your table of is actually filled with entries you can imagine
like taking a spreadsheet and actually typing in the entries that's one possible uh interpretation
of of the abstract database that has not yet been interpreted with with specific people's names and
numbers uh and in 2014 David wrote a textbook on this idea and others called Category Theory for
the Sciences so I also highly recommend this as yet another of this new generation of category
theory textbooks is trying to reach out beyond the traditional confines of the category theory
community of highly pure mathematicians toward other audiences
and in 2018 Brendan Fong and David Spivak wrote another textbook explicitly on applied category
theory which is uh fondly called Seven Sketches but its actual title is here is Lager uh emphasizing
the principle of compositionality in many guises and they taught a course on it which you can see
on youtube if you click on this link in my slides and the textbook is also available for free on
the archive as well as for purchase and I'm mentioning this stuff about things being
available online for free partially because when you're trying to reach out of the pure math
realm into the rest of the world and teach the rest of the world category theory you quickly
realize that making things easily available for free is going to speed up the process a lot
and so I think there's a general commitment so far on the part of a lot of applied category
theorists to make things open source and uh easy to get at now in 2018 my graduate student Kenny
Corsair there and I came up with structured cospans which is a simpler alternative to decorated
cospans turns out to be not quite as flexible as decorated cospans but in many cases either
formalism works and in those cases I'd say structured cospans are simpler in 2020 Cristina
Vasiliopoulou who's standing to the left there helped us understand how decorated and structured
cospans are related for a while I thought structured cospans would replace decorated cospans
but it turns out we we now see that they can't cover quite as much territory and that we really need
decorated cospans in some cases so the full story is somewhat elaborate right now and I've
given talks about that but it's it's actually very pretty so by now structured and decorated
cospans have been used to study open systems of many kinds so by open systems I mean systems that
have loose ends that are meaning systems that are morphisms in a category that you can stick
together or compose to get bigger systems and your open graphs are just a simply a graph with
loose ends it's a very combinatorial structure that's a very simple example open petri nets is
a more useful example here's a picture of an open petri net where you have
things describing other they're called they're called places they could represent like populations
of different kinds of chemicals or organisms and then you have these blue boxes called transitions
which describe how things can come out of various places and turn into things of other kinds
if you attach numbers to these transitions describing the rate at which the transition
tends to occur you get something called an open petri net with rates or maybe an open chemical
reaction that work with rates and my student Blake Pollard worked on those open electrical
circuits I've mentioned open mark-off processes I've mentioned open dynamical systems those are
the systems of differential equations interpreted as morphisms in some category
so there are papers on all of these and if you click on these brown things you'll get to those
papers so at a certain point I thought that maybe someday all of this would lead to some
unified language of the sciences and my ambition which seems very limited in retrospect
was that by interacting with scientists maybe eventually this unified language would help
scientists in one discipline talk to scientists in another discipline and share tricks of various
sorts but then something quite different happened which is much more exciting in my mind namely
in 2019 James Fairbanks who's an engineer and Evan Patterson who is a statistics
PhD began developing a computer system called Algebraic Julia for it's a system for high
performance scientific computing built on the language called Julia which is designed for
crunching numbers really fast but Algebraic Julia lets you program and using constructs from
category theory so in Algebraic Julia you can talk about categories bunkers and all these other
things that category theorists like to talk about and write your programs using those concepts so
it's a very very high level system but coupled to the raw computational power of Algebraic Julia
so they were trying to revolutionize scientific computing in this way
and in 2020 Evan implemented structured co-spans in Algebraic Julia and then using this system
for the example of open petri nets he and Mika Halter reconstructed some of a COVID-19 model
which was currently being used by the UK government so the UK government had a very elaborate
model of COVID-19 with many populations of different people with different conditions
possibly living in different locations etc and then I guess sorry the populations of these
orange boxes and able to turn into other kinds of people via these transitions in blue the
whole model is much larger than this this is just a tiny fraction of it and what they wanted to
demonstrate was that you could build the whole model by building smaller models and pieces and
then subsequently sticking together those pieces which is in fact something that had not been done
before models were sort of had to be constructed in whole cloth by essentially by one person keeping
track of the whole thing but this was a new approach compositional epidemiology and so it
attracted the attention of some epidemiologists especially since COVID-19 was a very live issue
at the time then in a different direction in 2021 Brendan Fong and David Spivak who had been
remember over at MIT decided to quit traditional academia and start their own institute called
the Topos Institute in downtown Berkeley it's an institute for applied mathematics
but with a heavy slant on applied category theory and they hired a number of people including Evan
Patterson and also Sophie Libkin who's here who will appear later in the story and it's a real
real incubator for ideas on applied category theory now and so this is another one of the
sociological moves that I had to be made I think to bring applied category theory forward
I recommended Brendan not try to start an institute right after his first postdoc
but luckily he was much braver than I would ever be and he went ahead and did it and it's
quite successful now so in 2022 Sophie Libkin, Mika Halter, Evan Patterson, James Fairbanks
another person I haven't mentioned Andrew Boss used Algebraic Julia to systematically
build models of epidemiology using open petri nets with rates so here are some open petri
nets the rates that is the number data is not being shown here and here they're being stuck
together to form a larger open petri net the way that they're being stuck together you'll notice
is not end to end this is not the normal end to end composition that you see in a category
this is something a little bit more general we're sticking them together using a trick called an
operad so operatic composition is one of the things that they incorporated in their Algebraic
Julia software which is so this was done this previous work was done in a slightly
kind of hot basis but that this really used operads in a systematic way
and then in 2022 also another team of people including myself used Algebraic Julia to create
software for building models of epidemiology using another style of diagrams called open
stock flow diagrams well stock flow diagrams but we're making them open so here are some of those
kind of diagrams being stuck together in an operatic style that is not end to end but sort
of gluing them all together to form a bigger model so part of the point here is that when we
started talking to actual epidemiologists we applied category theorists learned more about
how they actually want to do their models and they didn't really want to do their models using
petri nets primarily they wanted to use a different technique that they considered congenial
called stock flow diagrams so in fact there's a community of epidemiologists who use stock flow
diagrams to model the spread of disease and it includes my co-authors Nathaniel Osgood
and his grad student Shaoyan Li and one crucial fact is that they did COVID modeling for the
government of Canada so they were requested by the government of Canada to set up COVID models
for a number of different provinces and in the process they gained a lot of experience
with stock flow models they already had a lot of experience and they wouldn't have been asked to
do it but they gained a lot more experience and they learned some of the problems of the existing
technology there's a beautiful thing about stock flow diagrams which is that with a little bit of
just a little bit of training you can read them and you can understand what they're talking about
so a fellow named Hogman has pushed the idea of community based modeling where you go to a
community that has some problem like a disease or some other type of problem and you help model it
and you model it by drawing stock flow diagrams which here are hanging on the wall in a room
in rural India and then people can look at those diagrams and comment on them and help you improve
the model because these people the local people they will have the knowledge of what's actually
going on that you the modeler who just flew in from from Oxford or wherever may not have
and here we see a woman here looking at the picture on the wall and this is actually from a story
where this woman noticed that some ingredient was being left out of the model that these
village elders hadn't known about or hadn't thought about and so she helped fix the model
so that's the example of what you can do and you notice that none of the people in this
story here had to know category theory but they were in fact drawing morphisms in a category
unbeknownst to themselves now most stock flow modeling on the commercial level or the height
or the government level is done using a piece of software called any logic which is very powerful
but it has several big problems it doesn't let you compose models you let's you make a model but
