if it started to think a little bit more ecologically too okay thank you so much
thanks thanks very much Toby we've got a few minutes to set up
three four minutes till we get to the hour and uh and we can hear from John hi hey John
how's it going hi yeah great should we try and let's try out the it worked with Toby so it should
work with you if I get the and then I find you and then I'm going to make a presenter
so that should a waste if you share now that should okay let's see
so I told you I'm a complete novice the yuzuma not a team sir so how do I share
does it not have a top right there was uh John yeah share tray icon okay yes it says open
share tray okay that's another roundabout way of saying you want to share okay okay
thank you so am I you see a big first slide here the first slide we've got
okay so we can be going oh yeah take it as a okay yeah I think we close that side then that's
pretty good let's see let's see yeah so we're good good from our end is everyone on lines okay
so we've got um I can do three weeks uh till we till we begin okay great
how's it going home working you up too early in California uh not too early
what is it it's nine days yeah it's yeah uh that's the problem of living on the very west
coast of the world is that everyone else wakes up too early
but I like but I like it's a miracle we can we can do this sort of thing right I was gonna say
I really like the ability to give talks without leaving my house so we were worth it
so yeah you were wondering about recording we've got it still be going
I know it is in the process of recording that's fine okay great uh so we'll wait so
did I quit at 10 minutes to the hour um yeah I mean it's funny it's sort of philosophy talks
I remember the first time I gave a talk to um to to maths well to a sort of non-philosophers
you kind of you know you're expected to do about sort of two to one ratio kind of talk to questions
and uh some places even worse than that and then you go then the mathematicians wouldn't have
really had questions to put you uh in 95 percent talk isn't it in five percent questions but um
actually really here you carve it okay well I'll try to I'll try to leave time for questions I should
okay yeah there's raising lots of questions still
okay so I guess we're there so let's get started so uh well gosh what an influence John John had
in my life uh there I was a uh fledgling philosopher trying to uh interested in in mathematics
and John through his writings in that in that got a long way a long time here in the 1990s
who gave me the confidence to think that you could get access to the forefront of of mathematical
and and scientific knowledge through his writings I mean what gosh what a what a joy that was to
to engage with his writings back at that time huge influence on me and you know a bunch of people
will know that we started a blog together a while ago we had a lot of conversations
over over great many years so it's great pleasure to have him speak to us here today on on the
applied category theory thank you John well thanks very much thanks for inviting me here
the influence was reciprocal uh it's really exciting to think that what one's doing mathematics
could actually be interesting to a philosopher so that one isn't just like fiddling around with
obscure equations uh so I want to talk about applied category theory which is the latest
turn in this game uh and I'll talk more about the history of the subject and what
people are trying to do than uh any mathematics per se I've given lots of talks about the
mathematics and so if all the people who I'll be uh referring to here so it's certainly easy to
click on any of the links in my slides and get into the actual mathematics but I'll try to
not say as much about that as I sometimes do so we often have this picture of different
disciplines or subject areas uh talking to their neighbors and information flowing
between pure math which is at some very abstract end uh to say the business world which is maybe
at the very concrete end in stages with each discipline talking mainly to its neighbors so
pure mathematicians talk to applied mathematicians they give uh suggestions to applied mathematicians
and they find out about problems from applied mathematicians and learn techniques from applied
mathematicians and similarly for each link down the chain with each discipline talking to its
neighbors and in this model which of course is very oversimplified and and you can easily find a lot
of faults in it uh in this model we could think of category theory as the purest of pure some
super pure mathematics that only can talk to mathematicians who then relay their insights
down the chain to the other or practical subjects um I think that's what a lot of people implicitly
feel about category theory or at least used to uh and so when people started talking about applied
category theory people laughed because it sounds like an oxymoron it just goes completely against
this picture here however I think this picture is inaccurate um for one thing a very important
fact is that starting maybe around 1980 or so it became clear that computer science really cuts
across this traditional flow of information computer science interacts almost directly
with every single piece of this uh chain computer science has a big relation to category theory
which I'll explain but it also has a huge relation to other aspects of pure mathematics
and applied mathematics and so on down to business so business businesses will need to
keep abreast of developments in computer science and so on basically we now communicate and think
with the help of these machines called computers that we have devised to help us
and and they change the whole game at every single step of the way now I have this crazy
idea that maybe category theory actually really should be thought of in a somewhat similar way
as interacting with all the different links in the chain from the pure end to the applied end
rather than being tucked away at the super pure end of the spectrum now at first this seems
ridiculous or laughable I mean for starters category theory is sort of nothing compared to
computer science everybody's walking around carrying cell phones nobody's even heard of
categories by comparison so category theory is an ant compared to the elephant of computer science
however I'm thinking about what could be not what yet is and secondly
when you think about how computers have unified the whole chain it's done so by means of the
internet which is an enormous network and category theory is nothing if not the
mathematics of networks or the science of networks it's other things too I shouldn't
have said it quite that way I mean it's it is the science of networks but it does many other
things too so so to really devise good methods of getting computers to do what we want we need
a way to think about them and I think category theory is one of the important ways to think about
them so you may think this is ridiculous still because for example if category theory was talking
directly to business you'd expect that people would be going into business doing category
theory or something like that setting up category theory businesses that sounds sort of silly but
in fact it's true so in fact people are setting up category theory businesses and that's part of
the kind of thing I want to talk about I want to talk about how category theory is now being used
at all steps along this spectrum and for that reason my talk will be less focused on the math
than on the history of how category theory became applied giving you a flavor of how it's being
applied and pointing out some of the challenges that show up before I dive in I should say that
this history is going to be extremely self-centered I am not really in a position to write a good
or talk about a good history of category theory so hopefully someone who eventually tries to
write a history of applied category theory will listen to this talk and fold it in as one data
point I'll talk about a lot of people but I will also leave out a lot of people and I really
apologize to all the people who work on applied category theory I'm not mentioning there's just
no way for me to do a fair treatment of this big subject okay so I'll start arbitrarily in 1963
when Bill LaBeer introduced a concept called functorial semantics so it's a very general concept
where you have a category that describes syntax describes ways of writing things down
and then you describe the process of interpreting those expressions or giving a meaning to those
expressions via a functor so the functor will send expressions to their meanings but a crucial
aspect of this whole setup is there's not one god-given functor f that does this you can choose
various functors from the category c to various other categories g because there are different
ways to assign meanings to expressions and that flexibility is very important
and it became important in computer science so for example there's a nice there's a way to think
about it where a sufficiently well-behaved programming language may give a category where
you think of the objects as types or data types we've already heard about that idea so types x y z
etc and then a morphism between objects like a morphism f from x to y we think of as a program
that accepts data of type x as input and outputs data of type y and then the fact that you can
compose morphisms tells you that you can hook up two programs to get a bigger program
where the output of the first program becomes the input of the second and that combination
that is a program in itself so I could say there's like the relationship between the
lambda calculus which is sort of an idealized programming language simplified programming
language and cartesian closed categories understood by labbeck is an example of this paradigm of
using functorial semantics for computer science but here I'm only so far talked about the category
c I haven't talked about the the functor so what the functor could do well we could for example
take a functor from our category to the category of sets map each data type x to a set I know that
would be the set of possible values of that data so like you could have a data type like real numbers
and then F would map it to the actual set of real numbers and then each program gets mapped
ideally to a function and the key fact of a functor is that it preserves composition
so that composing programs would compose the would give rise to composing the functions they
compute and the identity program which does nothing at all you interpreted via this functor
F it gives you the identity function which does nothing at all on a set so that's a that's a
paradigm that became important in theoretical computer science I wouldn't say that most computer
scientists know or care about functorial semantics but in a certain community of the more mathematical
theoretical computer scientists this idea has become quite important and there are certain
languages like haskell for example and others that that really take advantage of this viewpoint in
particular haskell uses a category theoretic construct called monads which has sent many
generations of young computer scientists running for for help from category theorists
to try to figure out what a monad is I don't want to explain what a monad is it's a category
theoretic construct which like many other constructs become important when you start thinking about
programming in this functorial semantics way but in the 1980s something very different happened
particle physicists realized that any quantum field theory
specifies a category and now the objects are roughly speaking collections of particles
and the morphisms are roughly speaking ways for particles to interact in terms of other particles
and in fact Feynman drew pictures called Feynman diagrams for describing how particles interact
with each other this was a bold move because although it seems very intuitive here you have a
proton and an anti-proton coming in from the left and then they collide and all sorts of other
particles shoot out in reality particles are not little dots moving along little straight lines
quantum mechanics says that particles are are wave-like in character so when Feynman introduced
this pictorial language he got a lot of opposition from older quantum physicists like Heisenberg
and Bohr and yet it turned out Feynman was correct in doing this what Feynman diagrams
actually are later became clear much later is there are pictures of morphisms in specific
categories and each individual quantum field theory gives a category and then that determines
what allowed Feynman diagrams you can write so if you have a theory that doesn't have quarks in
it you're not allowed to write this Q line for quark and then what do you do with these pictures
well your your goal in particle physics is to get a bunch of numbers like what's the probability
that if I smack two particles into each other that some other particle sheets out so for calculating
numbers we need to interpret our Feynman diagram that is in the functorial semantics attitude we
need to functor from our category to some other category which assigns meaning to the Feynman
diagrams in this category we could take the category of Hilbert spaces a widely loved
mathematical structure in quantum mechanics and so then it will this functor will turn any Feynman
diagram into a morphism in the category of Hilbert spaces and that's a called a linear operator
between Hilbert spaces and so you can look at what physicists are doing with Feynman diagrams
as basically using them as a syntax which they then apply the semantics to to then grind out
numbers now Feynman probably would have laughed at this whole business because he knew what he
was doing he didn't need any categories just to tell him what what he was doing but by the 1980s
particle physics had become elaborate enough and deeply connected with enough pure mathematics
that this attitude of thinking of quantum field theory in terms of functorial semantics became a
really profitable attitude you could do things with category theory that particle physicists were
struggling to do without category theory and so it helped and this led to a whole line of work
trying to relate category theory to quantum mechanics and in 2004 Sampson Abramsky and
Bob Kirke wrote a very influential paper showing that a certain quantum process that goes by the
name quantum teleportation and also other processes could be understood using category theory and
using diagrams that resemble Feynman diagrams but here the edges in these diagrams which now I guess
we're reading from top to bottom rather than across the edges are not describing elementary
particles but just states of an arbitrary quantum system so it could be an electron or it could be
some larger system and I don't want to try to explain this in detail but there are but these
are pictures of morphisms in some category and they're equal to each other and these morphisms
describe some process where one participant who always is called Alice in cryptography communicates
a message to another participant it's called Bob and in quantum teleportation you have the superficial
appearance that you're communicating faster than light but in fact what's really going on is that
you've laid the ground for the communication by some classical process that has already transferred
some information and then the rest of the information is transferred on the basis of that
in any event quantum teleportation was a sort of magical wonderful thing that you can do in
quantum mechanics and this gave a kind of category theory theoretical count for how it how it's working
and that was quite exciting to people because it took the quantum applications of category theory
out of the realm of elementary particle physics and into a new realm that was developing which is
quantum information theory or quantum computation which has the potential for being a quite practical
thing and indeed already quantum cryptography is used so on the basis of this and other work
and also on the basis I should say of a huge amount of charisma Bob Kirker and Samson Abramsky
built a huge group of people at Oxford sometimes called the quantum group working on category
theory the foundations of quantum physics and quantum computation one interesting thing about
this enormous group here is that it's in the computer science department so not a mathematics
department not even a physics department but a computer science department here's Samson Abramsky
here and here's Bob Kirker looking sort of disreputable over on the edge that's completely
intentional he's like that and here are many many people including I see Jules Hedges who
has mentioned in the previous talk he works on categorical cybernetics so Kirker and co-authors
developed this diagrammatic method for explaining quantum physics and they eventually decided it
would be very good to write a textbook on this and so here is one of two textbooks that Bob Kirker
helped write on pictorial methods of understanding quantum physics and the one interesting thing
about this book so I first of all I recommend this book if you're interested in learning
category theory from an unorthodox and sort of easier approach than the conventional one
because it's very pictorial but I mentioned it because part of what what he wound up doing
is hiding the category theory in the sense that you don't run around saying category and
functor and all sorts of other dark and like that a lot instead you draw pictures of processes and
you explain these pictures in a hands-on way and you explain how you can stick one picture onto the
other which is composing morphisms but you don't say the word composing morphisms necessarily
because you don't need to and this is one of a generation I should say a new generation of
category theory textbooks that are part of the applied category theory movement so if
a category theory is going to reach directly to many different communities and different stages
of the knowledge chain that I drew at the top of the talk it means that you can't force people to
first become mathematicians before they then start doing things with category theory the traditional
approach to category theory treats category theories like some finishing school that you engage in
after you've already learned abstract algebra and this and that and algebraic topology and so on
