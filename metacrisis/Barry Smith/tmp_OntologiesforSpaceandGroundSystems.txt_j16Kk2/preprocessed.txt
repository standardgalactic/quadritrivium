Okay, so this is my website.
I'm Barry Smith.
I've been working on ontology for more than 30 years.
For the last 15 years or so, applying ontology in various areas,
starting with biology and medicine,
and then gradually through the army, army intelligence,
and more recently, more and more with industrial ontologies
and with space ontologies,
which is what we're going to be talking about today.
The basic strategy is as follows.
So we're going to be talking about ontologies for space and ground systems.
David is going to be talking about ground systems,
but you will find that when it comes to ground systems,
the ontology content that we need still needs to be worked out.
And so we're going to be relying in large degree on the people in this room
to help in building the framework that we need for ground systems.
So I'll be talking primarily about ontologies for space systems.
And these ontologies have been created in Kubrick,
which is a research institution associated with the University of Buffalo,
which performs a lot of work for military purposes,
and which has a large effort devoted to space ontology.
Most of the space ontology that you will hear about
is the product of the Kubrick group,
and specifically of Alexander Cox, who is in charge of the space ontologies.
I am one of the people who designed the methodology that Alex is using.
He used to be one of my students.
David Limbo is also a student from the Philosophy Department in Buffalo.
And DARPA paid for it,
but they don't want any responsibility to be assigned to DARPA.
So you should all read that very carefully.
And these are some of the other people who have contributed.
So the AFRL contributed in important ways.
These are some of the other Kubrick people who have been involved.
And this is a professor of space science, the Kubrick professor,
actually, in the University of Buffalo,
who's also been heavily involved in making sure that we don't make mistakes
about the mathematics.
And so this is the schedule.
I will talk about why we need ontologies, what they help us to do.
Then I'll present in a very, very rapid series of slides
the content of the space ontologies that we've already built.
And we're very proud of those space ontologies.
We think that they are the answer to the maidens, or several maidens' prayers.
And during that time, you should feel free to interrupt.
So if I'm going too slowly, or if I'm too boring,
or if you have some criticisms or questions,
then you should just raise your hand.
And I'm very happy to take questions.
Because then I will learn something,
and also I will be able to gain
whether I'm actually communicating these things successfully.
After the break, David will start the session on ontologies for ground systems.
He will give some ideas about what you can use ontologies for.
And then we will create a kind of interactive mapping out of the realm of ground systems
and where ontologies might be needed.
And we'll go into the details of how that will work later on.
All right, what ontologies are for.
Many large enterprises, and it doesn't matter which enterprise this is,
have many data systems, many relational databases, data models,
data science teams, and so forth, across the enterprise.
And these are all in different colors to show that they are independently developed.
Nobody knows everything in the data systems of a large enterprise.
And the people who are working in the orange area down here
probably know nothing about the people who are working in the turquoise area up there.
But it could be that there are important pieces of information up there
that the people down here need to know about,
but they don't know about them because the codes or the terminologies used up there
are just unfamiliar to the people down here.
And it could be that they are talking about things very similar
to what the people down here are talking about,
but they can't know that because they use different terminologies.
So this might be the Navy, it might be the NASA.
This kind of problem is endemic to every large enterprise.
And if you imagine a commercial enterprise which is being merged with another commercial enterprise,
then this problem just gets worse.
Now, we do not have a silver bullet for solving this problem.
But we do believe that we have a strategy which has been shown to be successful
in some important areas for solving part of this problem.
And my goal today is to convince you of that.
And it's possible to get you to join in because this is an important need.
And if you're interested in this kind of work,
then we need always more people to help get the work done.
All right.
Now, how do you solve a problem where you have data about X over here
and data about Y down there, but the data are described in different ways?
You can't just join the corresponding data tables by force.
You have to have somebody, a human being perhaps,
who knows very well how the data are treated over there
and how the data are treated over here.
And then probably a new data table or a new collection of data tables
has to be created from scratch.
And similarly, you can't query the data.
You can't find all the data in the enterprise which is data about X
because X is talked about under a different heading in other parts,
or different headings in other parts of the enterprise.
And this could be a very big problem.
And it gets worse not only when organizations merge,
but also when you need to receive data from other organizations.
I guess they find my voice irritating just as I find their voice.
All right.
Now, what is the solution, the partial solution that we offer,
which as I say has been successfully applied,
is basically one of terminological harmony generation.
So we don't attempt to create harmony by making everybody speak the same language
or use the same codes when they build their databases.
That will never work.
What we do is we create a layer outside the collection of data models
which are being employed in which there is terminological harmony.
That's to say we have a single controlled vocabulary
to describe everything in the enterprise.
And we have a single unique label for each X in the enterprise.
And if X is described in six different ways by different groups,
then in this terminological harmony layer is described in just one way,
and then we map to those six different ways by tagging.
We use the label in the ontology to tag wherever there is data about X in the enterprise.
And we do that for all the X's that the enterprise deals with.
Now, this is a controlled vocabulary.
It's a collection of terms.
Now, this collection grows as new missions are adopted by the enterprise,
but it grows in a stable way.
You don't have to overturn the whole ontology
if you suddenly have to work with a new company, for instance.
Because the ontology grows, the bulk of it stays the same.
It just gets bigger and bigger as time goes by.
And we have a lot of experience to demonstrate this easy extendability.
And the ontology is also navigable.
So if we think there might be somebody somewhere in the organization
who knows something about a certain kind of sensor,
then we can use the ontology to find...
We will find sensor in the ontology, and then we might find six children lower down in the tree.
And one of those children, if we're lucky, will be the kind of sensor that we are looking for.
And then that term, so X sensor, will have been used to tag databases number 14, 27 and 39 in the enterprise.
So now we have all the people in the enterprise, or all the groups of people in the enterprise,
who know about X sensors.
And again, this strategy has been demonstrated to work successfully.
Not just for finding people, but also for aggregating relevant data.
Now, I'm not sure I'm going to talk very much about this,
but we believe that we can use this same approach,
not just to tag data in databases, but also to tag equations,
or scientific papers, or engineering diagrams, blueprints.
So the same strategy can be applied to any kind of information-bearing entity.
And if we look at this, we find a very simple ontology has three...
I didn't do all of it, just the easy parts.
Three terms here.
And wherever we have free update state represented in our collection of scientific papers,
for instance, then we will use the corresponding term in this ontology,
and we will be able to aggregate all the papers which have something to say about free update state.
This is a larger ontology in which the free update state estimate would appear.
And so we can use this not just for scientific papers, for databases,
also for graphs, diagrams.
And we have not very much, but we do have some examples of success also along these lines.
So I'm giving this because it will return later
when we do in fact present an ontology of orbits, for instance.
I don't know if there are people in this room interested in orbits.
I imagine all of you should be interested in orbits.
So this I've said already.
Now, this is the historical background where ontology came from.
So the word ontology was first used in the 16th century
as the Latin translation of the Greek word metaphysics.
And I started life as a philosopher, for which I apologize.
But the word ontology was used by philosophers until around 1970
when it was introduced into AI work going on in Stanford,
primarily in the domain of robotics.
And the idea was, this was a philosophical idea, but they stole it,
the idea was that if you can capture all the common sense knowledge of a human being
in logical terms, then you could enter the corresponding logical axioms into a robot,
and then the robot would share common sense,
it would have the same common sense as a human being.
It didn't work. It was a great idea.
It started the study of ontologies, the development of what they called
ontology exchange languages or knowledge exchange languages.
And one of the leading figures, the person who really made the word ontology
a big deal in AI is a person called Tom Gruber.
He was the inventor of Siri.
And Siri is an ontology-based app.
So it runs on ontologies for restaurants and meals and films and so forth.
And so Gruber came in around 1990.
He was part of the movement to try and create ontology languages
so that people could capture the ontology of different domains,
not just human common sense, but also, for instance, the space domain
or the biology domain.
And so Prodigé, which is a very well-known piece of ontology editing software
was created, Semantic Web was created,
and AOL was created, the Web Ontology Language,
which is now the de facto standard language for expressing ontologies.
And Prodigé will output your ontology using AOL.
All right, now, but the whole thing failed.
They had these wonderful tools, languages, editing.
It worked in specific commercial areas such as Siri,
which actually came much later, of course.
But it didn't work in engineering.
Lots of people tried. It didn't work in commerce.
And the reason was that people really embraced the ontology idea,
and so they built an ontology.
But then the people in the next building embraced the ontology idea
and they built an ontology about the same thing.
And this was happening 16 different times across the country.
And so you've got 16 ontologies for X, which made the damn thing worse.
So now, instead of having a database access problem,
you have an ontology access problem,
because no one knew which ontology to use.
And so everyone wanted to invent their own ontology,
otherwise they wouldn't get paid.
That was an important factor.
And that was a big mistake.
That meant that the ontology became a dirty word.
It was forbidden in the Air Force to use the word ontology for several years.
They have relaxed that in it, because we did get it to work.
So these are some examples of ontologies that were built.
And each one was built on different principles
without comparing what was already there,
without looking at neighbouring domains to see whether there were ontologies
and how they might work with your ontology.
So this is the problem I'm addressing here.
So I believe that I, along with some of my collaborators,
were the first people to solve this problem.
So we had the first non-brittle, sustainable, expandable approach to ontology,
a methodology which grew out of the human genome project.
So still the most successful ontology in history is something called the gene ontology.
The purpose of the gene ontology was to link all of the new omics data,
so gene array data, protein data, with clinical data about diseases
and about physiology and so forth, across all organisms.
Because many experiments are carried out on non-human organisms,
and so you get data from non-human organisms about the relationship
between, for instance, muscle development, but it's muscle development in mice.
And you want to use the experiments on mice to draw conclusions about muscle development in genes,
based on the fact that the genes in the mouse for muscle development
are almost the same as the genes in humans for muscle development.
The gene ontology made that kind of work possible.
They linked together mouse people with human people.
The data from the mice would be able to be used by people working on humans.
Now, the gene ontology only deals with a rather narrow set of kinds of data,
but life sciences are tremendous.
So the gene ontology doesn't have terms for disease, for instance.
And so we created something called the open biomedical ontologies,
which is a collection of modules, ontology modules,
all of which were built to be interoperable with the existing ontologies in the OVO library,
specifically with the gene ontology.
And so now we have a disease ontology, an anatomy ontology, a protein ontology,
and so forth, you see some of these in a minute.
Now, the basic formal ontology, which is where I come into the picture,
was the reverse-engineered top-level ontology, the capstone or the architecture of all of these modules.
So I worked it out, more or less, what they had in common,
what were the general terms which they all used, or which they all should be using.
And I put those together and created what is called basic formal ontology.
All right, so this is the approach.
You don't build your ontology all by yourself in your little room.
You build your ontology by working with people who've already built ontologies,
and you fill in the gaps.
The gap today is ground systems, so we should manage by 4.30.
Now, the way BFO works and the way this methodology works
is that we always provide the space within the system where we know that there are gaps.
So we build the ontologies now, but we build them in such a way that we...
So we build the space ontologies leaving gaps for the ground system ontology
so that we don't have to re-engineer what we've already done
when we start moving into these new areas.
And BFO starts with very general types, objects, for instance, attributes and so on,
but then gradually we move downwards by defining more specific types.
So a sensor is an object, for instance, and an X-center is a kind of sensor,
so we now have a hierarchy.
This is a hierarchy of ontologies, and each ontology is a hierarchy of terms.
The whole collection of trees is a single coherent modular structure.
And it uses the same principles, which means that once you've learned how to do this in one area,
you can apply what you've learned to other areas.
You can also find mistakes that people have made in other areas
because you're working on the same principle.
All right, this is a small picture of the over foundry.
It's a carbon spoke structure, so BFO is at the top.
We have some mid-level ontologies, and then we have all of the various different biological
and medical ontologies that were created.
There are many more now, this is an old picture of the over foundry.
Now anyone who wants to ask a question should feel free, just interrupt, yes?
How do you know that a gap should exist?
Well, you don't always anticipate old gaps,
but for instance, let's suppose that you're interested in insects,
and you've got money to work on spiders.
So you'll put insect, and then you put spider, and then you do all your work.
But all the other insects will go, they'd be siblings of spider.
So that's one very easy way of doing it.
I guess we do have a pretty good strategy for creating the points
where new ontologies can be added, yes?
But that works, I mean there's spiders and things,
there's already a taxonomy of animals and animals, and already terminology is accepted.
How do you know when you're working with somebody and finding it
that they're talking about the same thing you're talking about?
Yes, so this is a multi-threaded issue that you're raising here.
Let's suppose that we have a particular area in ground systems.
So what is your favorite area in ground systems?
Just to give an example, what do you think is a problem case?
Telemetry.
Okay, so that's a good problem case because I don't really know what to say about it.
That's fine, never stopped me before.
So telemetry is going somehow to be part of measurement I take, the process of measurement.
Now we have processes, we have measurement results,
we have measurement result generating processes, we already know where to put them.
Now telemetry is going to be more than that because it's a group activity,
lots of people engage in telemetry.
Now that means that telemetry is going to have to be,
it's going to have to have terms under multiple different headings.
There isn't just going to be one term.
Am I making sense?
Now there is actually a place for telemetry which is going to be,
it's going to be I think a sibling of things like testing, maintenance, no?
So telemetry, probably if you've done the space things,
you already have telemetry because they're sending them down and then the grounds and students get it.
Okay, good.
So then let's go back, but all I'm trying to do now is to show you the kinds of headings that we search for.
And we claim that BFO, although it's very small and very general,
is so general that there will always be a birth in BFO for any kind of data that you might have.
And so this is a challenge.
If you think you have data which does not fit anywhere under BFO,
and what that means more carefully is if you think you have data about entities,
things in the world, processes, attributes, information that doesn't fit into BFO,
then we want to hear about it because then we have to fix BFO.
But so far we've done quite well, I think.
All right, so I'll continue.
So the OBO Foundry was a collaboration between many organizations engaged in bioinformatics, medical informatics,
and who recognized the need for a nontology system,
which would enable people working on molecules, chromosomes, and so on,
to interact with people working on death and sex and hunger and so forth.
And this was found to be very useful for drug companies and for medical research,
and so that particular effort was and still is being funded very well.
And this is just the demonstration that we have here as a sustainable approach
to solving the ontology problem.
All right, and that's just a picture of the Harbin spokes, just a different view.
Now, BFO itself is very small, it's strictly formal.
There's no domain-specific term in BFO.
All terms in BFO apply in principle to all domains.
It evolves but very slowly, so we've had basically four versions over some 15 years.
It has a very large user base and we have a very, in fact, I'll pass this around.
So this is the BFO book.
It's the only book ever published with the word ontology in the title twice.
And then we have more than 300 ontologies using BFO, many of them in biomedicine,
but now increasingly more in industry and in military intelligence kinds of areas.
And we'll talk about some of those very soon.
So this is the book, which is about to appear in Chinese.
And this is the history since BFO.
So in 2010, as a result of an IAPA challenge grant,
the Common Core ontologies were created by Kubrick.
And then in 2015, we started creating the Common Core space ontologies.
And the Common Core is like the Oboe Foundry.
It's a modular, sweet hub and spokes architecture of ontologies descending from BFO
and from a set of mid-level ontologies in the Common Core.
And then the most important fact is this.
So next month, the ISO standard version of BFO will be published.
It's already been approved.
And it will be ISO 21838-2 to be precise.
Dash 1 is the ISO standard for being a top-level ontology
and Dash 2 is the ISO standard to show that BFO meets Part 1 requirements.
This is a picture of the Common Core ontology ecosystem.
So the mid-level ontologies are here.
There are many domain ontologies.
And some of these are space ontologies.
I'm not sure if this has a point to it.
So this is the outer space ontology.
This is the spacecraft mission, space object ontology and so on.
There's a sensor ontology.
There are many more.
These are just ones that are perhaps of interest to people in this room.
And we're going to see a lot more of these as time goes by.
And this is the ISO standard.
That's Part 2, basic formal ontology.
And as I say, it will be published next month.
It should be sooner or later in the public domain,
which means you don't have to pay for it.
Because BFO existed before it was standardized,
so ISO can't charge people to...
This is a picture of BFO which you can't read, unfortunately,
but it's designed to show you that it's small.
So we have here different kinds of things.
Here we have different kinds of attributes.
Here we have different kinds of processes.
And then down here we have different kinds of spatial and temporal regions.
So that's basically it.
We have objects, attributes, processes.
And actually we also have information entities.
Where are they?
I should know where they are.
Here.
There.
Generically dependent continuance.
It's a really ugly term, but it's...
If it's ugly, people won't steal it.
All right, we'll come back to information entities later on.
So the basic dichotomy is between things which continue to exist,
such as planets and people,
and things which occur, such as orbitings around planets
and launchings and so forth.
So that's the basic dichotomy.
Everything in the universe we claim
falls under one or other of these two headings.
And if you really insist, and you think you have a counter example,
I will be willing to entertain it.
So the moon is a continuance.
A moon landing isn't a current.
There are two kinds of continuance.
There are independent continuance,
which are things which just exist all by themselves.
And then there are specifically dependent continuance,
which are continuance which require other continuance to exist.
They're dependent upon them.
Like height, weight, color, and so forth,
are specifically dependent continuance.
Qualities are specifically dependent on them.
And we divide everything into types and instances.
The ontology is only interested in the types,
but you and I are all instances.
And so we are interested in instances.
We carry out experiments on instances.
We perform observations of instances.
But when we publish or when we collect data,
then we're interested in types.
So the ontology links up with the instances through the types.
So tell star four or one is a type.
So is it a current?
So tell star is a continuance,
and the launch of tell star is a current?
No, I mean height.
Height is a continuance.
You have your height from the beginning
to the end of your existence.
It changes its value as you grow bigger,
but it's still your height.
Your height attribute.
Exactly. It's dependent on you.
Exactly.
All right.
So the diameter of the moon is an example.
We call those things attributes.
And then we have processes in temporal regions,
which are the two main kinds of currents.
And we also have spatial regions,
which are a kind of continuum,
because space goes on where time flows.
And again, we have instances and types of everything.
So qualities are things like height, weight, and so on.
We also have another kind of specifically dependent
continuum, which are called realisables.
And an example would be a disposition.
My disposition to go bald, for instance, is a realizable.
It's a disposition.
And another kind of realizable is a role,
such as being a lawyer, or being a professor,
or being an astronaut.
So dispositions are realisables,
which have their realisables,
realizations because of the way they are physically.
Roles are realisables which have their realizations
because of the way things are socially,
roughly speaking.
So these are internally grounded,
and these are externally grounded.
They're grounded in paperwork.
And so the role of being a lawyer is realized
in an act of lawyering, which is a process.
So all realisables have realizations,
which are processes.
This is not rocket science.
I'm going to get to rocket science, I promise.
But this is not rocket science.
All right, but now one special kind of disposition
is a function.
And functions are realized in functionings.
What is special about functions is that
you build the thing which has the disposition
because you want to realize the function.
The function is the raison d'être
of the bearer of the disposition.
All right?
That applies to functions, biological functions.
The reason why I have a heart is because
my ancestors needed a way of pumping energy through the body,
transporting energy through the body.
So they created a pump.
That's a simplification.
That's why it's the function of my heart to pump.
It's not the function of my heart to thump.
But it is the function of my heart that it thumps.
That's a disposition.
Sorry, it is a disposition of my heart that it thumps.
It makes a noise in other words.
All right, and now between functions and dispositions
we have capabilities.
Capabilities are things which we're interested in,
which we have an interest in being realized.
So they're not just generic dispositions,
like going bald.
They are dispositions that we want to have
in the thing that we're creating.
So my car has the capability to drive in the rain.
But it's function to drive in the rain.
And a spaceship, of course, has thousands of capabilities,
but it has one or most very few functions.
All right, so these are some examples of functions,
capabilities, and these are capabilities of an artifact,
a heater, and these are capabilities of a biological organ,
namely the heart.
You should all have the slides,
so I don't need to pause.
Yeah?
So, is it really part of BFO?
No, capability is not part of BFO
because it depends upon something which is domain-specific,
namely organisms with interests.
And that's why it's in yellow.
But it fits neatly between functions and dispositions.
So this is hot off the press.
All right, now, so we have qualities and we have realisables,
and these are specifically dependent.
My tendency to go bald is mine.
It's specifically dependent upon me.
But now we have generically dependent continuance,
which are like specifically dependent continuance.
They're like qualities, but they can migrate
from one bearer to another.
And a good example is a PDF file.
A PDF file can be copied exactly.
The very same entity can exist
on indefinitely many hard drives.
And the same applies to chromosome structures.
They can be copied exactly.
And so, he's getting really excited.
So information content entities
are one important kind of generically dependent continuum.
And that fits into BFO.
Generically dependent continuum is the birth in BFO,
but these kinds of things.
And it goes there.
And now we come to space,
and we start to do rocket science.
Always wanted to do rocket science.
You will very soon realize I do not know anything about rocket science.
We've seen this before.
These are the space ontologies,
or to be more precise,
the common core ontology space domain ontologies, SDO.
And there are five space domain ontologies,
which are listed here.
The space domain ontologies work with various other ontologies,
for instance, a weather ontology and so forth,
which are also part of this same ecosystem.
Now, there are other examples of such ontology suites.
So the common core is quite an important one,
and it's used by several important institutions.
We are working on something similar for the intelligence community.
Well, there are some other examples here, you can see.
The industrial ontologies boundary is one of the examples
that I'm working on quite specifically at the moment.
And all of these have BFO as their hub,
and they have the same hub and spokes structure.
This is the industrial ontologies boundary.
These are some examples of the ontologies
which have been built for the industrial ontologies boundary.
So this is a maintenance ontology.
This is an ontology about interoperability
of domain models in engineering.
This is about simulations in engineering.
And there are a number of working groups.
There are something like 20 publications now since 2019
coming out of this IOF activity,
which overlaps with the space activity.
These are the ontologies that we either already have
or are building in the context of this
industrial ontologies boundary work.
Now, I've said a little bit about the common core,
so I don't think I need to repeat this.
So the original IARCA project was a project
to produce very rapid analysis of intelligence data
where you did not know the day before
you had to provide answers to queries
what the data would be about.
And so the common core ontologies
were built to be about maximally everything.
But now, as we move down,
we have to be more precise in building ontologies
for things which are of special interest,
particularly in the domain space.
And so we are, in a way,
trying to capture everything in a very precise sense.
So it's something like a digital twin that we're trying to do.
And you'll see what I mean when we start talking about
specific things in the space ontology area.
And now the best practice I already described,
so we start at the top with BFO
and then we work downwards by defining various things.
And because we have the same pattern everywhere,
it's easy to import new ontology content
or to create new ontology content.
There are several groups, some of them quite important,
who are not just using the common core,
but actually helping to populate more branches of the common core.
So we have the top level, we have various middle level,
and then we have the domain level ontologies content,
some of which are in the public domain,
some of which are provided by specific communities
for their own purposes.
And we try and make sure that people know
about those other ontologies,
but we're not allowed to make them available.
And this is how the space ontologies work
within the common core hierarchy.
So there's BFO, and then we have the mid-level ones,
time, space, currency, information, relations,
units of measure, and so on.
And then we have these domain level ontologies,
military operations, military intelligence.
These are related because we have a space mission ontology here,
which uses some of the ontology content here.
And then we have a cyber ontology,
and the space domain is going to be interested in cyber.
We have an atmospheric feature ontology,
which is going to be related to the atmospheric weather ontology.
And then the ontologies that we have,
the five which I mentioned already are here.
So this is the area within the domain ontology space
of the common core ecosystem.
And this is the same thing, but bigger.
Are there any questions?
So we're in a telemetry bit.
Telemetry, I don't think it's on this slide,
but it's certainly going to use units of measure.
So I guess if it has to go anywhere,
it will be the activity of generating measurement results.
And that would be an event which takes place in space,
and then there'll be another event of sending the data down to Earth,
and then there'll be another event on the ground
where the telemetry data is analyzed.
Is that right?
It doesn't seem to me.
So a space event would be the place I would put it
if I was restricted to here,
but I think that you've pointed to another domain
which probably needs an ontology of its own.
The domain would be something like a space management activity ontology,
or space management ontology, space activity management ontology.
I know, but the data involves collection, transmission,
and analysis, and all of that has to be...
Maybe management is not the right word. David?
I just want to speak to this.
So I think the first thing we need to do is disambiguate.
I mean, it's been shared by discussion.
So we would disambiguate the telemetry platform, if you will,
from the telemetry data, which is what you're interested in,
from the monitoring processes, right,
the telemetry processes, the various individual issues.
The first thing we do is we pull those apart
and refer to experts to try and make sure we're referring to the right things.
And then we figure out where each of those goes into the broader ontology.
Into the broader ontology suite.
And actually, now that you mention it,
if you're really interested in the data, then it's going to go here,
here, and then down here.
So that's the data.
But you're not interested in data of a very general sort.
You're interested in a quite specific kind of data,
namely data relating to space events, primarily, I would imagine.
Well, you'd have telemetry would be...
You'd have one ontology, I think, to define what the telemetry is.
That is, here you have a specific point that says,
here's the temperature of your solar array,
but then the data itself would be time-based.
So you'll have a telemetry for every single second.
Which is why I think it's going to be associated with space events.
Let's move back here.
It is, just like you were explaining about height before,
the telemetry changes the processes that you were talking about,
the creation of telemetry, downloading, and processing.
Those are all processes associated with a particular object.
Yeah, exactly, exactly.
So the data is separate from the process, right?
Absolutely, yes.
So this is why we have the information entity ontology
and a different ontology from the object, the space object ontology,
the spacecraft ontology.
So I imagine telemetry is actually a spacecraft-related activity,
more than it's debris-related, for instance.
But we can come back to this when we work out the ground system ontology,
because I think that some of the issues with the telemetry
have to do with what goes on on the ground, also.
Yes?
How do you decide how granular to make the ontologies?
User need, on the one hand,
and available funding, on the other hand.
So user need is probably important.
So we're not doing this for fun.
We're doing it because there is a need,
and that's what determines how deep we go.
We go quite deep, although we don't go as deep as we could go,
as you will see.
And we don't go deep for everything,
because there are many different satellites,
many different satellite types.
And we did some satellites in great detail.
All right, now, so these are the five space domain ontologies.
You have 850 or so terms in total,
but then you have to add hundreds and hundreds of other terms,
which are sometimes used in the definitions of these terms,
taken from the other common core ontology.
So first, in order for these ontologies to do their work
in helping computational analysis,
there are not just labels, they also have definitions.
And these definitions are in two forms.
First of all, we have a textual definition,
which is to ensure that people know what the terms mean,
and to ensure that data are reliably tagged
using the ontology terms.
And that's usually primarily human,
or at least human-guided, the activity of tagging.
And I'll come back and show you how that works later on.
But then also, we have a logical definition.
And OWL is one way of providing logical definitions for terms.
And it's a logical definition which allows the computer
to reason with the ontology.
All right, so the primary goal of the space domain ontology work
is to support space situational awareness.
These are some of the things which it supports.
Now, one day we'll also support telemetry,
but it doesn't yet, I think.
But it does support all of these things.
So these are all areas where the space domain ontologies
are being applied, yes?
I would argue that like, telemetry is not a space only thing.
Right, telemetry is a kind of community
about some sense, a couple of sensory processes.
But this illustrates precisely the point.
We would not build a space telemetry ontology.
We would build a telemetry ontology,
and then we would go into the weeds for space telemetry.
And the result would then be very well-tailored
to fit with the other space domain ontology.
And then we would have birds for all the other kinds of telemetry.
Because actually there's a good point that you would have,
I mean, any monitoring system deals with telemetry.
Yeah, and we have a sensor ontology, which is here.
And I imagine that there's going to be a close partnership
between having sensors and having telemetry.
All right, so now let's start.
The first of our space domain ontologies.
And we published a paper in 2016.
We'll be shortly publishing another much longer paper
covering the domain that I'm going to be talking about today.
But you can already read this paper.
And so it's space object, what is a space object?
Well, roughly it's an object that is located in outer space.
We say roughly, because it's actually not...
Supposing a piece of debris lands on Earth,
is it still a space object?
So we have to be somewhat more precise.
Is an astronaut inside a spacecraft space object?
No, why not?
It's located in outer space.
So the way we make it more precise
is that it's not inside another object, first of all,
or attached to another object.
And it's not near or low on an astronomical body.
So rocks on the Moon are not space objects.
And then we have that apparently this is regarded
as being the appropriate threshold for being in outer space.
But actually...
I mean, a rock would be a space object.
It would sit on the Moon because it could come loose.
Ah, but it's a space object, only if it does come loose, right?
No, it would be a space object anyway, because it's on the Moon.
You have to talk to the author of this definition.
So this would be... Can you make a note of this?
The question of Moon rocks?
So is the Moon a space object?
Yes.
So Alex says that if it's...
Well, actually, no, perhaps he's safe.
No, he's not safe because it's located on the surface
of an astronomical body.
If it's located on the surface of an astronomical body
according to Alex, it's not a space object.
Yeah, I would argue that what we're really doing here
is trying to figure out what's a useful paradigm.
If we call human space objects because they're in space,
then everything becomes in space.
And we lose the whole value of the definition.
I think what they're trying to do is say,
here's a value, a definition, it's a value.
It's a particular value.
But anyway, it's not always easy, particularly.
So we'll see there are more problems, even with the term.
Like a Moon rock, actually, would power be useful
as a definition of a space object.
Well, but people come to museums
and they say, here is a space object and they show a rock.
Again, I think it depends on what you're trying
to use the ontology for.
It's a general question I have, which I'm slowly teasing out.
There's so many different ways to view the universe, right?
Especially for a philosopher.
How do we decide how to slice and dissect these ontologies?
And I think the answer is, in ways that are useful.
So me, as an engineer, I'm looking,
so what's going to be useful for me?
And we can slice up and say, it's a dirt object.
So this object or that object.
I don't really care what it's made of.
I care whether it's flying at my special.
Somebody else might care desperately what it's made of.
So that's a tricky thing.
So we are slicing the world in part on the basis of what is useful.
But we try only to slice where there are distinctions
on the side of the world that we're slicing.
There's so many ways to slice.
Since we're giving definitions, then we are open about where we're slicing.
I think the first one covers the rock.
When the rock's on the moon, it's part of it.
So you're fine.
But if it's away from it, then that's a separate distinction.
And according to the sources that we were encouraged to use,
the rule is 100 kilometers above the surface.
At least for the Earth orbiting objects.
All right.
So now we have an axiom that every space object is an object in BFO
and it participates in some space flight.
So a satellite on the launch pad is not a space object.
Once a satellite collides with the Earth, it's not a space object anymore.
And a moon walker is not a space object.
This is what we see.
And our astronomical body is a natural resident space object
that is a single cohesive structure bound together by gravity
and or electromagnetism.
And this is sometimes called a celestial body.
And I'm not going to be able to read all of the...
I'm certainly not going to read that.
This is the full elucidation of space objects in the ontology.
So how...
Do they have some associated way they plan to use that particular set of definitions?
Yes, so...
There's a big hulk of thing that says space objects on the ground that fell.
Yeah. And we don't say that they're wrong.
We just say that we're developing this ontology.
We have to make certain choices.
And we make those choices honestly with definitions.
We make them clear.
And then we create this structure.
Now, the structure covers everything you want.
We have a place for rocks on the moon.
We have a place for spacecraft on the launch pad.
So that we don't call them space objects.
All right.
These are terms that people use.
A space debris object, that's pretty obvious.
Although it's not actually quite so obvious once you dig into the weeds.
So debris includes both rocks.
And also defunct spacecraft.
Or bits of defunct spacecraft.
So we had to define cut-offs.
We tried not to be arbitrary.
We tried to find out what were the acknowledged cut-offs in the standard literature.
This is more about debris.
Orbital debris is any man-made object in orbit about the Earth.
And now this is what the ontology looks like once you get going along these lines.
So we have object which comes from BFO.
Then we have space object, which is a child of object.
And then we have primary body, resident space object, space debris object.
And then we have collections of objects, a fraction spacecraft, and so forth.
And this is just the same thing, but you can read this now more easily.
But I'm not going to give you time to read it.
All right.
Now we move to the space event ontology.
And so orbit is used, it's an ambiguous term.
It's used in different ways, quite naturally.
And this is what we're trying to resolve.
We're trying to find one definition of orbit, and we have to choose.
We have to put our money down on one particular choice.
So these are the four standard ways in which the word orbit is used.
And we choose to define it in this way.
It's a process in BFO terms of orbiting around a primary body, and we defined primary body earlier.
And then we can define other terms, orbital path, orbital revolution, and orbital regime,
in terms of the original term orbit.
And that space event ontology.
And these are some more definitions connected with orbits.
So we need to distinguish between, for instance, a spinning motion and an orbiting motion.
We need both of those.
So a revolving motion and a spinning motion on two different kinds of motion.
Orbital path, orbital revolution, we have definitions for those.
And then we define outer space.
We define region of outer space.
So outer space is the maximal region of outer space.
A region of outer space is a part of outer space that is also a region.
And then an orbital regime is a region of outer space defined on the basis of altitude.
So that means low earth orbit and so forth.
And now we can classify orbits in different ways.
So low earth orbit is classified according to altitude.
Another classification would be according to the primary body around which the orbit orbits.
And we can also classify orbits according to other things like orbital period and so forth.
And the ontology allows us to classify along all of these different dimensions.
But it chooses one standard taxonomical hierarchy and then defines the others in terms of that standard.
Just because our principles don't allow us to have multiple hierarchies for the same entities within the ontology.
And this is what it looks like.
This is what you get when you use protege.
It will output a page like this, which includes axioms,
holding of the term, definitions of the term, comments and so forth.
All right.
Now, for probably obvious reasons, focusing primarily on geocentric orbit.
So we have lots of terms for geocentric orbits classified under those different headings.
And we have more than 70 kinds of orbit represented in the ontology.
And it looks like that.
So we have geocentric orbit.
Everything from there onwards are geocentric orbits.
And we have Kepler orbits, which are somewhat special.
So this is just part of what you just saw, but bigger.
And if you have questions, then feel free.
About the specific orbit with Kepler and elements and the ethic.
Yes?
So that would be an instance of...
No, no.
That's a very good question.
So everything in the ontology is types.
If you have an instance, that means you have a specific time, a specific space region,
and probably a specific object, spacecraft, piece of debris or primary body in mind.
And then it would be an instance of one or other of these classes.
Or it could be an instance of one or more of these classes, in the kind of case you just mentioned.
So just because you are very, very precisely defined doesn't mean you're an instance,
because there could still be many instances which share all the characteristics in your definition.
So an instance can be an instance of multiple types?
Yes, yes.
So we try to avoid that, but the way orbits work, it's very hard to avoid it, cleanly.
But you're right, that we really should work very hard to have a single hierarchy,
so that an instance, if it's an instance of two types in the hierarchy,
then one of those is a subtype of the other.
And then you'll say...
And then how do you do with defining...
Say orbits, you can define it in different ways, whether it's the Cartesian...
Oh, we deal with that.
Okay.
We'll come back to that.
Yes?
One question.
I think that's a very interesting point.
So you're looking for something that's completely tree-structured in the sense of one-to-one relationships.
Yeah.
The reasons for that are multiple, and the simplest one is that if you allow multiple inheritance hierarchies,
people make one mistake.
The second reason is that our strategy for defining terms rests upon every term having at most one parent.
And if you have terms of two parents, some people define it in one way,
other people define it in another way,
and then you'll end up with the forking that created the silos that we were trying to avoid at the beginning.
All right.
So this is all of the eccentricity-close audit types that we have in our ontology.
And now we'll get to flights.
So flights of processes in VFO, they're motions, which are a special kind of process.
And subtypes of flights are things like atmospheric entry, atmospheric flight,
space flight is a subtype of flight, and then intergalactic space flight is a subtype of space flight, and so on.
And a flight, this is, again, just a definitional choice, is always complete.
And so this is just the distinction between spinning and orbiting again.
And, of course, orbits may involve spinning, but an orbit and a spinning are two different motions.
And then the space event ontology definition of flight looks like this,
and I don't think I'm going to go through it, but you get the idea.
And these are subtypes of motion within the ontology, and most of them are orbits.
So revolving motion and then orbits.
And these are, we've been through this, these are just the subtypes of orbit.
And our mission objective, this is just a very small fraction of the different kinds of mission objective
that we have space object, recovery mission objective, space object, rendezvous mission objective, and so forth.
Spacecraft docking mission objective, space-based research mission objective, and so on.
You get the idea.
And now maneuvers, these are kinds of maneuvers, error-breaking error, capture, de-orbit maneuver.
And this is just a longer list.
And extra-vehicular activity, so that's also in the space event ontology.
Yes?
So with all these things, I'm harking back to days gone by, many, many relationships versus one-to-many relationships,
relational data-based structures.
What appears to be as a method to deal with one-to-many relationships.
So you identify derivative features.
I'll say yes, just to hear what you say next.
Well, I guess I'm waiting here with those two.
I'm following.
As I see all of these definitions, I'm starting with things that we want to do with it.
Thinking about fuzzy logic around computer algorithms.
We will give you some examples of queries.
So there is something called the Sparkle query language, which is designed to work with ontology tagged data.
I'll show you how the framework we have for tagging the data.
And then David will show you some examples of queries.
I'll give you a couple, he'll give you more, and he can go through some queries with you.
That is the main way of describing how the ontology is used.
Now, I believe that there are many more ways in which the ontologies are used,
but that is the easiest way to illustrate the value I believe.
Am I going the wrong way?
Yeah, wrong way.
Okay.
Yeah, so one thing of those things is you walk in a space activity.
So let's say you send humans to Mars, and all of a sudden you have a new category of Martian space activity.
Do we now need to expand the ontology to include that, or is there, you know, just not included?
Actually, I would think that we would.
Yes, I would think that we would.
So would it not make more sense to just have like a generic, you know, astronomical body, expert vehicular space activity?
Yes.
So this is a very small branch of the ontology.
I'm sure that we can do better.
But this is another example of the utility question.
So we're not going to worry too much about this branch until we have people who are doing moonwalk-like things with other kinds of objects.
But you're right.
We probably, this will need to be done a little bit more carefully.
And how does that all work with things like just going hiking, you know, where you have to take everything with you?
You mean on the moon?
No.
You mean on Earth?
Yeah, we're not worrying too much about those kinds of issues.
One day, I guess, we will have to worry.
I mean, they have very similar issues that you might be talking about.
Yes, yes.
So this is the limit problem of ontology.
So should we include physics in the space object ontology?
Because everything that we're talking about involves physics.
No, we are hoping that someone else would take care of physics and then we'll negotiate in the areas of overlap.
Now, there are already tourism ontologies.
We deal with things like hiking.
They're not very good, but they exist.
Now, one day, we will probably need to have better tourism ontologies.
And then we will, probably by then, we'll also have Mars tourism.
And then we'll need to work out how to deal with things in the area of overlap.
All right.
So artifacts.
There are many artifacts dealt with in the spacecraft ontology, including spacecraft parts.
And we deal with a lot of different kinds of spacecraft parts.
So there are heating and cooling parts.
There are spacecraft systems, which are parts of spacecraft.
This is an ontology of systems.
And this is an ontology or a branch in slightly bigger type of spacecraft subsystems
so that you can see the kind of detail that we have for subsystems.
Propulsion systems.
That's a longer list of propulsion systems.
Transducers.
So we have all of these transducers.
And this was our task to create an ontology which had this amount of detail for the parts of spacecraft.
And we have a definition of sensor, which is a kind of transducer.
And this will illustrate how the definitions work.
So in the ontology, every term has one parent.
And the definition tells you what's special about those instances of that parent,
which makes them instances of the child.
In this case, the child is sensor.
The parent is transducer.
And the rest of the definition tells you what it is about.
What's special about those transducers, which are sensors.
And that method for defining terms was invented by Aristotle.
So this is the one piece of philosophy you're getting today.
So Aristotle defined a man as an animal which is rational.
And so that's because a man is a kind of animal.
And the difference between men and humans, let's say.
There's in humans and other animals, according to Aristotle, is that humans are rational.
All right.
Now, then we have an ontology of sensors.
And these are all the sensors in the Hubble telescope.
These are the kinds of sensors that we distinguish.
Then we have sensor systems.
And now we're going to look at the International Space Station.
Anyway, then you can look at it.
We have spacecraft module, which is different from a spacecraft part,
because the spacecraft module can act as a spacecraft in its own right.
And these are the spacecraft modules in the International Space Station.
Along with other things.
I don't think the radiator is a spacecraft module, although you never know.
These are spacecraft subsystems.
And now I talked earlier about functions.
So functions are special kinds of dispositions.
They are the reason why the entity with the disposition was created.
So these are different kinds of artifact functions,
which are relevant to the space domain ontologies.
So the heating artifact function, the spacecraft docking artifact function,
signal processing artifact function, and so on.
Any of these functions, if they were to fail, how does that disrupt the ontology?
If they were to fail.
Yes.
So that's one of the very interesting questions.
So part of the reason for going into this great detail about functions
and capabilities and parts is maintenance.
And to some degree, also design of spacecraft.
And so we have to think about what it is that will happen if one or other
functional artifacts fail.
And that would be another part of the event ontology.
Now, whether we're going to create a spacecraft failure event ontology
is at the moment an open question.
But in the biology case, we had an analogous question.
We have the human anatomy ontology, which is very, very large and very, very granular.
We do not have the human patho anatomy, which would be an explosively larger collection
because there are so many ways in which human anatomy can go wrong.
And similarly with event failure events, I believe.
So we're going to have to work out how to deal with the classification failure
events without combinatorial explosion.
All right.
Now we have spatial and temporal regions, such as ground tracks, for instance.
And for this, we need the definition of a reference system,
which is a kind of information entity.
And the reference system describes the standards for organizing
and understanding data of a specific type.
And there are spatial and temporal reference systems.
And these are the kinds of spatial and temporal reference system
that we included in the ontology.
And we define them here, what they are, and then we give examples.
These are just the most relevant ones.
And then we have different kinds of spatial regions in the ontology.
So if we have all of those many different kinds of orbits,
then we're almost certainly going to have many different kinds of orbital regimes,
tracks, paths, points, apsees, and so forth.
I guess you know more than I do about these.
Maybe I have a bigger version.
Yes.
So these are the...
Do you say apsees?
Is that the plural of apse?
It's the first time in my life I ever pronounced that word, so...
So these are subtypes of spatial region.
Subtypes of one-dimensional spatial region, indeed.
And these are subtypes of two-dimensional region in the ontology.
And then zero-dimensional spatial region.
And here are three-dimensional spatial regions.
Circumstellar habitable zone, for instance.
And these are temporal regions that we have.
So multi-week temporal interval, round trip delay time,
synodic rotation period, and so on.
And this is just the same list, but shorter and bigger.
And altitudes are going to be part of the spatial region family.
Temporal regions are...
I'll list it here in bigger letters.
And then we have agents and organizations.
So the crew, government agency, commercial organization.
These terms, properly speaking, should not be in the space domain ontology
because they're a much more general term.
But they're listed here because we need it to have a spacecraft crew.
All right, now let's see some of the ways in which these things are used.
So a communication satellite is a kind of satellite, which is a kind of spacecraft.
And this spacecraft had to be designed.
And the design is what we call a spacecraft artifact model.
It has as part the function specification for that spacecraft.
And that function specification prescribes a certain function,
which has a certain spacecraft part as its bearer.
And this is an artifact resident space object.
But now we have a problem because it isn't.
Because there was a time when it was on the ground.
Now this is the role issue again.
So a space object is not a proper term for a continuum.
Any more than lawyer is a proper term for a continuum.
There aren't people on the one hand and lawyers on the other hand.
There are just people.
It's just that some of those people are lawyers for certain times in their lives.
Now similarly, there aren't space objects.
And I don't know.
These artifacts that look like rockets, some of them.
The space object is a space object only when it's in space.
And that is an issue that we need to pay attention to.
Because we don't want to say things about space objects,
which do not hold because the space object was once on the ground.
And may one day be again on the ground.
So is that a current issue that is still being resolved?
No, we've resolved it.
It's something we had to pay careful attention to.
And then the space object has a space object ID and a satellite catalog number.
It participates in the space flight, which is a kind of orbit.
And it has an orbital path, which has a certain inclination
and a certain eccentricity.
So we can capture all the data about the spacecraft using these kinds of terms.
But then we have the relations between them.
So we can do reasoning.
We can work out what the artifact model was that was used in the design of this spacecraft, for instance.
And what the function specification was.
And what it is that breaks when this particular spacecraft part no longer function.
And then we can work out how these things relate to various different kinds of maneuvers
and mission plans and objectives and so forth.
This is the GOES-16 mission expressed using the ontology.
And I can't read it.
I'm very close to the screen.
But this you can read.
And now this is not representations of types anymore.
This is representations of instances.
So these are specific events which take place or will take place.
And they instantiate types in the ontology.
And they stand in the same relations or their instance analogs of the relations in the ontology.
Relations like has part, has agent, participates in.
So one of the, I said that these were the goals, supporting space situational awareness
in doing things like supporting dynamically updated RDF triple store databases.
So these are two line element data.
And we can imagine that the element, the two line element data are down here.
And we have a database.
And each of the column heads here is going to be tagged with an ontology term.
Once you've tagged them with an ontology term, they then become linked together by the relations
to all the other ontology terms which are of relevance.
And this tagging, there is software which supports this kind of tagging
so that it's not just a manual exercise.
There is some automation involved.
And you still can't read it.
So I don't know what to say about that.
Or I guess this is connecting data about the spacecraft with data about what the spacecraft
was doing in relation to mapping things on the ground.
And again, you can't read it.
But we can use the ontology to link together not just two line element data about the spacecraft
but also external data about the things that it's using its sensors to map and so forth.
This you might be able to read.
See, basically it's sort of dealt with telemetry but I'm not mentioning it.
See, some things are easier than they seem.
All right, modeling instances.
So this again is an instance representation of a single satellite, the Telstar 401.
These are all the parts, or anyway, many of the parts.
Along with some qualities, some models, some functions.
And so these are artifact functions.
The C-band transponder has the function of C-band wireless communication relay and so forth.
And then this is the Telstar 401 orbit and mission.
And, well, you can...
You see, this is not ontology anymore.
This is a specific representation of instance data but using the ontology.
Identifiers to Telstar 401.
So there are many entities like Lockheed Martin and the United States of America.
These are instances also.
They're all instances of organization in the ontology.
And one of them owns the satellite.
One of them is the country of origin.
One is where it was designed and one is who operated.
The question about the relationships.
Is that defined?
Is illustrated here?
They're all defined in the ontology.
And many of them are quite generic so they're not part of the space domain ontology.
So if you look at the hub and spokes of the common core,
near the top, below BFO is relations ontology.
Now there are some specific space relations which come lower down
but most of them are already very general up there.
For instance, designed by...
And this is weather now.
So we have an atmospheric weather and...
Is there a space weather brunch in the space domain ontologies?
There will be if there isn't one.
We have dates, time stamps generally according to different reference systems.
Operational status, end of life mission.
And now once we've gone through the end of life operational status
then the operational status becomes defunct.
All right, now let's start preparing for the next part.
So there are four main types of entity in BFO.
This is a simplification but it will be useful for our exercise in what's to come.
So we have material entities here that we're only interested in things like satellites
and people and launch pads and planets and devories and so forth.
All of those are material entities.
And then we have attributes which are things like the quality,
the height, the weight, the amount of fuel, the thrust of power and so forth.
And then we have information entities such as the satellite model,
the design that was used, the mission specification and so forth.
And then we have processes, the orbit, the mission which was actually executed,
the launch and you understand I think all of these four headings
but you now need to keep these four headings in mind
because we're going to use these four headings as a way of grappling
with what a ground system ontology is going to need
or what a set of ground system ontology modules is going to need.
And so just to remind you these are the different kinds of attributes,
functions, capabilities, distributions, they are all one branch
and then roles and policies.
And now before I go on to the next slide,
are there any questions about anything which has gone before?
Because now we're going to change tack quite radically.
Yeah.
How do you know what is the set of terms and qualities in relationships that you should be using?
We're going to find out.
That's the next exercise.
And how do you know the answer is you bully experts.
How do we find that?
Did you have a question?
I'm wondering what ontology is like whether rebranding is actually going to turn over time changes in the future?
Yes.
Good.
So how that's incorporated?
Yes.
So first of all, the ontology versioning is a very important set of problems
because the world changes, our knowledge changes,
the software used to deal with ontologies changes.
And so ontologies do undergo changes.
The BFO underwent four changes.
The most recent one is the ISO standardization.
It did lead to some small changes in the content of the ontology.
If you have a big ontology like Space and Main ontologies,
and some organization uses it to tag data that they have in 2019,
and then 10 years later, someone wants to know how they can exploit the data that was created in 2019,
which is enhanced with the ontology.
They want to know what ontology you use and what version.
So we have versioning principles.
They're designed to solve this problem.
You always know what version of an ontology was being used,
because each term in the ontology has a URI associated with it,
and the URI contains a version identified.
Now, how do ontologies change?
Well, one of the ways ontologies change is that certain words require different means.
And the only way in which you can catch those changes is by having lots of users
who report when they're beginning to have problems with this given term.
And the way in which the OVO foundry developed was that we had many users,
and they would report gaps or mistakes in the ontology.
So the ontologies were improved through the process of being used,
which meant that they became better, which meant more people used them,
which meant that they were improved more.
So it was a very successful virtuous circle.
And it doesn't mean that we reach perfection on the contrary.
This virtuous circle goes on and on, because science advances.
And you can imagine that there were lots of advances,
because this was the era when the Human Genome Project results were being incorporated into all biology.
But the ontologies created at the very beginning, they grew tremendously,
but the architecture was very stable.
Any more questions?
So these are kind of fundamental, but some of them change,
like the function of something.
I mean, there might be one function, but it might have another function.
Yeah, so there are three levels that we need to distinguish here.
First of all, there's the BFO level. BFO has a definition of function,
which we believe it captures the core of what we mean by function,
in engineering and in biology, which people mostly like, but we have critics, I have to confess.
Then there is the question, what is the function of this artifact?
And if we follow the definition given in BFO, we can usually work that out.
And it may be that there is more than one function.
So the satellite was built in order to perform forest fire tracking or something,
but then once it was built, it was realized that it could also be used to track something else.
So it acquired another function.
And subsequent satellites of that type were used primarily for that other function.
That's the second case. The third case is when the function itself changes.
So I don't know very much about forest fires,
but I can imagine that that might be because of desertification or something,
a different kind of forest fire tracking that you need.
And so the very function forest fire tracking changes its nature.
Now we can deal with all three of those kinds of things.
And you just have to believe me. Anymore?
All right, so now let me give you some background to the next slide.
The Navy is undergoing something called the Systems Engineering Transformation.
And the idea behind this transformation is that all of the missions of the Navy,
including missions having to do with warfighting,
but also missions having to do with things like logistics and procurement
and acquisitions and maintenance and so forth,
they will all be captured using model-based systems engineering.
And in other words, they'll be captured in such a way that you can use software
in order to create a mission, for instance.
And now the Navy is a big enterprise and it suffers tremendously
from the ragged harmony of terminology use that I referred to at the beginning.
So the Navy is really bad.
And so Kubrick, including me, are working on a plan to create an ontology
across the Navy which will enable this kind of terminological harmony
which is needed if you're going to do a Systems Engineering Transformation
which will work across the Navy because a lot of what the Navy does is cross-disciplinary.
It's going to be applied to different parts of the Navy at the same time.
And so along with the Navy's SET people, we created this plan
of what ontologies would be needed by the Navy in the long run.
So these are modules.
This is a huge task.
We're not going to create all these modules at the same time
and some of the modules may prove not to be useful and so they won't ever be built.
We are starting with a certain pilot program building just one of these modules
but this is the plan that we came up with.
Let me just explain the architecture of the plan.
So we have the same four categories.
They're not quite in the same order but you will forgive me.
Things, attributes, processes and information entities.
So the Navy has lots of reports, has lots of data, lots of metadata
including sensor data, data about the physical properties of all its equipment and so forth.
And so that was recognized the need for several pockets of data or information ontology.
And then the Navy is involved in lots of processes.
Testing, servicing, logistics, operations, planning.
These are all processes and so they go under the process heading.
And then there are data exchange processes.
There are strange processes like classification guidance
which is guiding the organizations within the Navy about how to classify things
which yield certain kinds of artifacts which look like dictionaries.
And manufacturing is going to be a part because the Navy does do some manufacturing itself.
And then the main process, the ships are moving around the oceans or under the oceans.
Under the surface of the oceans I guess.
And so you need an ontology of those kinds of things.
It's 233.
Good.
And then attributes, well, we need an ontology to deal with the different kinds of roles
that people have in the Navy.
So that might sound trivial but actually if you think about it, it's not just going to be ranks.
It's going to be all the various different kinds of testing people,
maintenance people, logistics people, classification people.
So they all have different roles.
And finding the person with the role that you need is not a trivial exercise.
And so that's the reason for the ontology here.
And then we have capabilities.
So units in the Navy and equipment in the Navy have different capabilities.
Teams which have been trained have different capabilities.
Some training institutions within the Navy train people to have certain capabilities.
And so the idea of a capabilities ontology was included on this list.
And then you have various issues of safety and reliability.
And then you have the things, weapons systems, many kinds of systems.
Business systems is just one example.
You need various platforms, the ships and so forth.
And the other thing which they wanted an ontology for was sensors.
And now how are these levels determined?
Well, this is levels of granularity.
So systems and platforms are very big and molecules and energy are very small.
And so you have to organize in some ways.
So this was the way that we chose.
Now, in the second part of this exercise,
and the precise way in which we do that is still to be determined,
but we have some ideas.
We will negotiate, broadly speaking.
And you can start thinking already.
So we're going to give you the same schema thing after you process information.
And then you can work out levels of granularity.
You can do this just in your minds while you're drinking coffee.
What we want to know is what ontologies are needed for ground systems.
And we will go further along those lines when we return.
Now, I'm hoping that the coffee is ready now.
Do you want to run outside and see?
Okay, so then let's break now and we will come back in exactly 15 minutes.
