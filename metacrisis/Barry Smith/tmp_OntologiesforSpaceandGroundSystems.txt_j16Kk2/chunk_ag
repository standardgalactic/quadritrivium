And, well, you can...
You see, this is not ontology anymore.
This is a specific representation of instance data but using the ontology.
Identifiers to Telstar 401.
So there are many entities like Lockheed Martin and the United States of America.
These are instances also.
They're all instances of organization in the ontology.
And one of them owns the satellite.
One of them is the country of origin.
One is where it was designed and one is who operated.
The question about the relationships.
Is that defined?
Is illustrated here?
They're all defined in the ontology.
And many of them are quite generic so they're not part of the space domain ontology.
So if you look at the hub and spokes of the common core,
near the top, below BFO is relations ontology.
Now there are some specific space relations which come lower down
but most of them are already very general up there.
For instance, designed by...
And this is weather now.
So we have an atmospheric weather and...
Is there a space weather brunch in the space domain ontologies?
There will be if there isn't one.
We have dates, time stamps generally according to different reference systems.
Operational status, end of life mission.
And now once we've gone through the end of life operational status
then the operational status becomes defunct.
All right, now let's start preparing for the next part.
So there are four main types of entity in BFO.
This is a simplification but it will be useful for our exercise in what's to come.
So we have material entities here that we're only interested in things like satellites
and people and launch pads and planets and devories and so forth.
All of those are material entities.
And then we have attributes which are things like the quality,
the height, the weight, the amount of fuel, the thrust of power and so forth.
And then we have information entities such as the satellite model,
the design that was used, the mission specification and so forth.
And then we have processes, the orbit, the mission which was actually executed,
the launch and you understand I think all of these four headings
but you now need to keep these four headings in mind
because we're going to use these four headings as a way of grappling
with what a ground system ontology is going to need
or what a set of ground system ontology modules is going to need.
And so just to remind you these are the different kinds of attributes,
functions, capabilities, distributions, they are all one branch
and then roles and policies.
And now before I go on to the next slide,
are there any questions about anything which has gone before?
Because now we're going to change tack quite radically.
Yeah.
How do you know what is the set of terms and qualities in relationships that you should be using?
We're going to find out.
That's the next exercise.
And how do you know the answer is you bully experts.
How do we find that?
Did you have a question?
I'm wondering what ontology is like whether rebranding is actually going to turn over time changes in the future?
Yes.
Good.
So how that's incorporated?
Yes.
So first of all, the ontology versioning is a very important set of problems
because the world changes, our knowledge changes,
the software used to deal with ontologies changes.
And so ontologies do undergo changes.
The BFO underwent four changes.
The most recent one is the ISO standardization.
It did lead to some small changes in the content of the ontology.
If you have a big ontology like Space and Main ontologies,
and some organization uses it to tag data that they have in 2019,
and then 10 years later, someone wants to know how they can exploit the data that was created in 2019,
which is enhanced with the ontology.
They want to know what ontology you use and what version.
So we have versioning principles.
They're designed to solve this problem.
You always know what version of an ontology was being used,
because each term in the ontology has a URI associated with it,
and the URI contains a version identified.
Now, how do ontologies change?
Well, one of the ways ontologies change is that certain words require different means.
And the only way in which you can catch those changes is by having lots of users
who report when they're beginning to have problems with this given term.
And the way in which the OVO foundry developed was that we had many users,
and they would report gaps or mistakes in the ontology.
So the ontologies were improved through the process of being used,
which meant that they became better, which meant more people used them,
which meant that they were improved more.
So it was a very successful virtuous circle.
And it doesn't mean that we reach perfection on the contrary.
This virtuous circle goes on and on, because science advances.
And you can imagine that there were lots of advances,
because this was the era when the Human Genome Project results were being incorporated into all biology.
But the ontologies created at the very beginning, they grew tremendously,
but the architecture was very stable.
Any more questions?
So these are kind of fundamental, but some of them change,
like the function of something.
I mean, there might be one function, but it might have another function.
Yeah, so there are three levels that we need to distinguish here.
First of all, there's the BFO level. BFO has a definition of function,
which we believe it captures the core of what we mean by function,
in engineering and in biology, which people mostly like, but we have critics, I have to confess.
Then there is the question, what is the function of this artifact?
And if we follow the definition given in BFO, we can usually work that out.
And it may be that there is more than one function.
So the satellite was built in order to perform forest fire tracking or something,
but then once it was built, it was realized that it could also be used to track something else.
So it acquired another function.
And subsequent satellites of that type were used primarily for that other function.
That's the second case. The third case is when the function itself changes.
So I don't know very much about forest fires,
but I can imagine that that might be because of desertification or something,
a different kind of forest fire tracking that you need.
And so the very function forest fire tracking changes its nature.
Now we can deal with all three of those kinds of things.
And you just have to believe me. Anymore?
All right, so now let me give you some background to the next slide.
The Navy is undergoing something called the Systems Engineering Transformation.
And the idea behind this transformation is that all of the missions of the Navy,
including missions having to do with warfighting,
but also missions having to do with things like logistics and procurement
and acquisitions and maintenance and so forth,
they will all be captured using model-based systems engineering.
And in other words, they'll be captured in such a way that you can use software
in order to create a mission, for instance.
And now the Navy is a big enterprise and it suffers tremendously
from the ragged harmony of terminology use that I referred to at the beginning.
So the Navy is really bad.
And so Kubrick, including me, are working on a plan to create an ontology
across the Navy which will enable this kind of terminological harmony
which is needed if you're going to do a Systems Engineering Transformation
which will work across the Navy because a lot of what the Navy does is cross-disciplinary.
It's going to be applied to different parts of the Navy at the same time.
And so along with the Navy's SET people, we created this plan
of what ontologies would be needed by the Navy in the long run.
So these are modules.
This is a huge task.
We're not going to create all these modules at the same time
and some of the modules may prove not to be useful and so they won't ever be built.
We are starting with a certain pilot program building just one of these modules
but this is the plan that we came up with.
Let me just explain the architecture of the plan.
So we have the same four categories.
They're not quite in the same order but you will forgive me.
Things, attributes, processes and information entities.
So the Navy has lots of reports, has lots of data, lots of metadata
including sensor data, data about the physical properties of all its equipment and so forth.
And so that was recognized the need for several pockets of data or information ontology.
And then the Navy is involved in lots of processes.
Testing, servicing, logistics, operations, planning.
These are all processes and so they go under the process heading.
And then there are data exchange processes.
There are strange processes like classification guidance
which is guiding the organizations within the Navy about how to classify things
which yield certain kinds of artifacts which look like dictionaries.
And manufacturing is going to be a part because the Navy does do some manufacturing itself.
And then the main process, the ships are moving around the oceans or under the oceans.
Under the surface of the oceans I guess.
And so you need an ontology of those kinds of things.
It's 233.
Good.
And then attributes, well, we need an ontology to deal with the different kinds of roles
that people have in the Navy.
So that might sound trivial but actually if you think about it, it's not just going to be ranks.
It's going to be all the various different kinds of testing people,
maintenance people, logistics people, classification people.
So they all have different roles.
And finding the person with the role that you need is not a trivial exercise.
And so that's the reason for the ontology here.
And then we have capabilities.
So units in the Navy and equipment in the Navy have different capabilities.
Teams which have been trained have different capabilities.
Some training institutions within the Navy train people to have certain capabilities.
And so the idea of a capabilities ontology was included on this list.
And then you have various issues of safety and reliability.
And then you have the things, weapons systems, many kinds of systems.
Business systems is just one example.
You need various platforms, the ships and so forth.
And the other thing which they wanted an ontology for was sensors.
And now how are these levels determined?
Well, this is levels of granularity.
So systems and platforms are very big and molecules and energy are very small.
And so you have to organize in some ways.
So this was the way that we chose.
Now, in the second part of this exercise,
and the precise way in which we do that is still to be determined,
but we have some ideas.
We will negotiate, broadly speaking.
And you can start thinking already.
So we're going to give you the same schema thing after you process information.
And then you can work out levels of granularity.
You can do this just in your minds while you're drinking coffee.
What we want to know is what ontologies are needed for ground systems.
And we will go further along those lines when we return.
Now, I'm hoping that the coffee is ready now.
Do you want to run outside and see?
Okay, so then let's break now and we will come back in exactly 15 minutes.
