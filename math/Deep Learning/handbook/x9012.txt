54.
Neto, O.P., Kennedy, D.M., Reis, J.C., Wang, Brizzi, Y.A.C.B., Zambrano, G.J., de  Souza, J.M., Pedroso, W., de  Mello  Pedreiro, R.C., de  Matos  Brizzi, B., Abinader, E.O., Zângaro, R.A.: Mathematical model of covid-19 intervention scenarios for São Paulo-Brazil. Nat. Commun. 12:1, 12:1–13, 1 (2021)
55.
Niazkar, M., Niazkar, H.R.: Covid-19 outbreak: Application of multi-gene genetic programming to country-based prediction models. Electron. J. Gen. Med. 17, em247, 5 (2020)
56.
Olivier, L.E., Botha, S., Craig, I.K.: Optimized lockdown strategies for curbing the spread of covid-19: a South African case study. IEEE Access 8, 205755–205765 (2020)Crossref
57.
Panigrahi, S.S., Muthukumar, A.J., Thangavelu, S., Jeyakumar, G., Velayutham, C.S.: A comparative study on parameter estimation of covid epidemiological models using differential evolution algorithm. Stud. Comput. Intell. 1009, 241–263 (2022)
58.
Panjwani, B., Singh, V., Rani, A., Mohan, V.: Optimum multi-drug regime for compartment model of tumour: cell-cycle-specific dynamics in the presence of resistance. J. Pharm. Pharmacodyn. 48, 4, 48:543–562, 3 (2021)
59.
Paruch, M.: Identification of the degree of tumor destruction on the basis of the arrhenius integral using the evolutionary algorithm. Int. J. Thermal Sci. 130, 507–517, 8 (2018)
60.
Quaranta, G., Formica, G., Machado, J.T., Lacarbonara, W., Masri, S.F.: Understanding covid-19 nonlinear multi-scale dynamic spreading in Italy. Nonlinear Dyn. 101, 1583–1619, 8 (2020)
61.
Ranieri, C.M., Pimentel, J.M., Romano, M., Elias, L., Romero, R.A.F., Lones, M.A., Araujo, M.F.P., Vargas, P.A., Moioli, R.C.: A data-driven biophysical computational model of parkinson’s disease based on marmoset monkeys. IEEE Access 9, 122548–122567 (2021)Crossref
62.
Sadowski, K.L., Alderliesten, T., Niatsetski, Y., Van  Der Meer, M.C., Thierens, D., Bel, A., Luong, N.H., Van  Der Laarse, R., Bosnian, P.A.N.: Exploring trade-offs between target coverage, healthy tissue sparing, and the placement of catheters in HDR brachytherapy for prostate cancer using a novel multi-objective model-based mixed-integer evolutionary algorithm. In: GECCO 2017—Proceedings of the 2017 Genetic and Evolutionary Computation Conference, pp. 1224–1231, 7 (2017)
63.
Salgotra, R., Gandomi, M., Gandomi, A.H.: Evolutionary modelling of the covid-19 pandemic in fifteen most affected countries. Chaos Sol. Fract. 140, 110118, 11 (2020)
64.
Salgotra, R., Gandomi, M., Gandomi, A.H.: Time series analysis and forecast of the covid-19 pandemic in India using genetic programming. Chaos Sol. Fract. 138, 109945, 9 (2020)
65.
Shaban, W.M., Rabie, A.H., Saleh, A.I., Abo-Elsoud, M.A.: A new covid-19 patients detection strategy (cpds) based on hybrid feature selection and enhanced KNN classifier. Knowl.-Based Syst. 205, 106270, 10 (2020)
66.
Shamshad, F., Khan, S., Zamir, S.W., Khan, M.H., Hayat, M., Khan, F.S., Fu, H.: Transformers in medical imaging: a survey. Med. Image Anal. 102802 (2023)
67.
Shindi, O., Kanesan, J., Kendall, G., Ramanathan, A.: The combined effect of optimal control and swarm intelligence on optimization of cancer chemotherapy. Comput. Methods Program. Biomed. 189, 105327, 6 (2020)
68.
Shukla, P.K., Sandhu, J.K., Ahirwar, A., Ghai, D., Maheshwary, P., Shukla, P.K.: Multiobjective genetic algorithm and convolutional neural network based covid-19 identification in chest x-ray images. Math. Probl. Eng. (2021)
69.
Singh, D., Kumar, V., Kaur, M., Jabarulla, M.Y., Lee, H.N.: Screening of covid-19 suspected subjects using multi-crossover genetic algorithm based dense convolutional neural network. IEEE Access 9, 142566–142580 (2021)
70.
Smith, S.L., Lones, M.A., Bedder, M., Alty, J.E., Cosgrove, J., Maguire, R., Pownall, M., Ivanoiu, D., Lyle, C., Cording, A., Elliott, C.J.H.: Computational approaches for understanding the diagnosis and treatment of parkinson’s disease. IET Syst. Biol. 9(6):226–233 (2015)
71.
Stillman, N.R., Balaz, I., Tsompanas, M.A., Kovacevic, M., Azimi, S., Lafond, S., Adamatzky, A., Hauert, S.: Evolutionary computational platform for the automatic discovery of nanocarriers for cancer treatment. NPJ Comput. Mater. 7, 1–12, 9 (2021)
72.
Su, Y., Li, S., Zheng, C., Zhang, X.: A heuristic algorithm for identifying molecular signatures in cancer. IEEE Trans. Nanobiosci. 19, 132–141, 1 (2020)
73.
Tang, L., Li, Y., Bai, D., Liu, T., Coelho, L.C.: Bi-objective optimization for a multi-period covid-19 vaccination planning problem. Omega 110, 102617, 7 (2022)
74.
Taou, N., Lones, M.: Optimising boolean synthetic regulatory networks to control cell states. IEEE/ACM Trans. Comput. Biol. Bioinf. 18, 2649–2658 (2021)Crossref
75.
Tian, Y., Feng, Y., Wang, C., Cao, R., Zhang, X., Pei, X., Tan, K.C., Jin, Y.: A large-scale combinatorial many-objective evolutionary algorithm for intensity-modulated radiotherapy planning. IEEE Trans. Evol. Comput. (2022)
76.
Tsompanas, M.A., Bull, L., Adamatzky, A., Balaz, I.: In silico optimization of cancer therapies with multiple types of nanoparticles applied at different times. Comput. Methods Program. Biomed. 200, 105886, 3 (2021)
77.
Vallejo, M., Cosgrove, J., Alty, J.E., Jamieson, S., Smith, S.L., Corne, D.W., Lones, M.A.: A multi-objective approach to predicting motor and cognitive deficit in parkinson’s disease patients. In: Proceedings of Genetic and Evolutionary Computation Conference (GECCO 2016), Workshop on Medical Applications (MedGEC), pp. 1369–1376. ACM (2016)
78.
Vieira, P.A., Magalhães, D.M.V., Carvalho-Filho, A.O., Veras, R.M.S., Rabêlo, R.A.L., Silva, R.R.V.: Classification of covid-19 in x-ray images with genetic fine-tuning. Comput. Electr. Eng. 96, 107467, 12 (2021)
79.
Walker, J.A., Völk, K., Smith, S.L., Miller, J.F.: Parallel evolution using multi-chromosome cartesian genetic programming. Gen. Programm. Evol. Mach. 10, 417–445, 12 (2009)
80.
Wang, P., Liu, R., Jiang, Z., Yao, Y., Shen, Z.: The optimization of combination chemotherapy schedules in the presence of drug resistance. IEEE Trans. Autom. Sci. Eng. 16, 165–179, 1 (2019)
81.
Worzel, W.P., Yu, J., Almal, A.A., Chinnaiyan, A.M.: Applications of genetic programming in cancer research. Int. J. Biochem. Cell Biol. 41, 405–413, 2 (2009)
82.
Wu, P., Wang, D.: Classification of a DNA microarray for diagnosing cancer using a complex network based method. IEEE/ACM Trans. Comput. Biol. Bioinf. 16, 801–808, 5 (2019)
83.
Yarsky, P.: Using a genetic algorithm to fit parameters of a covid-19 SEIR model for us states. Math. Comput. Simul. 185, 687–695, 7 (2021)
84.
Yousefpour, A., Jahanshahi, H., Bekiros, S.: Optimal policies for control of the novel coronavirus disease (covid-19) outbreak. Chaos Solit. Fract. 136, 109883, 7 (2020)
85.
Zhang, G., Liu, X.: Prediction and control of covid-19 spreading based on a hybrid intelligent model. PLOS One 16, e0246360, 2 (2021)
86.
Zhang, M., Li, H., Pan, S., Lyu, J., Ling, S., Su, S.: Convolutional neural networks-based lung nodule classification: a surrogate-assisted evolutionary algorithm for hyperparameter optimization. IEEE Trans. Evol. Comput. 25, 869–882, 10 (2021)©  The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.  2024
W. Banzhaf et al.(eds.)Handbook of Evolutionary Machine LearningGenetic and Evolutionary Computationhttps://doi.org/10.1007/978-981-99-3814-8_21
21.  Evolutionary Machine Learning for Space
Moritz  von  Looz1, Alexander  Hadjiivanov1and Emmanuel  Blazquez1
(1)
European Space Agency ESA, Keplerlaan 1, 2201 AZ  Noordwijk, Netherlands
Moritz  von  Looz
Email: moritz@vlooz.de
Abstract
The Venn diagram of evolutionary computation, machine learning and space applications shows some intriguing overlaps. As evolutionary algorithms are often resource-intensive, they have not yet been applied inspace. Nevertheless, it has been decisively demonstrated that evolutionary machine learning (EML) is a valuable tool forspace, specifically in fields such as trajectory optimisation, optimal controland neuroevolutionfor robot control, where high-dimensional, discontinuous, sparse and/or non-linear problems abound. In the following chapter, we introduce common problems faced by the space research and application community, together with EML techniques used for generating robust, performant and, sometimes indeed, state-of-the-art solutions. The often complex mathematics behind some problems (especially in trajectory optimisation and optimal control)has been simplified to the minimum necessary to convey the essence of the challenge without encumbering the overview of the relevant EML algorithms. We hope that this chapter provides useful information to both the EML and the space communities in the form of algorithms, benchmarks and standing challenges.
21.1 Introduction
The intersection between evolutionary methods and classical machine learning is extensive and varied [55]. Both approaches have found many applications in the space domain individually: evolutionary methods for interplanetary trajectory optimisation, recurrentneural network architectures for guidance, navigation and control(GNC) tasks, neurocontrollersfor in-space robotics or convolutional neural networks for image recognition in earth observation (EO) and astronomy. One of the earliest demonstrations of a real-world application of evolution was an antenna designed by a genetic programming algorithm [34] for NASA’sSpace Technology 5 mission. The performance of the final design was found to be comparable to hand-crafted antennae. It was evaluated on an actual satellite, and a subsequent study successfully re-evolved the design [3] to comply with changes in the requirements.
An important distinction is that the space domain is not restricted to applications physicallyin space (generally known as on-boardapplications). Traditionally, requirements in terms of robustness and reliabilityfor any physical device deployed in space have been, and remain, notoriously high. This is due to the stringent safety qualification and performance requirements, which in turn stem from the harsh environment and high cost of failures. Furthermore, due to the limited power budget, computational capabilities and support for parallelisation of spaceflight on-board hardware and software, the use of evolutionary algorithms is currently limited to on-ground pre- and post-processing.
Still, just like life on Earth, which flourishes even in the most inhospitable environments thanks to biological evolution, evolutionary machine learning (EML) has found its niche applicationsin space-related research. Specifically, EML forspace applications is an optimisation paradigm that is growing in popularity and can benefit from everything that evolution has to offer, such as tackling large and discontinuous fitness landscapes, as well as robustness to local minima.
Fig. 21.1
EML for space applications considered in this chapter
The applications of EML methods in the space sector can be broadly grouped into two categories, see Fig.  21.1. The first one is the use of machine learning methods for assisting evolution: Evolutionary methods have been highly successful in interplanetary trajectory design  [29], and we will discuss potential applications of EML for trajectories in Sect.  21.2
The second area of intersection is classical machine learning (most commonly artificial neural networks) assisted by evolutionary methods. This takes the form of neural architecture search, genetic programming or direct optimisation of network weights. Many guidance and path planning tasks in space can be mathematically framed as control problems and addressed with neurocontrollers, as we will discuss in Sect.  21.3. This applies specifically to robotic planetary exploration, see Sect.  21.4
It is important to note that vision-based object classification is a major task in astronomy, and the field has embraced evolutionary machine learning methods for this purpose  [16, 24]. One particular challenge is the identification of objects in the presence of stray light sources and diffusion. For instance, Jones et al. [30] use an evolutionary approach to neural architecture search, in which they evolve parameters specifying the topology of a convolutional neural network tasked with identifying galaxies in the Zone of Avoidance (the part of the universe that is obscured by the galactic disk of the Milky Way). However, we choose to direct our focus to spaceflight applications in the remainder of this chapter as this matches our area of expertise. Below, we present several categories of such applications, together with examples and future directions in Sect.  21.5
21.2 Spaceflight Trajectory Optimisation
Among the applications of evolutionary algorithms for spaceflight, the optimization of trajectories is by far the most successful. Numerous winning entries in the series of the Global Trajectory Optimisation Competition (GTOC) have relied primarily on evolutionary algorithms, occasionally augmented with machine learning techniques.
In the absence of other forces, a spacecraft will follow a ballistic, predictable arc. A trajectory is thus characterised by the timing and nature of its manoeuvres, either using some propulsion systemor gravitational interactions. Propulsion systems can be classified by their exhaust velocityand thrust. A higher exhaust velocity makes the system more efficient, and larger manoeuvres can be done with the same amount of fuel. A higher thrust allows manoeuvres to be done in shorter time, making their planning and modelling much easier. For classical,chemicalengines, the thrust is high enough that on the time scales for interplanetary trajectories, manoeuvres can be modelled as instantaneous. In contrast, low-thrustengines, for example, ion drives and other sorts of electrical propulsion, are using their fuel much more efficiently, but manoeuvres take weeks or months  [59]. Spacecraft with low-thrust engines effectively accelerate continuously on a large part of their trajectory, travelling on long spirals instead of ballisticarcs. Figure  21.2shows an example of a low-thrust trajectory from an Earth parking orbit to the moon.
Fig. 21.2
An illustration of a low-thrust trajectory, inspired by the SMART-1 technology demonstrator mission to the moon. The continuous thrust results in trajectories with a large number of free variables, illustrated by the ticks. (Not to scale)
The key figure of merit of a trajectory is the total change of velocityrequired to be fulfilled by its propulsive manoeuvres.1It is denoted as , and the fuel requirements of a mission scale exponentially with it
(21.1)
Equation  21.1stems from rearranging the famous Tsiolkovsky’s rocket equation, with denoting the fuel mass, the exhaust velocity of the propulsion systemand the mass of everything else: the payload, but also the weight of the propulsion systemand empty tanks. Due to the exponential growth, fuel requirements quickly become prohibitive for higher values of . Designing efficient trajectories is thus imperative not only to lower the cost of a mission but also to make it possible at all.
A basic building block of efficient trajectory design is the use of gravity assistmanoeuvres(GAs). In these, a spacecraft flies past a moving massive body, and exchanges momentum due to the gravitational interaction. Multiple flybys can be chained together to increase the saved , but require precise timing. This technique, denoted as Multiple Gravity Assists(MGA), enabledthe Grand Tour of Voyager 2[31] and has become nearly indispensable in modern interplanetary missions. Figure  21.3shows an example trajectory with four gravity assists to reach Jupiter.
The parameterisation of a trajectory can be conceptually reduced to the epochs, magnitudes and directions of its manoeuvres, including gravity assists. For impulsive trajectory designs making use of chemical engines, the arcs between manoeuvres are ballistic, see also Fig.  21.3. For low-thrust trajectories with continuous acceleration, the continuous-time optimisation problem is first discretised and free parameters, such as thrust angles and epochs, are specified for each discretisation node, as shown in Fig.  21.2
Fig. 21.3
A trajectory using multiple gravity assists on Earth, Mars and Venus on the way to Jupiter. Each coloured dot marks the location of a planet during a gravity assist manoeuvre. The Earth is visited multiple times. The trajectory is inspired by ESA’s JUICE mission, launched in 2023 and currently en route to the Jupiter system. In this parametrisation, the free parameters are only the times t0–t6: the timings of launch, the flybys and the arrival
The resulting optimisation problems are high-dimensional, even more so for low-thrust trajectories. As the effect of a gravity assist depends on precise timing, the cost functions have steep gradients and many local optima which makes them challenging to optimise. Analytical gradients are not always available and local optimisation relies heavily on the quality of an initial estimate. Evolutionary algorithms have thus been used extensively and with considerable success to initialise global trajectory optimisation searches  [29, 59]. In these, the genotype specifies the trajectory parameters, while the fitness is set to its cumulative (and thus the logarithm of fuel use) over the entire trajectory.
Multiple approaches have been developed to accelerate the evolutionary trajectory search. Izzo et al. [27] introduce the archipelagomodelto make use of parallel computing resources. In this model, multiple populations of solutions are evolved simultaneously with regular migration. In addition to allowing a higher degree of parallelisation, this approach prevents the evolution from getting stuck in local minima. Some trajectory problems have combinatorial aspects in addition to the continuous ones. Examples include the right order of planets to visit for flybys or the creation of tours covering multiple moons or asteroids. Well-known instances include the Global Trajectory Optimisation Challenge(GTOC), a regular competition of complex trajectory problems. The seventh GTOC, for example, challenged participants to explore the asteroid belt with multiple craft, while the ninth GTOC posed the problem of selecting, visiting and removing pieces of space debris with a limited fuel budget  [25]. More applied mission proposals also face the problem of target selection and visitation orders  [47].
21.2.1 Use of Machine Learning Methods
Due to the inherent randomness of evolutionary optimisation and the many local minima prevalent in trajectory problems, it is beneficial to perform multiple restarts of the optimisation process, starting from different seeds to have a higher chance of reaching a global optimum. Due to this process, but also during a single evolutionary run, large amounts of data about the fitness landscape are gathered.
