Bradley, H., Fan, H., Saini, H., Adithyan, R., Purohit, S., Lehman, J.: Diff models - a new way to edit code. CarperAI Blog (2023)
10.
Brameier, M., Banzhaf, W.: A comparison of linear genetic programming and neural networks in medical data mining. IEEE Trans. Evol. Comput. 5(1), 17–26 (2001)CrossrefzbMATH
11.
Brant, J.C., Stanley, K.O.: Minimal criterion coevolution: a new approach to open-ended search. In: Proceedings of the Genetic and Evolutionary Computation Conference, pp. 67–74. ACM (2017)
12.
Brant, J.C., Stanley, K.O.: Diversity preservation in minimal criterion coevolution through resource limitation. In: Proceedings of the 2020 Genetic and Evolutionary Computation Conference, GECCO ’20, pp. 58–66, New York, NY, USA. Association for Computing Machinery (2020)
13.
Brown, T.B., Mann, B., Ryder, N., Subbiah, M., Kaplan, J., Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Askell, A., Agarwal, S., Herbert-Voss, A., Krueger, G., Henighan, T., Child, R., Ramesh, A., Ziegler, D.M., Wu, J., Winter, C., Hesse, C., Chen, M., Sigler, E., Litwin, M., Gray, S., Chess, B., Clark, J., Berner, C., McCandlish, S., Radford, A., Sutskever, I., Amodei, D.: Language models are few-shot learners (2020). arXiv:​2005.​14165
14.
Chen, L., Lu, K., Rajeswaran, A., Lee, K., Grover, A., Laskin, M., Abbeel, P., Srinivas, A., Mordatch, I.: Decision transformer: reinforcement learning via sequence modeling (2021). arXiv:​2106.​01345
15.
Chen, M., Tworek, J., Jun, H., Yuan, Q., de Oliveira Pinto, H.P., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., et al.: Evaluating large language models trained on code (2021). arXiv:​2107.​03374
16.
Chowdhery, A., Narang, S., Devlin, J., Bosma, M., Mishra, G., Roberts, A., Barham, P., Chung, H.W., Sutton, C., Gehrmann, S., et al.: Palm: scaling language modeling with pathways (2022). arXiv:​2204.​02311
17.
Christiano, P., Leike, J., Brown, T.B., Martic, M., Legg, S., Amodei, D.: Deep reinforcement learning from human preferences (2017). arXiv:​1706.​03741
18.
Cully, A., Clune, J., Tarapore, D., Mouret, J.-B.: Robots that can adapt like animals. Nature 521(7553), 503–507 (2015)Crossref
19.
De Jong, K.A.: Evolutionary Computation: A Unified Approach. MIT Press, Cambridge, MA (2006)zbMATH
20.
Dennis, M., Jaques, N., Vinitsky, E., Bayen, A., Russell, S., Critch, A., Levine, S.: Emergent complexity and zero-shot transfer via unsupervised environment design. Adv. Neural Inf. Process. Syst. 33, 13049–13061 (2020)
21.
Devlin, J., Chang, M.-W., Lee, K., Toutanova, K.: Bert: pre-training of deep bidirectional transformers for language understanding (2018). arXiv:​1810.​04805
22.
Earle, S., Togelius, J., Soros, L.B.: Video games as a testbed for open-ended phenomena. In: 2021 IEEE Conference on Games (CoG), pp. 1–9. IEEE (2021)
23.
Galván-López, E., McDermott, J., O’Neill, M., Brabazon, A.: Towards an understanding of locality in genetic programming. In: Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation, pp. 901–908 (2010)
24.
Grbic, D., Palm, R.B., Najarro, E., Glanois, C., Risi, S.: Evocraft: a new challenge for open-endedness. In: International Conference on the Applications of Evolutionary Computation (Part of EvoStar), pp. 325–340. Springer (2021)
25.
Gugerty, L., Olson, G.: Debugging by skilled and novice programmers. In: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 171–174 (1986)
26.
Hansen, N.: The CMA evolution strategy: a comparing review. In: Towards a New Evolutionary Computation, pp. 75–102. Springer (2006)
27.
He, K., Zhang, X., Ren, S., Sun, J.: Deep residual learning for image recognition (2015). arXiv:​1512.​03385
28.
Hendrycks, D., Basart, S., Kadavath, S., Mazeika, M., Arora, A., Guo, E., Burns, C., Puranik, S., He, H., Song, D., et  al.: Measuring coding challenge competence with apps (2021). arXiv:​2105.​09938
29.
Jonyer, I., Himes, A.: Improving modularity in genetic programming using graph-based data mining. In: FLAIRS Conference, pp. 556–561 (2006)
30.
Keskar, N.S., McCann, B., Varshney, L.R., Xiong, C., Socher, R.: CTRL: a conditional transformer language model for controllable generation (2019). arXiv:​1909.​05858
31.
Koza, J.R.: Genetic Programming: On the Programming of Computers by Means of Natural Selection. MIT Press, Cambridge, MA (1992)zbMATH
32.
Koza, J.R., Keane, M.A., Streeter, M.J., Mydlowec, W., Yu, J., Lanza, G.: Genetic Programming IV: Routine human-competitive machine intelligence, vol.  5. Springer Science & Business Media, 2006
33.
Kramer, O.: Evolutionary self-adaptation: a survey of operators and strategy parameters. Evolutionary Intelligence 3(2), 51–65 (2010)CrossrefzbMATH
34.
Langdon, W.B., Poli, R.: Foundations of Genetic Programming. Springer Science & Business Media (2013)
35.
Lehman, J., Chen, J., Clune, J., Stanley, K.O.: Safe mutations for deep and recurrent neural networks through output gradients. In: Proceedings of the Genetic and Evolutionary Computation Conference, pp. 117–124. ACM (2018)
36.
Lehman, J., Gordon, J., Jain, S., Ndousse, K., Yeh, C., Stanley, K.O.: Evolution through large models (2022). arxiv:​2206.​08896
37.
Lehman, J., Stanley, K.O.: Abandoning objectives: evolution through the search for novelty alone. Evol. Comput. 19(2), 189–223 (2011)Crossref
38.
Li, P.L., Ko, A.J., Zhu, J.: What makes a great software engineer? In: 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, vol.  1, pp. 700–710. IEEE (2015)
39.
Li, R., Allal, L.B., Zi, Y., Muennighoff, N., Kocetkov, D., Mou, C., Marone, M., Akiki, C., Li, J., Chim, J., et  al.: Starcoder: may the source be with you! (2023). arXiv:​2305.​06161
40.
Li, Y., Choi, D., Chung, J., Kushman, N., Schrittwieser, J., Leblond, R., Eccles, T., Keeling, J., Gimeno, F., Lago, A.D., et  al.: Competition-level code generation with alphacode (2022). arXiv:​2203.​07814
41.
McOwan, P., Burton, E.: Sodarace website (2000–2013). http://​sodarace.​net
42.
Meyer-Nieberg, S., Beyer, H.-G.: Self-adaptation in evolutionary algorithms. In: Parameter Setting in Evolutionary Algorithms, pp. 47–75. Springer (2007)
43.
Mitchell, M.: An Introduction to Genetic Algorithms. MIT Press (1999)
44.
Mouret, J.-B., Doncieux, S.: Encouraging behavioral diversity in evolutionary robotics: an empirical study. Evol. Comput. 20(1), 91–133 (2012)Crossref
45.
Mouret, J.-B., Clune, J.: Illuminating search spaces by mapping elites (2015). arXiv:​1504.​04909
46.
OpenAI. Gpt-4 technical report (2023)
47.
Ouyang, L., Wu, J., Jiang, X., Almeida, D., Wainwright, C.L., Mishkin, P., Zhang, C., Agarwal, S., Slama, K., Ray, A., et  al.: Training language models to follow instructions with human feedback (2022). arXiv:​2203.​02155
48.
O’Neill, M., Vanneschi, L., Gustafson, S., Banzhaf, W.: Open issues in genetic programming. Gen. Progr. Evolvable Mach. 11(3), 339–363 (2010)Crossref
49.
Pathak, D., Agrawal, P., Efros, A.A., Darrell, T.: Curiosity-driven exploration by self-supervised prediction. In: International Conference on Machine Learning, pp. 2778–2787. PMLR (2017)
50.
Pugh, J.K., Soros, L.B., Stanley, K.O.: Quality diversity: a new frontier for evolutionary computation. Front. Robot. AI 40 (2016)
51.
Ray, A., McCandlish, S.: Independent contribution: training diff models (2020)
52.
Salustowicz, R., Schmidhuber, J.: Probabilistic incremental program evolution. Evol. Comput. 5(2), 123–141 (1997)Crossref
53.
Schulman, J., Levine, S., Abbeel, P., Jordan, M., Moritz, P.: Trust region policy optimization. In: International Conference on Machine Learning, pp. 1889–1897 (2015)
54.
Schulman, J., Moritz, P., Levine, S., Jordan, M., Abbeel, P.: High-dimensional continuous control using generalized advantage estimation (2015). arXiv:​1506.​02438
55.
Schulman, J., Wolski, F., Dhariwal, P., Radford, A., Klimov, O.: Proximal policy optimization algorithms (2017). arXiv:​1707.​06347
56.
Seront, G.: External concepts reuse in genetic programming. In: Working Notes for the AAAI Symposium on Genetic Programming, pp. 94–98. MIT/AAAI Cambridge (1995)
57.
Soros, L.B., Stanley, K.O.: Identifying minimal conditions for open-ended evolution through the artificial life world of chromaria. In: Proceedings of the Fourteenth International Conference on the Synthesis and Simulation of Living Systems, Cambridge, MA, pp. 793–800. MIT Press (2014)
58.
Spector, L., Robinson, A.: Genetic programming and autoconstructive evolution with the push programming language. Gen. Progr. Evolvable Mach. 3(1), 7–40 (2002)CrossrefzbMATH
59.
