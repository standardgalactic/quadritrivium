SL, UL
No
No
Evolutionary game theory
No
No
No
Competitive coevolutionary algorithm
Yes
RL
Yes
Multi-agent reinforcement learning
No
RL
No
No
Adversarial machine learning
1
No
SL, UL, RL
No
No
We base our AEL categories on the properties of: the number of defined adversaries, the dynamics of the adversaries, and the type of learning, see Table  13.1. We categorize learning along the machine learning concepts of supervised (SL), unsupervised (UL), and reinforcement (RL). In addition, there are evolutionary learning process properties: population and selection and variation. Note that this is an overview, and all nuances are not presented.
In Table  13.1, we require that the number of adversariesis greater than zero. The dynamics describe that a static adversary is different from a dynamic, i.e., an adversary that changes  (adapts) over time (between engagements, not only within the engagement). The dynamic adversary can change in different ways, e.g., adapting against each other. The learningrefers to how the adversaries are updated, e.g., training parameterized functions. The population indicates if there is a population, and if it is finite or infinite. Moreover, the use of variation and selection operators is indicated. Finally, hyper-parameter search variants of adversarial learning based on Evolutionary Computation (EC) variations are often created when the evolutionary process is added.
Next, we present the formal notation we use for adversarial evolutionary learning and, in particular, GANs.
13.2.1 Notation
We clarify some concepts of AEL with formal notation. We present an overview of learning in Sect.  13.2.1.1and GANs in Sect.  13.2.1.2. Note we try to provide minimal and meaningful definitions with as simple notation as possible.
In general, input can have a label . Table  13.2presents an overview of the notation used throughout the chapter. It includes parameters, variables, and constants considered names used for AEL and Lipizzaner[54]. Variables are optimized, parameters also include the initial variable values in Lipizzaner, and constants are used for the computational complexity analysis.
Table 13.2
Parameters, variables, and constants considered in the chapter
Name
“Learning”
A parameterized function with parameters 
A function for learning parameters with constants 
The red  (opponent, test, attacker, predator) adversary, 
The blue  (player, solution, defender, prey) adversary, 
The fitness of a solution, 
v(P)
The variation function of a population, 
e(P)
The evaluation function of a population, 
Name
Constants
C
GAN training cost, used for computational complexity analysis, 
Maximum neighborhood size, (a von Neumann neighborhood)
Solution concept for selection and replacement that uses the minimum value (“best worst case”)
Randomly Initialized and Evolved GAN Variables
Learning rate of a neural network (generator/discriminator), a parameter, 
Ensemble mixture weights of the generator ensemble mixture, a parameter, 
Randomly Initialized and SGD-Trained GAN Variables
g
Parameters of the generator, 
d
Parameters of the discriminator, 
Configuration Parameters For Spatial Coevolution
m
The grid size, 
s
Neighborhood size, derived from the cardinality of the neighborhood 
r
Radius  (overlap) of neighborhood, 
M
Loss functions, 
T
Number of generations (epochs), 
Tournament size, 
Mutation probability for learning rate, 
Mutation probability for mixture weights, 
A function parameterized by g, 
A function parameterized by d, Dataset sample, 
Parameters for Lipizzaner
Concave measuring function, 
Set of generators, 
Set of discriminators, 
l
Dimension of Gaussian distribution that generates generator input, 
z
Generator input dimension, 
v
Generator output dimension, this is also the discriminator input dimension, 
Distribution defined by the generator, 
Target distribution for the generator, e
Dataset size, 
Gan training objective function, see Eq.  (13.1). Used to calculate fitness for GAN coevolution, see Alg.  13.9
Spatial Coevolution GAN Notation
Fitness of a GAN, see Alg.  13.10, for generator and for discriminator
n
A cell in the grid, The kth cell, 
The neighborhood contains , these are the sub-populations
The kth neighborhood, 
Generator at the center cell of the kth neighborhood, 
N
Number of cells, (also the population size)
Grid population The sub-population of generatorsin a neighborhood
The sub-population discriminators in a neighborhood
F
Lipizzanerfunction, see Eq.  (13.2), 
h
Generator measuring function, q
