The result of this MTP became Local Motors, the world’s first open-sourced car company to reach production.13Able to design and build cars five times faster and with a hundred times less capital than traditional manufacturing companies, Local Motors is something of a modern wonder. Not only did they figure out how to accelerate and demonetize automotive production, they did so at a time when unemployment in Detroit—thanks to the slow death of the American auto industry—was hovering at 23 percent.14
Think about this for a moment. Throughout the book, we’ve been talking about how small teams can now accomplish what once only large corporations or governments could do. Well, if you exclude Elon Musk’s Tesla, America hasn’t seen a new car company succeed in thirty plus years. And in the past seven years, the government has spent tens of billions bailing out the Big Three. In other words, Local Motors isn’t just doing what large companies and government could do; they’re doing what these institutions could not—helping to save the automotive industry.

So what did they do? Simple. Local Motors figured out how to design and build cars collectively, through an incredibly robust DIY community. Today they host design competitions on their website, targeting very specific regional markets (off-road vehicles for the Sonoran Desert, incredibly fuel-efficient vehicles for California’s high-traffic freeways). The contests aggregate car concepts from a worldwide assortment of designers, engineers, and enthusiasts. Then the community votes up their favorites, and Local Motors helps brings the winning car into existence.

Critically, Local Motors keeps their community involved at every step. After that first design contest, Local Motors organizes additional design/build competitions around vents and interiors and other key features. They also leverage mass production, allowing their community to vote up their favorite off-the-shelf parts for inclusion in the vehicle. For example, the first car Local Motors released, the 2009 Rally Fighter—an off-road (yet street legal) desert racer—has Mazda Miata door handles and Honda Civic taillights. The company then releases the final design under a Creative Commons license so community members can continue to enhance the work and, for those entrepreneurially inclined, develop specialized parts to sell to the community. Lastly, to take possession of a car, customers must actually participate in the assembly process, cobuilding the finished product at a Local Motors build facility, aka a microfactory.

Of course, what we’re talking about here is engagement, but that word is often misconstrued. “Look,” explains Gina Bianchini, “engagement isn’t a like on Facebook. A like is just one-way communication. It doesn’t go anywhere. You have to think about what a community actually is—it’s people talking to one another. Engagement is always about getting that conversation going and keeping it going.”15
Local Motors does just that by providing a meaningful outlet for the underserved pent-up creativity of car enthusiasts at every step in their process. They’re not just letting their members peek behind the curtain of automotive design—they’re helping them become the wizard. As a result, because they are turning loose so much fundamental passion, they didn’t even need a huge community to become, as Chris Anderson wrote in Wired, “the future of American manufacturing.”16
And he wasn’t kidding. Back in 2013, Rogers and GE CEO Jeff Immelt teamed up to cocreate a Local Motors–style microfactory that specializes in speeding the time from mind to market for GE appliances. That factory opened in 2014. At the time of the ribbon-cutting ceremony, it already had two GE appliances in production. On the heels of that success, Local Motors is building an additional fifty microfactories to drive innovation in other industries.17
There is the mistaken impression that to really tackle a bold challenge via a DIY community, the community needs to be huge in order to match the scale of the task. Not true. While today’s Local Motors community is over 130,000 active members strong—with another 1,000,000 or so lurkers (those who watch but have not yet participated)—the collective that built that first Rally Fighter was a meager 500 people by comparison. The point is this: If your community can provide a legitimate release valve for people’s incredibly frustrated passion, you are unleashing one of the most potent forces in the history of the world.

Case Study 3: TopCoder—An Exponential Community
It started in the late 1990s. Jack Hughes was running a software development company in Connecticut. During those quiet periods between projects, Hughes kept his employees busy by holding in-house programming competitions. A few years later, after Hughes sold that company and was looking around for what to do next, he realized those competitions were something to build upon.

“I was sitting with my brother at a picnic table,” he explains, “discussing that fundamental business problem: How do you find really qualified people? A great developer, a great creative person, is a very difficult thing to find. But I already knew—because we had run those internal programming competitions—that developers loved to compete and that those competitions were a good way to identify top talent. Since so much of development work had become web work, I started wondering what would happen if we put those competitions online.”18
In 2002, Hughes stopped wondering. He and his brother set up the website TopCoder and began holding contests. “Initially we put some money up as prizes, just to keep things interesting, but mostly the contests were for pride.”
Pride, as it turns out, was the secret sauce.

Hughes was a longtime sports fan. He loved the bracket-based tournament structure used by the National Collegiate Athletic Association (NCAA) during March Madness. He also loved how baseball analysts had begun to depend on a far wider assortment of statistics than just home runs and RBIs. So Hughes created a leaderboard for TopCoder that works much the same as a NCAA tournament bracket. He also started posting electronic “baseball cards” for each programmer, the box scores displaying everything from statistics on how many competitions a given coder has entered to their highest and lowest scores in those competitions.19This rating system was designed so coders could look at the names and ratings of the other contestants entered in a contest and decide if they had a shot at winning and if the contest was worth entering. But it quickly became a point of pride.

“Really,” explains Hughes, “we turned coding into a massive multiplayer game. We would post a problem statement, and as soon as a coder opened it, a clock would start ticking down. People got points for how quickly they submitted a solution and how accurate their code was. But how high your rating was, that was a badge of honor. People weren’t competing for the money, they wanted the rating.”
But the money didn’t hurt, so rather than just making up competitions for his community to solve, Hughes solicited outside business. By atomizing big projects into bits, then organizing competitions around each bit, specialists within the TopCoder community deliver solutions one puzzle piece at a time. Some people are great at spotting bugs in code, while some are great at fixing bugs—that sort of thing. After these individual contests have been won, the whole project is reassembled and delivered to the client. It’s a great crowdsourcing model.

And it’s had enormous impact. In the beginning, a TopCoder community of roughly 25,000 was solving serious problems for the likes of GEICO and Best Buy, but it didn’t take long for those numbers to grow and for that community to become involved in efforts significantly farther afield. For example, when Dr. Ramy Arnaout of Boston’s Beth Israel Deaconess Medical Center was trying to sift through a huge pile of genetic information about the immune system, he decided that rather than just consult with fellow scientists, he might want to give TopCoder a shot.

“The result,” wrote Carolyn Johnson of the Boston Globe, “a deeply biological problem—analyzing the genes that produce proteins involved in the immune system’s ability to identify microbes—could be rapidly and efficiently answered by a community of more than 400,000 computer programmers.”20
What’s more amazing is how little time and money it actually took for the community to do this work. A two-week contest brought in over a hundred entries from coders in nearly seventy countries. Sixteen of those entries outperformed the algorithm then used by the National Institutes of Health. And—for those interested in using TopCoder to crowdsource programming needs (rather than as a guide to building a DIY community)—the whole contest cost just $6,000.

But if you are interested in looking at TopCoder for exponential community building purposes, the most important thing to remember is that it’s not just competition that drove their growth. “Competition just happened to be the thing that first engaged our community,” says Hughes. “Many other aspects of TopCoder are about collaboration. People get involved not because of the money or the sponsors or the fact that they can get jobs as a result. They get involved because it’s social. We’ve given our community a place to get together because they want to get together—that’s why it works.”
In late 2013, Appirio, the cloud services consultancy, purchased TopCoder and the community was put under the leadership of Appirio cofounder Narinder Singh. “We saw the amazing successes possible through TopCoder,” explains Singh, “but we also noted that it was being used by a relatively small number of customers, under limited circumstances. The more innovation a company wants, the greater the access to powerful technology they will need. Our goal in acquiring TopCoder is to make it mainstream technology for small, medium, and large organizations, to give them that ‘show me’ moment they need to make the exponential capabilities like TopCoder a core part of their technology arsenal.”21
Who Should Build a DIY Community?
Recall the Law of Niches. The ego-belittling truth the Internet makes visible is that none of us is as unique as we’d like to believe. And this is good news. It means that if you are passionate about something, there’s a pretty good chance others share that passion. So the best reason to start a DIY community is unrequited love.

Look, if you can leverage an existing community to fulfill your dreams, go that route. But if you’re passionate about something and no one else is sating that desire, then you have first-mover advantage. Don’t underestimate this power. When Galaxy Zoo first started, they were pretty sure only a handful of people would sign up to catalogue galaxies—yet within a very short time, tens of thousands of people were involved. Why? There was a deep, unmet need in people to participate in astronomy, and Galaxy Zoo was the only game in town.

We saw something similar with Asteroid Zoo—the Zooniverse-hosted collaboration between my company, Planetary Resources, and NASA to use humans to identify new, never-before-detected asteroids, which, in turn, will create a rigorous dataset from which we can train up AIs to do the same at scale. This is such a specific desire that we were not certain how people would react, but just as with Galaxy Zoo, the crowd wildly exceeded our expectations. In the first six days of the project, we saw more than one million images reviewed and more than 400,000 asteroids classified.

There’s a corollary here: If you don’t have first-mover advantage, then ask yourself what new and exciting twist you are bringing to the table. Think about CrossFit. The health and fitness space was exceptionally crowded when this workout craze was introduced, but CrossFit leveraged two facts: People work harder when they’re in a group of peers, and outside of yoga, there were no fitness classes aimed directly at men. So while CrossFit lacked a first-mover advantage, their distinguishing elements were new (no other game in town) and exciting (you get a better workout), and that was more than enough to build upon.

It’s also important to remember that people join communities because it reinforces their sense of identity (see below), but they stay for the conversation. This is also why the very best communities actually force their members to interact with one another—they actually drive that conversation. And if you’re the person organizing a new community,22then driving a high level of interactivity must be your primary responsibility. Every community manager is first and foremost a conversational caretaker. When Chris Anderson initially created DIY Drones, he spent an average of three to four hours each day curating his community. Simply put, if you’re not an especially social person or are too busy to put in that kind of time, community building is probably not for you.

Why Notto Build a DIY Community
A great many people try to build communities for the wrong reasons, which is no different from building a house on a rotten foundation. Do the latter, and no matter how fancy your door knockers are, the structure will eventually collapse. The same holds true for communities. So before we even get into why you should take the time to build an online community, let’s start with the three main reasons why you should notbuild a community.

1.  Greed.Online communities are about achieving an MTP, not the cash. This is not to say you can’t monetize these communities, but this won’t happen right away. Communities are about authenticity and transparency, and you need to prove that you’re the real deal before you begin asking for real dollars.

2.  Fame.Reputation economics tells us that one of the main reasons people join online communities is because they want recognition. And the purpose of your community is to give it to them, not to you.

3.  Short-term desires.For starters, getting a vibrant DIY community up and running isn’t going to happen overnight. Moreover, people are attracted to big visions. When Planetary Resources attracted our Vanguards (essentially the foundation of our community), it wasn’t because they were excited to help us build a new telescope. They were excited about opening the space frontier.
