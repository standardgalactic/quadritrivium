resolving relations, like being given ‘the kitchen is north of the bathroom. What is
north of the bathroom?. A similar but considerably more complex task is Task 19
(Path finding): ‘the kitchen is north of the bathroom. How to get from the kitchen to
the bathroom?’. It is the ‘flipping’ that adds to the complexity. Also, here the task
is to produce directions (with multiple steps), where in the relation resolution the
network just had to produce the resolvent.
The next task addresses binary answer questions in natural language. Another
interesting task is called ‘counting’, and the information given contains a single
agent picking up and dropping stuff. The network has to count how many items
he has in his hands at the end of the sequence. The next three tasks are based on
negation, conjunction and using three-valued answering (‘yes’, ‘no’, ‘maybe’). The
tasks which address coreference resolution follow. Then come the tasks for time rea-
soning, positional reasoning and size reasoning (resembling Winograd sentences3),
and tasks dealing with basic syllogistic deduction and induction. The last task is to
resolve the agent’s motivation.
The authors of the dataset tested a number of methods against the data, but the
results for plain (non-tweaked) memory networks[10] are the most interesting, since
they represent what a pure connectionist approach can achieve. We reproduce the
list of accuracies for plain memory networks [12], and refer the reader to the original
paper for other results.
3Winograd sentences are sentences of a particular form, whare the computer should resolve the
coreference of a pronoun. They were proposed as an alternative to the Turing test, since the turing
test has some deep flaws (deceptive behaviour is encouraged), and it is hard to quantify its results
and evaluate it on a large scale. Winograd sentences are sentances of the form ‘I tried to put the
book in the drwer but it was too [big/small]’, and they are named after Terry Winograd who first
considered them in the 1970s [13].

182
10
An Overview of Different Neural Network Architectures
1. Single supporting fact: 100%
2. Two supporting facts: 100%
3. Three supporting facts: 20%
4. Two argument relations: 71%
5. Three argument relations: 83%
6. Yes-no questions: 47%
7. Counting: 68%
8. Lists: 77%
9. Simple negation: 65%
10. Indefinite knowledge: 59%
11. Basic coreference: 100%
12. Conjunction: 100%
13. Compound coreference: 100%
14. Time reasoning: 99%
15. Basic deduction: 74%
16. Basic induction: 27%
17. Positional reasoning: 54%
18. Size reasoning: 57%
19. Path Finding: 0%
20. Agent’s motivations: 100%
These results point at a couple of things. First, it is amazing how well memory
networks address coreference resolution. It is also remarkable how well the memory
network performs on pure deduction. But the most interesting part is how the prob-
lems arise from inference-heavy tasks where deduction has to be applied to obtain
the result (as opposed to basic deduction, where the emphasis is on form). The most
representative of these tasks are path finding and size reasoning. We find it inter-
esting since memory networks have a memory component, but not a component for
reasoning, and it would seem that memory is more helpful in form-based reasoning
such as deduction. It is also interesting that the tweaked memory network jumped to
100% on induction but dropped to 73% on deduction. The question on how to get a
neural network to reason seems to be of paramount importance in getting past these
benchmarks made by memory networks.
References
1. J.J. Hopfield, Neural networks and physical systems with emergent collective computational
abilities. Proc. Nat. Acad. Sci. U.S.A 79(8), 2554–2558 (1982)
2. D.H. Ackley, G.E. Hinton, T. Sejnowski, A learning algorithm for boltzmann machines. Cogn.
Sci. 9(1), 147–169 (1985)
3. P. Smolensky, Information processing in dynamical systems: foundations of harmony theory, in
Parallel Distributed Processing: Explorations in the Microstructure of Cognition, ed. by D.E.
Rumelhart, J.L. McClelland, the PDP Research Group, (MIT Press, Cambridge)

References
183
4. G.E. Hinton, S. Osindero, Y.-W. Teh, A fast learning algorithm for deep belief nets. Neural
Comput. 18(7), 1527–1554 (2006)
5. Y. Bengio, P. Lamblin, D. Popovici, H. Larochelle, Greedy layer-wise training of deep networks,
in Proceedings of the 19th International Conference on Neural Information Processing Systems
(MIT Press, Cambridge, 2006), pp. 153–160
6. Y. Bengio, Learning deep architectures for AI. Found. Trends Mach. Learn. 2(1), 1–127 (2009)
7. I. Goodfellow, Y. Bengio, A. Courville, Deep Learning (MIT Press, Cambridge, 2016)
8. W. Bechtel, A. Abrahamsen, Connectionism and the Mind: Parallel Processing, Dynamics and
Evolution in Networks (Blackwell, Oxford, 2002)
9. A. Graves, G. Wayne, I. Danihelka, Neural turing machines (2014), arXiv:1410.5401
10. J. Weston, S. Chopra, A. Bordes, Memory networks, in ICLR (2015), arXiv:1410.3916
11. S. Sukhbaatar, A. Szlam, J. Weston, End-to-end memory networks (2015), arXiv:1503.08895
12. J. Weston, A. Bordes, S. Chopra, A.M. Rush, B. van Merriënboer, A. Joulin, T. Mikolov,
Towards ai-complete question answering: A set of prerequisite toy tasks, in ICLR (2016),
arXiv:1502.05698
13. T. Winograd, Understanding Natural Language (Academic Press, New York, 1972)

11
Conclusion
11.1 An Incomplete Overview of Open Research Questions
We conclude this book with a list of open research questions. A similar list, from
which we have borrowed some of the problems we present here, can be found in [1].
We were hoping to compile a diverse list to show how rich and diverse research in
deep learning can be. The problems we find most intriguing are:
1. Can we find something else than gradient descent as a basis for backpropagation?
Can we find something as an alternative to backpropagation as a whole for weight
updates?
