
46
2
Mathematical and Computational Prerequisites
as the elements in a list. You can put anything as a value, but there are restric-
tions on what can be used as a key: only strings, chars, ints and floats—no
dictionaries or lists are allowed as keys. Say we want to retrieve the last ele-
ment of the above dictionary (the one with the key ’c’). To do so we write
retrieved_value=myDict[’c’]. If we want to insert a new element, we
cannot use append() since we have to specify a key. To insert a new element we
simply tell Python myDict[’new_key’]=’new_value’. You can use any-
thing you like for the value, but remember the restrictions on keys. You initialize a
blank dictionary the same way you would a list, but with curly braces.
We must make a remark. Remember that we said earlier that you can represent
vectors with lists. We can also use lists to represent trees (the mathematical struc-
tures), but for graphs we need dictionaries. Labelled trees can be represented in a
variety of ways but the most common is to use the members of the list to represent
the branching. This means that the whole list represents the root, its elements rep-
resent the nodes that come after the root, its elements the nodes that come after and
so on. This means that tree_as_list[1][2][3][0][4] represents a branch,
namely the branch you have when you take the second branch from the root, the
third branch after that, the fourth after that, the first after that and the fifth after that
(remember that Python starts indexing with 0). For a graph, we use the node labels as
keys and then in the values we pass on a list containing all nodes which are accessible
for the given node. Therefore, if we have an element of the dictionary 3:[1,4],
means that from the node labelled 3 we can access nodes labelled 1 and 4.
Python has built-in functions and defined functions, but there are a lot of other
functions, data structures and methods, and they are available from external libraries.
Some of them are a part of the basic Python bundle, like the module time, and all
you have to do is write import time at the beginning of the Python file or when
you start the Python interpreter command line. Some of them have to be installed
first via pip. We have advised you to install Anaconda. Anaconda is simply Python
with some of the most common scientific libraries pre-installed. Anaconda has a lot
of useful libraries, but we need TensorFlow and Keras on top of that, so we have
installed them with pip. When we will be writing code, we will import them with
lines such as import numpy as np, which imports the whole Numpy library (a
library for fast computation with arrays), but also assigns np as a quick name with
which we shall refer to Numpy throughout the current Python file.40 It is a common
omission to leave out an import statement, so be sure to check all import statements
you are using.
Let us see another very important block, the if-block. The if-block is a simple
block of code used for forking in the code. This type of block is very simple and
self-explanatory, so we proceed to an example:
40Note that even though the name we assign to a library is arbitrary, there are standard abbreviations
used in the Python community. Examples are np for Numpy, tf for TensorFlow, pd for Pandas
and so on. This is important to know since on StackOverflow you might find a solution but without
the import statements. So if the solution has np somewhere in it, it means that you should have a
line which imports Numpy with the name np.

2.6
A Brief Overview of Python Programming
47
if condition==1:
return 1
elif condition==0:
print("Invalid input")
else:
print("Error")
Every if-block depends on a statement. In our case, this is the statement that
a variable named condition has the value 0 or 1 assigned to it. The block then
evaluates the statement condition==1 (to see whether the value in condition
is equal to 1), and if it is true, it continues to the indented part. We have specified
this to be just return 1, which means that the output of the whole function where
this if-block lives will be 1. If the statement condition==1 is false, Python will
continue to the elif part. elif is just ‘else-if’, which means that you can give it
another statement to check, and we pass in the statement condition==0. If this
statement evaluates to true, then it will print the string "Invalid input", and
return nothing.41 In an if-block, we must have exactly one if, either zero or one
else, and as many elif as we like (possibly none). The else is here to telly
Python what to do if neither of our conditions is met (the two conditions we had are
condition==0 and condition==1). Note that the variable name condition
and the conditions themselves are entirely arbitrary and you can use whatever makes
sense for your program. Also, notice that each one of them ends with :, and the
omission of the colon is a frequent beginner’s bug.
The for-loop is the main loop in Python used to apply the same procedure to all
members of an iterable. Let us see an example:
someListOfInts = [0,1,2,3,4,5]
for item in someListOfInts:
newvalue = 10*item
print(newvalue)
print(newvalue)
The first line defines the loop: it has a for part which tells Python that it is a
for-loop, and right after it has a dummy variable which we called item. The value
of this variable will be changed after each pass and will be subsequently assigned
the value None after the loop is over. The someListOfInts is a list of ints. It
is more usual to create a list of ints with the function range(k,m), where k is
the starting point (it may be omitted, and then it defaults to 0), and m is the bound:
range(2,9) produces the list [2,3,4,5,6,7,8].42 The indented lines of code
do something with every item, in our case they multiply them by 10 and print
41In Python, technically speaking, every function returns something. If no return command is issued,
the function will return None which is a special Python keyword for ‘nothing’. This a subtle point,
but also the cause of many intermediate-level bugs, and therefore it is worth noting it now.
42In Python 3, this is no longer exactlythat list, but this is a minor issue at this stage of learning
Python. What you need to know is that you can count on it to behave exactly like that list.

48
2
Mathematical and Computational Prerequisites
them out. The last non-indented line of the code will simply show you the last (and
current) value of newvalue after the whole for-loop. Notice that if you substitute
