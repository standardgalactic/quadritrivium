someListOfInts in the for-loop with range(0,6) or range(6), the code
will work exactly the same (of course, you can then delete the someListOfInts
= [0,1,2,3,4,5] line). Feel free to experiment with the for-loop, these loops
are very important.
We have seen how the for-loop works. It takes an iterable (or produces one
with the range() function), and does something (which is to be specified by the
indented block) with the elements from the iterable. There is another loop called
the while-loop. The while-loop does not take an iterable, but a statement, and
executes the commands from the indented block as long as the statement is true. This
‘as long as the statement is true’ is less weird than it sounds, since you want to put a
statement which will be modified in the indented block (and whose truth value will
change with subsequent passes). Imagine a simple thermostat program told to heat
up the room to 20 degrees:
room_temperature = 14
while room_temperature != 20:
room_temperature = room_temperature + 2
print(room_temperature)
Notice the fragility of this code. If you put a room_temperature of 15, the
code will run forever. This shows how careful you must be to avoid possible huge
errors that might happen if you change slightly some parameter. This is not a unique
feature of while loops, and it is a universal programming problem, but here it is
very easy to show this pitfall, and how to easily correct it. To correct this bug,43 you
could but while room_temperature < 20:, or use a temperature update
step of 1 instead of 2, but the former method (< instead of !=) is more robust.
In general computer science terminology, a valid Python dictionary is called a
JSON object.44 This may seem weird, but dictionaries are a great way to store infor-
mation across various applications and languages, and we want other applications
not using Python or JavaScript to be able to work with information stored in a
JSON. To make a JSON object, write a valid dictionary in a plain text file called
something.json. You can do it with the following code:
employees={"Tom":{"height":176.6}, "Ron":{"height":
180, "skills":["DIY", "Saxophone playing"], "room":12},
"April":"Employee did not fill the form"}
with open("myFile.json", "w") as json_file:
json_file.write(str(employees))
43Notice that the code, as it stands now, does not have this problem, but this is a bug since a problem
would arise if the room temperature turns out to be an odd number, and not an even number as we
have now.
44JSON stands for JavaScript Object Notation, and JSONs (i.e. Python dictionaries) are referred to
as objects in JavaScript.

2.6
A Brief Overview of Python Programming
49
You can additionally specify a path to the file, so you can write Skansi/
Desktop/myFile.json. If you do not specify a path, the file will be written
in the folder you are currently in. The same holds for opening a file. To open a JSON
file, use the following code (you can use the encoding argument when writing or
reading the file):
with open("myFile.json", ’r’, encoding=’utf-8’) as text:
for line in text:
wholeJSON = eval(line)
You can modify this code to write any text, not just JSON, but then you need
to go through all the lines when opening, and when writing to a file you might
want to use "a" as the argument so that it appends (the "w" just overwrites it). This
concludes our brief overview of Python. With a bit of help from the internet and some
experimenting, this could be enough to get started without any previous knowledge,
but feel free to seek out a beginner’s course online since a detailed introduction to
Python is beyond the scope of this book. We recommend David Evans’ free course on
Udacity (www.udacity.com, Introduction to Computer Science), but any other
good introductory course will serve the purpose.
References
1. J.R. Hindley, J.P. Seldin, Lambda-Calculus and Combinators: An Introduction (Cambridge Uni-
versity Press, Cambridge, 2008)
2. G.S. Boolos, J.P. Burges, R.C. Jeffrey, Computability and Logic (Cambridge University Press,
Cambridge, 2007)
3. P. Renteln, Manifolds, Tensors, and Forms: An Introduction for Mathematicians and Physicists
(Cambridge University Press, Cambridge, 2013)
4. R. Courant, J. Fritz, Introduction to Calculus and Analysis, vol. 1 (Springer, New York, 1999)
5. S. Axler, Linear Algebra Done Right (Springer, New York, 2015)
6. P.N. Klein, Coding the Matrix (Newtonian Press, London, 2013)
7. H. Pishro-Nik, Introduction to Probability, Statistics, and Random Processes (Kappa Books
Publishers, Blue Bell, 2014)
8. D.P. Bertsekas, J.N. Tsitsiklis, Introduction to Probability (Athena Scientific, Nashua, 2008)
9. S.M. Stigler, Laplace’s 1774 memoir on inverse probability. Stat. Sci. 1, 359–363 (1986)
10. A. Hald, Laplace’s Theory of Inverse Probability, 1774–1786 (Springer, New York, 2007), pp.
33–46
11. W. Rautenberg, A Concise Introduction to Mathematical Logic (Springer, New York, 2006)
12. D. van Dalen, Logic and Structure (Springer, New York, 2004)
13. A.M. Turing, On computable numbers, with an application to the Entscheidungsproblem. Proc.
Lond. Math. Soc. 42(2), 230–265 (1936)

3
Machine Learning Basics
Machine learning is a subfield of artificial intelligence and cognitive science. In arti-
ficial intelligence, it is divided into three main branches: supervised learning, unsu-
pervised learning and reinforcement learning. Deep learning is a special approach
in machine learning which covers all three branches and seeks also to extend them
to address other problems in artificial intelligence which are not usually included in
machine learning such as knowledge representation, reasoning, planning, etc. In this
book, we will cover supervised and unsupervised learning.
In this chapter, we will be providing the general machine learning basics. These
are not part of deep learning, but prerequisites that have been carefully chosen to
enable a quick and easy grasp of the elementary concepts needed for deep learning.
This is far from a complete treatment, and for a more comprehensive treatment
we refer the reader to [1] or any other classical machine learning textbook. The
reader interested in the GOFAI approach to knowledge representation and reasoning
should consult [2]. The first part of this chapter is devoted to supervised learning and
its terminology, while the last part is about unsupervised learning. We will not be
covering reinforcement learning and we refer the reader to [3] for a comprehensive
