know everything for the one-hot part by simply noting ‘3’ as the column number,
which takes less space than writing ‘0,0,1’. The bag of words is different. Here, we
take the word count for each fragment, which can be more than 1. Also, we need to
use the bag of words on the entire dataset which means that we have to encode the
training and test set together. This means that words that occur only in the test set
will have 0in the whole training set. Also, note that since most classifiers require
that all samples have the same dimensionality (and feature names), when we will
use the algorithm to predict, we will have to toss away any new word which is not
in the trained model to be able to feed the data to the algorithm.
What they both have in common is that they expand the dimensions considerably
and almost everywhere they will have the value 0. When we encode data like this we
say, we have a sparse encoding. This means that a lot of features will be meaningless
and that we want our classifier to dismiss them as soon as possible. We will see later
how some techniques like PCA and L1 regularization can be useful when confronted
with a dataset which is sparsely encoded. Also, notice how we use the expansions
of dimensions of the space to try to capture ‘semantics’ by counting words.

References
77
References
1. R. Tibshirani, T. Hastie, The Elements of Statistical Learning: Data Mining, Inference, and
Prediction, 2nd edn. (Springer, New York, 2016)
2. F. van Harmelen, V. Lifschitz, B. Porter, Handbook of Knowledge Representation (Elsevier
Science, New York, 2008)
3. R.S. Sutton, A.G. Barto, Reinforcement Learning: An Introduction (MIT Press, Cambridge,
1998)
4. J.R. Quinlan, Induction of decision trees. Mach. Learn. 1, 81–106 (1986)
5. M.E. Maron, Automatic indexing: an experimental inquiry. J. ACM 8(3), 404–417 (1961)
6. D.R. Cox, The regression analysis of binary sequences (with discussion). J. Roy. Stat. Soc. B
(Methodol.) 20(2), 215–242 (1958)
7. P.J. Grother, NIST special database 19: handprinted forms and characters database (1995)
8. Y. LeCun, L. Bottou, Y. Bengio, P. Haffner, Gradient-based learning applied to document
recognition. Proc. IEEE 86(11), 2278–2324 (1998)
9. M.A. Nielsen, Neural Networks and Deep Learning (Determination Press, 2015)
10. P.N. Klein, Coding the Matrix (Newtonian Press, London, 2013)
11. I. Färber, S. Günnemann, H.P. Kriegel, P. Kroöger, E. Müller, E. Schubert, T. Seidl, A. Zimek.
On using class-labels in evaluation of clusterings, in MultiClust: Discovering, Summarizing,
and Using Multiple Clusterings, ed. by X.Z. Fern, I. Davidson, J. Dy (ACM SIGKDD, 2010)
12. J. Dunn, Well separated clusters and optimal fuzzy partitions. J. Cybern. 4(1), 95–104 (1974)
13. K. Pearson, On lines and planes of closest fit to systems of points in space. Phil. Mag. 2(11),
559–572 (1901)
14. C. Manning, H. Schütze, Foundations of Statistical Natural Language Processing (MIT Press,
Cambridge, 1999)
15. D. Jurafsky, J. Martin, Speech and Language Processing (Prentice Hall, New Jersey, 2008)
16. S. P. Lloyd, Least squares quantization in PCM. IEEE Transactions on Information Theory,
28(2), 129–137 (1982)
17. E. W. Forgy, Cluster analysis of multivariate data: efficiency versus interpretability of classifi-
cations. Biometrics, 21(3), 768–769 (1965)

4
Feedforward Neural Networks
4.1 Basic Concepts and Terminology for Neural Networks
Backpropagation is the core method of learning for deep learning. But before we
can start exploring backpropagation, we must define a number of basic concepts
and explain their interactions. Deep learning is machine learning with deep artificial
neural networks, and the goal of this chapter explains how shallow neural networks
work. We will also refer to shallow neural networks as simple feedforward neural
networks, although the term itself should be used to refer to any neural network
which does not have a feedback connection, not just shallow ones. In this sense, a
convolutional neural network is also a feedforward neural network but not a shallow
neural network. In general, deep learning consists of fixing the problems which arise
when we try to add more layers to a shallow neural network. There are a number
of other great books on neural networks. The book [1] offers the reader a rigorous
treatmentwithmostofthemathematicaldetailswrittenout,whilethebook[2]ismore
geared towards applications, but gives an overview of some connected techniques
that we have not explored in this volume such as the Adaline. The book [3] is a great
book written by some of the foremost experts in deep learning, and this book can be
seen as a natural next step after completing the present volume. One final book we
mention, and this book is perhaps the most demanding, is [4]. This is a great book,
but it will place serious demands on the reader, and we suggest to tackle it after [3].
There are a number of other excellent books, but we offered here our selection which
we believe will best augment the material covered in the present volume.
Any neural network is made of simple basic elements. In the last chapter, we
encountered a simple neural network without even knowing it: the logistic regression.
A shallow artificial neural network consists of two or three layers, anything more than
that is considered deep. Just like a logistic regression, an artificial neural network
has an input layer where inputs are stored. Every element which holds an input is
called a ‘neuron’. The logistic regression then has a single point where all inputs are
© Springer International Publishing AG, part of Springer Nature 2018
S. Skansi, Introduction to Deep Learning, Undergraduate Topics
in Computer Science, https://doi.org/10.1007/978-3-319-73004-2_4
79

80
4
Feedforward Neural Networks
directed, and this is its output (this is also a neuron). The same holds for a simple
neural network, but it can have more than one output neuron making the output layer.
What is different from logistic regression is that a ‘hidden’ layer may exist between
the input and output layer. Depending on the point of view, we can think of a neural
network being a logistic regression with not one but multiple workhorse neurons,
and then after them, a final workhorse neuron which ‘coordinates’ their results, or
we could think of it as a logistic regression with a whole layer of workhorse neurons
squeezed between the inputs and the old workhorse neuron (which was already
present in the logistic regression). Both of these views are useful for developing
intuition on neural networks, and keep this in mind in the remainder of this chapter,
since we will switch form one view to the other if it becomes convenient.
The structure of a simple three-layer neural network shown in Fig.4.1. Every
neuron of one layer is connected to all neurons of the next layer, but it gets multiplied
by a so-called weight which determines how much of the quantity from the previous
